{"version":3,"sources":["common/values.ts","common/routing.ts","common/utils.ts","components/info/ChangeCoordinatesCard.tsx","components/info/CoordinatesCard.tsx","components/info/CoordinateInterface.tsx","img/logo-192.png","components/info/info.md","components/info/MarkdownOverrides.tsx","components/info/InfoDialog.tsx","dist/clientDetect.js","shaders/newSmoothJuliaShader.ts","common/settings.ts","components/settings/SettingsDefinitions.tsx","components/settings/SettingsContext.tsx","theme/theme.tsx","shaders/fullVertexShader.js","components/render/WebGLCanvas.tsx","components/render/MinimapViewer.tsx","components/render/JuliaRenderer.tsx","shaders/newSmoothMandelbrotShader.ts","components/info/FPSCard.tsx","components/render/MandelbrotRenderer.tsx","serviceWorkerRegistration.ts","components/ServiceWorkerWrapper.tsx","components/settings/SettingsMenu.tsx","App.tsx","index.tsx"],"names":["viewerOrigin","xy","z","theta","defaultMandelbrotStart","defaultJuliaStart","defaultViewerStart","m","j","springsConfigs","default","mass","tension","friction","precision","zoom","rot","user","toFloatDisplay","n","p","toFixed","toFloatDisplayShort","NamedHashURLViewer","name","v","this","ViewerURLManager","vs","updateFromURL","asHashURL","params","currentViewerState","newV","undefined","map","toFloatDisplayDefault","updateViewer","currentLocation","window","location","hash","replace","l","viewerParams","split","filter","length","forEach","s","parsedVals","Number","some","isNaN","x","y","t","error","console","log","genericTouchBind","domTarget","controls","setDragging","xyCtrl","setControlXY","zoomCtrl","minZoom","maxZoom","setControlZoom","rotCtrl","setControlRot","zoomMult","getRealZoom","current","height","handlers","onPinch","event","da","vdva","down","movement","md","ma","delta","first","origin","memo","getValue","a","o","preventDefault","newZ","_","clamp","deg","newZclamp","realZoom","vScale","subV","relMove","addV","vRotate","immediate","config","Math","PI","onWheel","my","active","shiftKey","newT","onDrag","direction","pinching","velocity","cancel","last","vecXY","eventOptions","passive","capture","warpToPoint","Rgb255ColourToFloat","c","r","g","b","e","ChangeCoordinatesCard","props","useState","setXY","setZoom","setTheta","Card","style","width","zIndex","position","padding","display","flexDirection","flexShrink","Grid","container","alignItems","TextField","size","onChange","target","value","type","defaultValue","inputProps","step","label","justify","min","Button","marginTop","onClick","mandelbrot","CoordinatesCard","marginBottom","Typography","align","fontFamily","fontSize","span","interpolate","CoordinateInterface","Grow","in","show","right","top","margin","mdOverrides","children","paragraph","title","href","Link","DialogInfoMarkdown","infoMdText","setInfoMdText","useEffect","fetch","infoTextMarkdown","then","response","text","options","wrapper","React","Fragment","overrides","DialogTitle","withStyles","theme","createStyles","root","spacing","image","marginRight","closeButton","marginLeft","color","palette","grey","classes","onClose","other","disableTypography","className","src","MandelbrotMapsLogo","alt","variant","IconButton","aria-label","DialogContent","MuiDialogContent","DialogActions","MuiDialogActions","Alert","elevation","DialogDivider","Divider","InfoDialog","ctrl","open","setOpen","snackBarOpen","setSnackBarOpen","handleClose","clientData","useMemo","screenSize","screen","windowSize","innerWidth","innerHeight","nameOffset","verOffset","ix","nVer","navigator","appVersion","nAgt","userAgent","browser","appName","version","parseFloat","majorVersion","parseInt","indexOf","substring","lastIndexOf","toLowerCase","toUpperCase","mobile","test","cookieEnabled","document","cookie","os","clientStrings","id","cs","osVersion","exec","gl","debugInfo","gpuVendor","renderer","system","device","canvas","createElement","getContext","getExtension","getParameter","UNMASKED_VENDOR_WEBGL","UNMASKED_RENDERER_WEBGL","browserVersion","browserRelease","platform","dpr","devicePixelRatio","gpu","clientDetect","writeClientDataToClipboard","data","JSON","stringify","clipboard","writeText","prompt","Dialog","aria-labelledby","maxWidth","PaperProps","maxHeight","dividers","Box","TableContainer","component","Paper","onContextMenu","Table","TableHead","TableRow","TableCell","colSpan","TableBody","Object","entries","k","userSelect","String","process","startIcon","Snackbar","autoHideDuration","reason","severity","survey","link","rel","textDecoration","autoFocus","newSmoothJuliaShader","maxI","AA","B","defaultSettings","showMinimap","showCrosshair","showCoordinates","showFPS","useDPR","useAA","colour","settingsWidgets","settings","checked","control","Switch","labelPlacement","Slider","max","valueLabelDisplay","marks","SettingsContext","createContext","setSettings","SettingsProvider","Provider","createMuiTheme","MuiSwitch","MuiButton","borderRadius","primary","main","colors","blue","secondary","red","info","shape","contrastBoxShadow","fullscreenVertexArray","numComponents","WebGLCanvas","forwardRef","refAny","canvasRef","useRef","renderRequestRef","bufferInfo","programInfo","u","setFps","fps","useCallback","mini","setupCanvas","debug","addEventListener","compileShader","ctx","twgl","fragShader","frames","elapsedTime","interval","render","time","prog","buff","viewport","uniforms","resolution","u_zoom","u_c","u_xy","u_maxI","u_theta","u_colour","useProgram","program","requestAnimationFrame","cancelAnimationFrame","ref","cursor","dragging","displayName","useStyles","makeStyles","MinimapViewer","rest","ButtonBase","left","bottom","boxShadow","overflow","JuliaRenderer","miniCanvasRef","miniFragShader","gtb","useGesture","Consumer","makeCrosshair","stroke","radius","standardCrosshair","miniCrosshair","newSmoothMandelbrotShader","crosshairShape","FPSCard","div","MandelbrotRenderer","isLocalhost","Boolean","hostname","match","register","URL","swUrl","headers","contentType","get","status","serviceWorker","ready","registration","unregister","reload","registerValidSW","catch","checkValidServiceWorker","onupdatefound","installingWorker","installing","onstatechange","state","controller","onUpdate","onSuccess","ServiceWorkerWrapper","showReload","setShowReload","waitingWorker","setWaitingWorker","onSWUpdate","waiting","anchorOrigin","vertical","horizontal","action","postMessage","settingsButton","popoverCardGrid","paddingTop","paddingBottom","paddingRight","paddingLeft","sliderControl","GroupDivider","GroupTitle","item","icon","SettingsMenu","anchorEl","setAnchorEl","ResetButton","aria-controls","reset","AboutButton","toggleInfo","Fab","aria-haspopup","currentTarget","Backdrop","Popover","keepMounted","transformOrigin","ExtensionIcon","widgets","PhotoIcon","getSettingsWidgetsGrouping","FormGroup","widget","FormControlLabel","slice","val","prevState","App","isClient","getSize","setWindowSize","handleResize","removeEventListener","useWindowSize","loc","setLoc","handler","to","useHashLocation","updateBrowserHash","history","replaceState","urlManager","updateHash","asFullHashURL","updateM","updateJ","mandelbrotControls","useSpring","onRest","juliaControls","showInfo","setShowInfo","ThemeProvider","xs","ReactDOM","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.ce6ea080.chunk.js","sourcesContent":["import { RgbColor } from 'react-colorful';\nimport { ViewerLocation } from './types';\n\n// this multiplier subdivides the screen space into smaller increments\n// to allow for velocity calculations to not immediately decay, due to the\n// otherwise small scale that is being mapped to the screen.\n// export const screenScaleMultiplier = 1e-7;\n// TL;DR this was a workaround - react-spring allows for \"precision\"\n//       to be defined in each spring configuration, which is:\n//       > The smallest velocity before the animation is considered \"not moving\"\nexport const defaultPrecision = 1e-7;\n\nexport const viewerOrigin: ViewerLocation = {\n  xy: [0, 0],\n  z: 1,\n  theta: 0,\n};\n\nexport const defaultMandelbrotStart: ViewerLocation = {\n  xy: [0.2361652, 0.5633767],\n  z: 4,\n  theta: 0.2,\n};\nexport const defaultJuliaStart: ViewerLocation = {\n  xy: [0.4364131, -0.6468786],\n  z: 4,\n  theta: 2.12,\n};\n// indexable viewer start object\nexport const defaultViewerStart: { [k: string]: ViewerLocation } = {\n  m: defaultMandelbrotStart,\n  j: defaultJuliaStart,\n};\n\nexport const springsConfigs = {\n  /** used when the values are animated to a point, includes decay */\n  default: {\n    xy: { mass: 1, tension: 500, friction: 75, precision: defaultPrecision },\n    zoom: { mass: 1, tension: 300, friction: 40 },\n    rot: { mass: 1, tension: 400, friction: 75 },\n  },\n  /** used when a user is interacting with the view */\n  user: {\n    xy: { mass: 1, tension: 2000, friction: 75, precision: defaultPrecision },\n    zoom: { mass: 1, tension: 1200, friction: 75 },\n    rot: { mass: 1, tension: 1200, friction: 75 },\n  },\n  // default and decay are merged to give them single \"non-user\" values\n  // decay: {\n  //   /** used after the user has let go of the view, decaying */\n  //   xy: { mass: 1, tension: 500, friction: 75 },\n  //   zoom: { mass: 1, tension: 300, friction: 50 },\n  //   rot: { mass: 1, tension: 400, friction: 75 },\n  // },\n};\n\nexport const defaultShadingColour: RgbColor = { r: 0, g: 180, b: 255 };\n\n// export const defaultSpringConfig = { mass: 1, tension: 100, friction: 200 };\n\n// export const xyCtrlSpringConfig = { mass: 1, tension: 2000, friction: 100 };\n// export const xyCtrlSpringDecayConfig = { mass: 1, tension: 500, friction: 75 };\n\n// default number of numbers after the decimal point\nexport const defaultFloatFixedPrecision = 7;\nexport const shortFloatFixedPrecision = 2;\n\nexport const toFloatDisplay = (n: number, p: number): number => +n.toFixed(p);\n\nexport const toFloatDisplayDefault = (n: number): number =>\n  toFloatDisplay(n, defaultFloatFixedPrecision);\n\nexport const toFloatDisplayShort = (n: number): number =>\n  toFloatDisplay(n, shortFloatFixedPrecision);\n","import { useCallback, useEffect, useState } from 'react';\nimport { ReactUseStateType, ViewerLocation, XYType } from './types';\nimport {\n  defaultJuliaStart,\n  defaultMandelbrotStart,\n  defaultViewerStart,\n  toFloatDisplayDefault,\n  toFloatDisplayShort,\n} from './values';\n\nexport class NamedHashURLViewer {\n  name: string;\n  v: ViewerLocation;\n\n  constructor(name: string, v: ViewerLocation) {\n    this.name = name;\n    this.v = v;\n  }\n\n  /**\n   * convert a viewer's state into a defined URL representation\n   * @param namedViewer the viewer object to be converted\n   */\n  asHashURL(): string {\n    const { xy, z, theta } = this.v;\n    return `/${this.name}@${xy[0]},${xy[1]},${z},${theta}`;\n  }\n}\n\nexport class ViewerURLManager {\n  vs: {\n    [k: string]: NamedHashURLViewer;\n  };\n\n  constructor() {\n    this.vs = {};\n    this.updateFromURL();\n  }\n\n  asFullHashURL(): string {\n    return `#${this.vs['m'].asHashURL()}${this.vs['j'].asHashURL()}`;\n  }\n\n  updateFromURL(): void {\n    const params = currentViewerState();\n    this.vs['m'] = new NamedHashURLViewer(\n      'm',\n      params['m'] || { ...defaultMandelbrotStart },\n    );\n    this.vs['j'] = new NamedHashURLViewer('j', params['j'] || { ...defaultJuliaStart });\n  }\n\n  updateViewer(name: string, v: Partial<ViewerLocation>): void {\n    // console.log('updateViewer');\n    const { xy, z, theta } = v;\n    // const [[{ xy }], [{ z }], [{ theta }]] = [xyC]\n    // const [xy] = [xyCtrl?.xy];\n    const newV = this.vs[name].v;\n    if (xy !== undefined) newV.xy = xy.map((n) => toFloatDisplayDefault(n)) as XYType;\n    if (z !== undefined) newV.z = toFloatDisplayShort(z);\n    if (theta !== undefined) newV.theta = toFloatDisplayShort(theta);\n\n    this.vs[name].v = newV;\n  }\n\n  updateFromViewer(m: Partial<ViewerLocation>, j: Partial<ViewerLocation>): void {\n    this.updateViewer('m', m);\n    this.updateViewer('j', j);\n  }\n}\n\n// returns the current hash location in a normalized form\n// (excluding the leading '#' symbol)\nexport const currentLocation = (): string => {\n  // console.log(window.location);\n  const l = window.location.hash.replace('#', '') || '';\n  return l;\n};\n\nexport const currentViewerState = (): { [k: string]: ViewerLocation } => {\n  const l = currentLocation();\n  // key 'k' used to index which viewer is parsed\n  const viewerParams: { [k: string]: ViewerLocation } = {};\n  // actually parse the hash\n  try {\n    // separate each viewer's string, remove the empty string from the start\n    // (/abc/123) split => ['', 'abc', '123']\n    const qs = l.split('/').filter((v) => v.length > 0);\n    qs.forEach((s) => {\n      // viewer [name, params] is separated by @ sign\n      // assume this first split must succeed for any input to be parseable\n      const [v, params] = s.split('@');\n      const parsedVals = params.split(',').map(Number);\n      // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/some\n      if (parsedVals.some(isNaN)) {\n        // at least one parsing fail, stop now\n        viewerParams[v] = defaultViewerStart[v];\n      } else {\n        const [x, y, z, t] = parsedVals;\n        viewerParams[v] = { xy: [x, y] as XYType, z: z, theta: t };\n      }\n    });\n  } catch (error) {\n    // uhhhh, something's wrong\n    console.log(error);\n  }\n  return viewerParams;\n};\n\n// non-reloading hash change\nexport const useHashNavigator = (): ((to: string) => void) =>\n  useCallback((to) => window.history.replaceState(null, document.title, to), []);\n\n// https://github.com/molefrog/wouter#customizing-the-location-hook\nexport const useHashLocation = (): ReactUseStateType<string> => {\n  const [loc, setLoc] = useState(currentLocation());\n\n  useEffect(() => {\n    // this function is called whenever the hash changes\n    const handler = () => setLoc(currentLocation());\n\n    // subscribe to hash changes\n    window.addEventListener('hashchange', handler);\n    return () => window.removeEventListener('hashchange', handler);\n  }, []);\n\n  // remember to wrap your function with `useCallback` hook\n  // a tiny but important optimization\n  const navigate = useCallback((to) => (window.location.hash = to), []);\n\n  return [loc, navigate];\n};\n","import _ from 'lodash';\nimport { RefObject, useCallback, useEffect, useState } from 'react';\nimport { RgbColor } from 'react-colorful';\nimport { addV, subV } from 'react-use-gesture';\nimport {\n  FullGestureState,\n  Handlers,\n  StateKey,\n  UseGestureConfig,\n  Vector2,\n} from 'react-use-gesture/dist/types';\nimport { Vector, vRotate, vScale } from 'vec-la-fp';\nimport { RgbFloatColour, ViewerControlSprings, ViewerLocation } from './types';\nimport { springsConfigs } from './values';\n\n// https://usehooks.com/useWindowSize/\nexport function useWindowSize(): { width?: number; height?: number } {\n  const isClient = typeof window === 'object';\n\n  const getSize = useCallback(\n    () => ({\n      width: isClient ? window.innerWidth : undefined,\n      height: isClient ? window.innerHeight : undefined,\n    }),\n    [isClient],\n  );\n\n  const [windowSize, setWindowSize] = useState(getSize);\n\n  useEffect(() => {\n    if (!isClient) {\n      // return false;\n      return () => {\n        // do nothing\n      };\n    }\n\n    function handleResize() {\n      setWindowSize(getSize());\n    }\n\n    window.addEventListener('resize', handleResize);\n    return () => window.removeEventListener('resize', handleResize);\n  }, [getSize, isClient]); // Empty array ensures that effect is only run on mount and unmount\n\n  return windowSize;\n}\n\nexport interface GenericTouchBindParams {\n  domTarget: RefObject<HTMLCanvasElement>;\n  controls: ViewerControlSprings;\n  // screenScaleMultiplier: number;\n  // gl: any,\n  setDragging: React.Dispatch<React.SetStateAction<boolean>>;\n}\n\nexport interface GenericTouchBindReturn {\n  handlers: Handlers;\n  config: UseGestureConfig;\n}\n\n// --------------------------------------------------------------------------\n// https://gist.github.com/evdokimovm/0e7163faf7c8fe24e41e6b68461e4feb\n// Convert from degrees to radians.\nconst degToRad = (deg: number): number => (deg * Math.PI) / 180;\n// Math.radians(90); // 1.5707963267948966\n\n// Convert from radians to degrees.\n// eslint-disable-next-line\nconst radToDeg = (rad: number): number => (rad * 180) / Math.PI;\n// Math.degrees(3.141592653589793); // 180\n// --------------------------------------------------------------------------\n\n// a touchbind for re-using across renderers\nexport function genericTouchBind({\n  domTarget,\n  controls,\n  setDragging,\n}: GenericTouchBindParams): GenericTouchBindReturn {\n  const [{ xy }, setControlXY] = controls.xyCtrl;\n  const [{ z, minZoom, maxZoom }, setControlZoom] = controls.zoomCtrl;\n  const [{ theta }, setControlRot] = controls.rotCtrl;\n\n  const zoomMult = { in: 3e-3, out: 1e-3 };\n\n  // used to have screenScaleMultiplier here\n  const getRealZoom = (z: number) => (domTarget.current?.height || 100) * z;\n  // * screenScaleMultiplier;\n\n  return {\n    handlers: {\n      // prevent some browser events such as swipe-based navigation or\n      // pinch-based zoom and instead redirect them to this handler\n      // onDragStart: ({ event }: FullGestureState<StateKey<'drag'>>) =>\n      //   event?.preventDefault(),\n      // onPinchStart: ({ event }: FullGestureState<StateKey<'pinch'>>) =>\n      //   event?.preventDefault(),\n      // onWheelStart: ({ event }: FullGestureState<StateKey<'wheel'>>) =>\n      //   event?.preventDefault(),\n\n      onPinch: ({\n        event,\n        da: [d, a],\n        vdva: [vd, va],\n        down,\n        // delta: [dd, da],\n        movement: [md, ma],\n        delta: [dd, da],\n        first,\n        // initial, // initial [d, a]\n        origin,\n        // movement, //: [mx, my],\n        memo = {\n          xy: xy.getValue(),\n          z: z.getValue(),\n          t: theta.getValue(),\n          a: 0,\n          o: [0, 0] as Vector2,\n        },\n      }: FullGestureState<StateKey<'pinch'>>) => {\n        // disable native browser events\n        event && event.preventDefault();\n\n        if (first) {\n          // remember the angle, location at which the pinch gesture starts\n          // memo.a = a;\n          memo.o = origin;\n        }\n\n        // console.log(subV(origin, initial));\n        // console.log(initial);\n        // console.log(origin);\n        // console.log(md);\n        // console.log(ma);\n        // const zd = md * 1e-2;\n\n        // new zoom is the product of initial zoom and a function of the delta since the pinch\n        //   (initial zoom) exponentially changed by md, with linear and exponential multipliers\n        //     linear multiplier:\n        //     exponential multiplier: scale faster as pinch becomes more distant\n        //     if decreasing, scale must decrease more slowly\n        // const em = 1.33;\n        // const newZ =\n        //   memo.z * (1 + Math.sign(md) * 1e-2 * Math.abs(md) ** (md <= 0 ? 1 / em : em)); //(1 - zdelta * Math.abs(zdelta));\n        const newZ = _.clamp(memo.z + md * 1e-2, 0.5, 100_000) ** (1 + md * 1e-3); //(1 - zdelta * Math.abs(zdelta));\n        // console.log(Math.abs(md * 1e-2));\n        // console.log(\n        //   md.toFixed(2) + ' => ' + 1e-2 * Math.abs(md) ** (md <= 0 ? 0.8 : 1.1),\n        // );\n        console.log(newZ);\n        const newZclamp = _.clamp(newZ, minZoom.getValue(), maxZoom.getValue());\n\n        const realZoom = getRealZoom(newZclamp);\n\n        // get movement of pointer origin for panning\n        const [px, py]: Vector2 = vScale(-2 / realZoom, subV(origin, memo.o));\n        const relMove: Vector2 = [px, -py];\n\n        setControlXY({\n          xy: addV(memo.xy, vRotate(theta.getValue(), relMove)),\n          immediate: false,\n        });\n\n        setControlZoom({\n          z: newZclamp,\n          immediate: false,\n          config: down ? springsConfigs.user.zoom : springsConfigs.default.zoom,\n        });\n\n        setControlRot({\n          theta: memo.t + degToRad(ma),\n          // fixes issues with wrapping around from (0) to (-2pi)\n          immediate: false,\n          config: down ? springsConfigs.user.rot : springsConfigs.default.rot,\n        });\n\n        return memo;\n      },\n\n      onWheel: ({\n        event,\n        movement: [, my],\n        active,\n        shiftKey,\n        memo = { zoom: z.getValue(), t: theta.getValue() },\n      }: FullGestureState<StateKey<'wheel'>>) => {\n        // disable native browser events\n        event && event.preventDefault();\n\n        if (shiftKey) {\n          // if shift is pressed, rotate instead of zoom\n          const newT = memo.t + my * 1.5e-3;\n\n          setControlRot({\n            theta: newT,\n            config: active ? springsConfigs.user.rot : springsConfigs.default.rot,\n            immediate: false,\n          });\n        } else {\n          // set different multipliers based on zoom direction\n          // mouse movement negative = move up the page = zoom in\n          //                                   zoom        in           out\n          const newZ = memo.zoom * (1 - my * (my < 0 ? zoomMult.in : zoomMult.out));\n\n          setControlZoom({\n            z: _.clamp(newZ, minZoom.getValue(), maxZoom.getValue()),\n            config: active ? springsConfigs.user.zoom : springsConfigs.default.zoom,\n            // reset immediate value from warp function\n            immediate: false,\n          });\n        }\n        return memo;\n      },\n\n      onDrag: ({\n        event,\n        down,\n        movement,\n        direction: [dx, dy],\n        velocity,\n        pinching,\n        last,\n        cancel,\n        memo = { xy: xy.getValue(), theta: theta.getValue() },\n      }: FullGestureState<StateKey<'drag'>>) => {\n        // disable native browser events\n        event && event.preventDefault();\n\n        // let pinch handle movement\n        if (pinching) cancel && cancel();\n        // change according to this formula:\n        // move (x, y) in the opposite direction of drag (pan with cursor)\n        // divide by canvas size to scale appropriately\n        // multiply by 2 to correct scaling on viewport (?)\n        // use screen multiplier for more granularity\n        const realZoom = getRealZoom(z.getValue());\n\n        const [px, py]: Vector = vScale(-2 / realZoom, movement);\n        // const relMove: Vector = vScale(2 / realZoom, movement);\n\n        const relMove: Vector = [px, -py];\n        // const relDir: Vector = [dx, -dy];\n\n        const t = theta.getValue();\n\n        const vecXY = addV(memo.xy, vRotate(t, relMove)); // add the displacement to the starting position\n        // const velXY = vScale(velocity, vNorm(vecXY))\n\n        setControlXY({\n          // add to the current position the relative displacement (relMove), rotated by theta,\n          // to maintain the correct displacement direction (without this it would move as if theta=0)\n          xy: vecXY,\n          // immediate: down, // immediately apply if the gesture is active\n          config: down ? springsConfigs.user.xy : springsConfigs.default.xy,\n          // reset immediate value from warp function\n          immediate: false,\n          //  {\n          //   // velocity also needs to be rotated according to theta\n          //   // -@ts-expect-error - velocity should be `[number, number]`, but only `number` allowed\n          //   // velocity: vScale(-velocity / realZoom, vRotate(t, relDir)), // set the velocity (gesture momentum)\n          //   // velocity: vMag(vScale(-velocity / realZoom, vRotate(t, relDir))), // set the velocity (gesture momentum)\n          //   // velocity: velocity / screenScaleMultiplier, // set the velocity (gesture momentum)\n          //   // mass: down ? 1 : 5,\n          //   ...xyCtrlSpringConfig,\n          //   tension: down ? xyCtrlSpringConfig.tension : xyCtrlSpringConfig.tension / 2,\n          //   // -@ts-expect-error - decay is undocumented?\n          //   // decay: true,\n          // },\n        });\n\n        // tell the renderer that it's being dragged on\n        setDragging(down);\n\n        return memo;\n      },\n    },\n    config: {\n      eventOptions: { passive: false, capture: false },\n      domTarget: domTarget,\n      // The config object passed to useGesture has drag, wheel, scroll, pinch and move keys\n      // for specific gesture options. See here for more details.\n      // drag: {\n      //   bounds,\n      //   rubberband: true,\n      // }\n    },\n  };\n}\n\n/**\n * Warps the given controller to a desired viewer location.\n * @param controls The controller to be animated\n * @param location The (partial) viewer location to warp to: xy, zoom, theta\n * @param immediate Should the update happen immediately? (Useful for testing)\n */\nexport const warpToPoint = (\n  controls: ViewerControlSprings,\n  { xy, z, theta }: Partial<ViewerLocation>,\n  immediate = false,\n): void => {\n  // can't do a simple \"if (x)\" check since values could be zero (evaluates to \"false\")\n  if (xy !== undefined) {\n    controls.xyCtrl[1]({\n      // use screen scale multiplier for a simpler API\n      xy: xy,\n      config: springsConfigs.default.xy,\n      immediate: immediate,\n    });\n  }\n  if (z !== undefined) {\n    controls.zoomCtrl[1]({\n      z: z,\n      config: springsConfigs.default.zoom,\n      immediate: immediate,\n    });\n  }\n  if (theta !== undefined) {\n    controls.rotCtrl[1]({\n      theta: theta,\n      config: springsConfigs.default.rot,\n      immediate: immediate,\n    });\n  }\n};\n\n// no longer using screenScaleMultiplier\n// export const screenToReal = (x: number): number => x * screenScaleMultiplier;\n// export const RealToScreen = (x: number): number => x / screenScaleMultiplier;\n\nexport const Rgb255ColourToFloat = (c: RgbColor): RgbFloatColour =>\n  [c.r, c.g, c.b].map((e) => e / 255) as RgbFloatColour;\n","import { Button, Card, Grid, TextField } from '@material-ui/core';\nimport React, { useState } from 'react';\nimport { ChangeCoordinatesCardProps } from '../../common/info';\nimport { warpToPoint } from '../../common/utils';\nimport { defaultMandelbrotStart } from '../../common/values';\n\nconst ChangeCoordinatesCard = (props: ChangeCoordinatesCardProps): JSX.Element => {\n  const [xy, setXY] = useState(defaultMandelbrotStart.xy);\n  const [x, y] = xy;\n  const [zoom, setZoom] = useState(defaultMandelbrotStart.z);\n  const [theta, setTheta] = useState(defaultMandelbrotStart.theta);\n\n  return (\n    <Card\n      style={{\n        width: 'auto',\n        zIndex: 1300,\n        position: 'relative',\n        padding: 8,\n        display: 'flex',\n        flexDirection: 'column',\n        flexShrink: 1,\n        // borderRadius: 100,\n      }}\n    >\n      <Grid container direction=\"column\" alignItems=\"center\">\n        <TextField\n          size=\"small\"\n          style={{ width: '12ch' }}\n          onChange={(e) => setXY(([x, y]) => [Number(e.target.value), y])}\n          type=\"number\"\n          defaultValue={x}\n          inputProps={{ step: 0.01 }}\n          label=\"x\"\n        />\n        <TextField\n          size=\"small\"\n          style={{ width: '12ch' }}\n          onChange={(e) => setXY(([x, y]) => [x, Number(e.target.value)])}\n          type=\"number\"\n          defaultValue={y}\n          inputProps={{ step: 0.01 }}\n          label=\"y\"\n        />\n        <Grid container direction=\"row\" justify=\"space-around\">\n          <TextField\n            size=\"small\"\n            style={{ width: '5ch' }}\n            onChange={(e) => setZoom(Number(e.target.value))}\n            type=\"number\"\n            defaultValue={zoom}\n            inputProps={{ min: 0 }}\n            label=\"zoom\"\n          />\n          <TextField\n            size=\"small\"\n            style={{ width: '5ch' }}\n            onChange={(e) => setTheta(Number(e.target.value))}\n            type=\"number\"\n            defaultValue={theta}\n            inputProps={{ step: 0.1 }}\n            label=\"theta\"\n          />\n        </Grid>\n        <Button\n          style={{ marginTop: 12 }}\n          onClick={() => warpToPoint(props.mandelbrot, { xy: xy, z: zoom, theta: theta })}\n        >\n          Go\n        </Button>\n      </Grid>\n    </Card>\n  );\n};\n\nexport default ChangeCoordinatesCard;\n","import { Card, Typography } from '@material-ui/core';\nimport React from 'react';\nimport { animated } from 'react-spring';\nimport { CoordinatesCardProps } from '../../common/info';\nimport {\n  defaultFloatFixedPrecision,\n  shortFloatFixedPrecision,\n} from '../../common/values';\n\nconst CoordinatesCard = (props: CoordinatesCardProps): JSX.Element => {\n  return (\n    <Card\n      style={{\n        width: 'auto',\n        zIndex: 1300,\n        position: 'relative',\n        padding: '6px 12px',\n        marginBottom: 8,\n        // borderRadius: 100,\n      }}\n    >\n      <Typography align=\"right\" style={{ fontFamily: 'monospace', fontSize: '1.2rem' }}>\n        {/* https://www.typescriptlang.org/docs/handbook/basic-types.html#tuple */}\n        {/* https://www.typescriptlang.org/docs/handbook/2/objects.html#tuple-types */}\n        <animated.span>\n          {props.mandelbrot.xy.interpolate(\n            // @ts-expect-error: Function call broken in TS, waiting till react-spring v9 to fix\n            (x, y) => `${x.toFixed(defaultFloatFixedPrecision)} : x`,\n          )}\n        </animated.span>\n        <br />\n        <animated.span>\n          {props.mandelbrot.xy.interpolate(\n            // @ts-expect-error: Function call broken in TS, waiting till react-spring v9 to fix\n            (x, y) => `${y.toFixed(defaultFloatFixedPrecision)} : y`,\n          )}\n        </animated.span>\n        <br />\n        <animated.span>\n          {props.mandelbrot.zoom.interpolate(\n            (z) => `${z.toFixed(shortFloatFixedPrecision)} : z`,\n          )}\n        </animated.span>\n        <br />\n        <animated.span>\n          {props.mandelbrot.theta.interpolate(\n            (t) => `${t.toFixed(shortFloatFixedPrecision)} : t`,\n          )}\n        </animated.span>\n      </Typography>\n    </Card>\n  );\n};\n\nexport default CoordinatesCard;\n\n// <Card\n//   style={{\n//     width: 'auto',\n//     position: 'absolute',\n//     zIndex: 2,\n//     right: 0,\n//     top: 0,\n//     margin: 20,\n//     padding: 8,\n//     display: settings.coords[0] ? 'block' : 'none',\n//     // borderRadius: 100,\n//   }}\n// >\n//   <Typography align=\"right\">\n//     {/* https://www.typescriptlang.org/docs/handbook/basic-types.html#tuple */}\n//     {/* https://www.typescriptlang.org/docs/handbook/2/objects.html#tuple-types */}\n//     <animated.span>\n//       {mandelbrotControls.xyCtrl[0].xy.interpolate(\n//         // @ts-expect-error: Function call broken in TS, waiting till react-spring v9 to fix\n//         (x, y) => `${(x * screenScaleMultiplier).toFixed(7)} : x`,\n//       )}\n//     </animated.span>\n//     <br />\n//     <animated.span>\n//       {mandelbrotControls.xyCtrl[0].xy.interpolate(\n//         // @ts-expect-error: Function call broken in TS, waiting till react-spring v9 to fix\n//         (x, y) => `${(y * screenScaleMultiplier).toFixed(7)} : y`,\n//       )}\n//     </animated.span>\n//   </Typography>\n// </Card>;\n","import { Grow } from '@material-ui/core';\nimport React from 'react';\nimport { ViewerControlSprings } from '../../common/types';\nimport ChangeCoordinatesCard from './ChangeCoordinatesCard';\nimport CoordinatesCard from './CoordinatesCard';\n\nexport const CoordinateInterface = (props: {\n  mandelbrot: ViewerControlSprings;\n  show: boolean;\n}): JSX.Element => {\n  return (\n    <Grow\n      in={props.show}\n      style={{\n        position: 'absolute',\n        right: 0,\n        top: 0,\n        margin: 20,\n        width: 'auto',\n        zIndex: 1,\n      }}\n    >\n      <div>\n        <CoordinatesCard\n          mandelbrot={{\n            xy: props.mandelbrot.xyCtrl[0].xy,\n            zoom: props.mandelbrot.zoomCtrl[0].z,\n            theta: props.mandelbrot.rotCtrl[0].theta,\n          }}\n        />\n        <ChangeCoordinatesCard mandelbrot={props.mandelbrot} />\n      </div>\n    </Grow>\n  );\n};\n\nexport default CoordinateInterface;\n","export default __webpack_public_path__ + \"static/media/logo-192.ba1bc0bf.png\";","export default __webpack_public_path__ + \"static/media/info.d8ddbe6a.md\";","import { Link, Typography } from '@material-ui/core';\nimport Markdown, { MarkdownToJSX } from 'markdown-to-jsx';\nimport React, { useEffect, useState } from 'react';\nimport infoTextMarkdown from './info.md';\n\nconst MdOverrideTypography = ({\n  children,\n}: // ...props\nReact.DetailedHTMLProps<\n  React.HTMLAttributes<HTMLParagraphElement>,\n  HTMLParagraphElement\n>): JSX.Element => <Typography paragraph>{children}</Typography>;\n\nconst MdOverrideLink = ({\n  children,\n  title,\n  href,\n}: // ...props\nReact.DetailedHTMLProps<\n  React.AnchorHTMLAttributes<HTMLAnchorElement>,\n  HTMLAnchorElement\n  // JSX.IntrinsicElements.a\n>): JSX.Element => (\n  // <a></a>\n  <Link title={title} href={href} target=\"_blank\">\n    {children}\n  </Link>\n);\n\nconst mdOverrides: MarkdownToJSX.Overrides = {\n  p: MdOverrideTypography,\n  a: MdOverrideLink,\n};\n\nexport const DialogInfoMarkdown = (): JSX.Element => {\n  const [infoMdText, setInfoMdText] = useState('');\n\n  // https://github.com/facebook/create-react-app/issues/2961#issuecomment-322916352\n  useEffect(() => {\n    fetch(infoTextMarkdown)\n      .then((response) => response.text())\n      .then((text) => {\n        // Logs a string of Markdown content.\n        // Now you could use e.g. <rexxars/react-markdown> to render it.\n        // console.log(text);\n        setInfoMdText(text);\n      });\n  }, []);\n\n  return (\n    <Markdown options={{ wrapper: React.Fragment, overrides: mdOverrides }}>\n      {infoMdText}\n    </Markdown>\n  );\n};\n\nexport default mdOverrides;\n","import {\n  Box,\n  Divider,\n  Link,\n  Paper,\n  Snackbar,\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow,\n} from '@material-ui/core';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport MuiDialogActions from '@material-ui/core/DialogActions';\nimport MuiDialogContent from '@material-ui/core/DialogContent';\nimport MuiDialogTitle from '@material-ui/core/DialogTitle';\nimport IconButton from '@material-ui/core/IconButton';\nimport { createStyles, Theme, WithStyles, withStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport CloseIcon from '@material-ui/icons/Close';\nimport FileCopyIcon from '@material-ui/icons/FileCopy';\nimport LaunchIcon from '@material-ui/icons/Launch';\nimport MuiAlert, { AlertProps } from '@material-ui/lab/Alert';\n// for evaluating build time\nimport preval from 'preval.macro';\nimport React, { PropsWithChildren, useMemo, useState } from 'react';\nimport { InfoDialogProps } from '../../common/info';\nimport clientDetect from '../../dist/clientDetect';\nimport MandelbrotMapsLogo from '../../img/logo-192.png';\nimport survey from '../surveyLink.json';\nimport { DialogInfoMarkdown } from './MarkdownOverrides';\n\nconst dateTimeStamp = preval`module.exports = new Date();`;\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    root: {\n      margin: 0,\n      padding: theme.spacing(2),\n      display: 'flex',\n      flexDirection: 'row',\n      // align: \"middle\",\n    },\n    image: {\n      marginTop: 'auto',\n      marginBottom: 'auto',\n      marginRight: 8,\n      height: 50,\n    },\n    closeButton: {\n      // position: 'absolute',\n      // right: theme.spacing(1),\n      // top: theme.spacing(1),\n      marginLeft: 'auto',\n      color: theme.palette.grey[500],\n    },\n  });\n\nexport interface DialogTitleProps extends PropsWithChildren<WithStyles<typeof styles>> {\n  onClose: () => void;\n  id: string;\n}\n\n// https://material-ui.com/guides/typescript/#usage-of-withstyles\nconst DialogTitle = withStyles(styles)(\n  ({ children, classes, onClose, ...other }: DialogTitleProps) => {\n    return (\n      <MuiDialogTitle disableTypography className={classes.root} {...other}>\n        <img\n          src={MandelbrotMapsLogo}\n          alt=\"Mandelbrot Maps logo\"\n          className={classes.image}\n        />\n        <Typography\n          variant=\"h1\"\n          style={{ fontSize: 24, marginTop: 'auto', marginBottom: 'auto' }}\n        >\n          {children}\n        </Typography>\n        {onClose ? (\n          <IconButton\n            aria-label=\"close\"\n            className={classes.closeButton}\n            onClick={onClose}\n          >\n            <CloseIcon />\n          </IconButton>\n        ) : null}\n      </MuiDialogTitle>\n    );\n  },\n);\n\nconst DialogContent = withStyles((theme) => ({\n  root: {\n    padding: theme.spacing(3),\n  },\n}))(MuiDialogContent);\n\nconst DialogActions = withStyles((theme) => ({\n  root: {\n    margin: 0,\n    padding: theme.spacing(1),\n  },\n}))(MuiDialogActions);\n\nconst Alert = (props: AlertProps) => (\n  <MuiAlert elevation={6} variant=\"filled\" {...props} />\n);\n\nconst DialogDivider = () => <Divider style={{ marginTop: 20, marginBottom: 20 }} />;\n\nexport default function InfoDialog({\n  ctrl: [open, setOpen],\n  ...props\n}: InfoDialogProps): JSX.Element {\n  const [snackBarOpen, setSnackBarOpen] = useState(false);\n\n  const handleClose = () => setOpen(false);\n\n  // guard against null / undefined window\n  const clientData = useMemo(() => clientDetect(window), []);\n\n  const writeClientDataToClipboard = () => {\n    const data = JSON.stringify(clientData);\n    console.log(snackBarOpen);\n    try {\n      navigator.clipboard.writeText(data);\n      setSnackBarOpen(true);\n    } catch (e) {\n      window.prompt('Auto copy to clipboard failed, please copy manually:', data);\n    }\n  };\n\n  return (\n    <Dialog\n      onClose={handleClose}\n      aria-labelledby=\"customized-dialog-title\"\n      open={open}\n      maxWidth=\"md\"\n      PaperProps={{\n        style: {\n          // fill more of the screen with this dialog\n          margin: 16,\n          maxHeight: 'calc(100% - 32px)',\n        },\n      }}\n    >\n      <DialogTitle id=\"customized-dialog-title\" onClose={handleClose}>\n        Mandelbrot Maps\n      </DialogTitle>\n      <DialogContent dividers style={{ maxWidth: 700 }}>\n        <DialogInfoMarkdown />\n\n        <DialogDivider />\n\n        <Box style={{ display: 'flex' }}>\n          <TableContainer\n            component={Paper}\n            style={{ width: 'auto', margin: 'auto', maxWidth: 460 }}\n            // attempt to stop manual copying of the table\n            onClick={writeClientDataToClipboard}\n            // https://stackoverflow.com/a/46337736/9184658\n            onContextMenu={(e: React.MouseEvent<HTMLDivElement, MouseEvent>) => {\n              e.preventDefault();\n              writeClientDataToClipboard();\n            }}\n          >\n            <Table size=\"small\" aria-label=\"a dense table\">\n              <TableHead>\n                <TableRow>\n                  <TableCell align=\"center\" colSpan={2} variant=\"head\">\n                    Device properties\n                  </TableCell>\n                </TableRow>\n              </TableHead>\n              <TableBody>\n                {Object.entries(clientData).map(([k, v]) => (\n                  <TableRow key={k}>\n                    <TableCell style={{ userSelect: 'none' }}>{k}</TableCell>\n                    <TableCell align=\"right\" style={{ fontFamily: 'monospace' }}>\n                      {String(v)}\n                    </TableCell>\n                  </TableRow>\n                ))}\n              </TableBody>\n            </Table>\n          </TableContainer>\n        </Box>\n\n        <DialogDivider />\n\n        <Box style={{ display: 'flex', flexDirection: 'column', alignItems: 'center' }}>\n          <Typography align=\"center\" style={{ margin: 'auto' }}>\n            Build\n          </Typography>\n          <Typography style={{ fontFamily: 'monospace' }}>{dateTimeStamp}</Typography>\n          <Typography style={{ fontFamily: 'monospace' }}>\n            {process.env.REACT_APP_GIT_SHA}\n          </Typography>\n        </Box>\n      </DialogContent>\n\n      <DialogActions>\n        <Button\n          onClick={() => {\n            writeClientDataToClipboard();\n          }}\n          color=\"primary\"\n          variant=\"outlined\"\n          startIcon={<FileCopyIcon />}\n        >\n          Copy info\n        </Button>\n        <Snackbar\n          open={snackBarOpen}\n          autoHideDuration={5000}\n          // clicking outside the snackbar would trigger close\n          onClose={(e, reason) => {\n            switch (reason) {\n              case 'clickaway':\n                // don't close the snackbar on clicking outside\n                break;\n              default:\n                setSnackBarOpen(false);\n            }\n          }}\n        >\n          <Alert onClose={() => setSnackBarOpen(false)} severity=\"info\">\n            Device properties copied!\n          </Alert>\n        </Snackbar>\n        <Link\n          href={survey.link}\n          target=\"_blank\"\n          rel=\"noopener\"\n          style={{ textDecoration: 'none' }}\n        >\n          <Button autoFocus color=\"primary\" variant=\"outlined\" startIcon={<LaunchIcon />}>\n            Feedback\n          </Button>\n        </Link>\n      </DialogActions>\n    </Dialog>\n  );\n}\n","/* eslint-disable */\n/**\n * JavaScript Client Detection\n * (C) viazenetti GmbH (Christian Ludwig)\n *\n * modified by @JMaio\n */\nexport default function clientDetect(window) {\n  var unknown = '-';\n\n  // screen\n  var screenSize = '';\n  if (window.screen.width) {\n    var width = window.screen.width ? window.screen.width : '';\n    var height = window.screen.height ? window.screen.height : '';\n    screenSize += '' + width + ' x ' + height;\n  }\n\n  // inner window\n  var windowSize = '';\n  if (window.screen.width) {\n    var w = window.innerWidth ? window.innerWidth : '';\n    var h = window.innerHeight ? window.innerHeight : '';\n    windowSize += '' + w + ' x ' + h;\n  }\n\n  // browser\n  var nVer = navigator.appVersion;\n  var nAgt = navigator.userAgent;\n  var browser = navigator.appName;\n  var version = '' + parseFloat(navigator.appVersion);\n  var majorVersion = parseInt(navigator.appVersion, 10);\n  var nameOffset, verOffset, ix;\n\n  // Opera\n  if ((verOffset = nAgt.indexOf('Opera')) != -1) {\n    browser = 'Opera';\n    version = nAgt.substring(verOffset + 6);\n    if ((verOffset = nAgt.indexOf('Version')) != -1) {\n      version = nAgt.substring(verOffset + 8);\n    }\n  }\n  // Opera Next\n  if ((verOffset = nAgt.indexOf('OPR')) != -1) {\n    browser = 'Opera';\n    version = nAgt.substring(verOffset + 4);\n  }\n  // Edge\n  else if ((verOffset = nAgt.indexOf('Edge')) != -1) {\n    browser = 'Microsoft Edge';\n    version = nAgt.substring(verOffset + 5);\n  }\n  // MSIE\n  else if ((verOffset = nAgt.indexOf('MSIE')) != -1) {\n    browser = 'Microsoft Internet Explorer';\n    version = nAgt.substring(verOffset + 5);\n  }\n  // Chrome\n  else if ((verOffset = nAgt.indexOf('Chrome')) != -1) {\n    browser = 'Chrome';\n    version = nAgt.substring(verOffset + 7);\n  }\n  // Safari\n  else if ((verOffset = nAgt.indexOf('Safari')) != -1) {\n    browser = 'Safari';\n    version = nAgt.substring(verOffset + 7);\n    if ((verOffset = nAgt.indexOf('Version')) != -1) {\n      version = nAgt.substring(verOffset + 8);\n    }\n  }\n  // Firefox\n  else if ((verOffset = nAgt.indexOf('Firefox')) != -1) {\n    browser = 'Firefox';\n    version = nAgt.substring(verOffset + 8);\n  }\n  // MSIE 11+\n  else if (nAgt.indexOf('Trident/') != -1) {\n    browser = 'Microsoft Internet Explorer';\n    version = nAgt.substring(nAgt.indexOf('rv:') + 3);\n  }\n  // Other browsers\n  else if (\n    (nameOffset = nAgt.lastIndexOf(' ') + 1) < (verOffset = nAgt.lastIndexOf('/'))\n  ) {\n    browser = nAgt.substring(nameOffset, verOffset);\n    version = nAgt.substring(verOffset + 1);\n    if (browser.toLowerCase() == browser.toUpperCase()) {\n      browser = navigator.appName;\n    }\n  }\n  // trim the version string\n  if ((ix = version.indexOf(';')) != -1) version = version.substring(0, ix);\n  if ((ix = version.indexOf(' ')) != -1) version = version.substring(0, ix);\n  if ((ix = version.indexOf(')')) != -1) version = version.substring(0, ix);\n\n  majorVersion = parseInt('' + version, 10);\n  if (isNaN(majorVersion)) {\n    version = '' + parseFloat(navigator.appVersion);\n    majorVersion = parseInt(navigator.appVersion, 10);\n  }\n\n  // mobile version\n  var mobile = /Mobile|mini|Fennec|Android|iP(ad|od|hone)/.test(nVer);\n\n  // cookie\n  var cookieEnabled = navigator.cookieEnabled ? true : false;\n\n  if (typeof navigator.cookieEnabled == 'undefined' && !cookieEnabled) {\n    document.cookie = 'testcookie';\n    cookieEnabled = document.cookie.indexOf('testcookie') != -1 ? true : false;\n  }\n\n  // system\n  var os = unknown;\n  var clientStrings = [\n    { s: 'Windows 10', r: /(Windows 10.0|Windows NT 10.0)/ },\n    { s: 'Windows 8.1', r: /(Windows 8.1|Windows NT 6.3)/ },\n    { s: 'Windows 8', r: /(Windows 8|Windows NT 6.2)/ },\n    { s: 'Windows 7', r: /(Windows 7|Windows NT 6.1)/ },\n    { s: 'Windows Vista', r: /Windows NT 6.0/ },\n    { s: 'Windows Server 2003', r: /Windows NT 5.2/ },\n    { s: 'Windows XP', r: /(Windows NT 5.1|Windows XP)/ },\n    { s: 'Windows 2000', r: /(Windows NT 5.0|Windows 2000)/ },\n    { s: 'Windows ME', r: /(Win 9x 4.90|Windows ME)/ },\n    { s: 'Windows 98', r: /(Windows 98|Win98)/ },\n    { s: 'Windows 95', r: /(Windows 95|Win95|Windows_95)/ },\n    { s: 'Windows NT 4.0', r: /(Windows NT 4.0|WinNT4.0|WinNT|Windows NT)/ },\n    { s: 'Windows CE', r: /Windows CE/ },\n    { s: 'Windows 3.11', r: /Win16/ },\n    { s: 'Android', r: /Android/ },\n    { s: 'Open BSD', r: /OpenBSD/ },\n    { s: 'Sun OS', r: /SunOS/ },\n    { s: 'Chrome OS', r: /CrOS/ },\n    { s: 'Linux', r: /(Linux|X11(?!.*CrOS))/ },\n    { s: 'iOS', r: /(iPhone|iPad|iPod)/ },\n    { s: 'Mac OS X', r: /Mac OS X/ },\n    { s: 'Mac OS', r: /(MacPPC|MacIntel|Mac_PowerPC|Macintosh)/ },\n    { s: 'QNX', r: /QNX/ },\n    { s: 'UNIX', r: /UNIX/ },\n    { s: 'BeOS', r: /BeOS/ },\n    { s: 'OS/2', r: /OS\\/2/ },\n    {\n      s: 'Search Bot',\n      r: /(nuhk|Googlebot|Yammybot|Openbot|Slurp|MSNBot|Ask Jeeves\\/Teoma|ia_archiver)/,\n    },\n  ];\n  for (var id in clientStrings) {\n    var cs = clientStrings[id];\n    if (cs.r.test(nAgt)) {\n      os = cs.s;\n      break;\n    }\n  }\n\n  var osVersion = unknown;\n\n  if (/Windows/.test(os)) {\n    osVersion = /Windows (.*)/.exec(os)[1];\n    os = 'Windows';\n  }\n\n  switch (os) {\n    case 'Mac OS X':\n      osVersion = /Mac OS X (10[\\.\\_\\d]+)/.exec(nAgt)[1];\n      break;\n\n    case 'Android':\n      osVersion = /Android ([\\.\\_\\d]+)/.exec(nAgt)[1];\n      break;\n\n    case 'iOS':\n      osVersion = /OS (\\d+)_(\\d+)_?(\\d+)?/.exec(nVer);\n      osVersion = osVersion[1] + '.' + osVersion[2] + '.' + (osVersion[3] | 0);\n      break;\n\n    default:\n      break;\n  }\n\n  // user agent string manipulation to obtain device model\n  var system = nAgt.substring(nAgt.indexOf('(') + 1, nAgt.indexOf(')'));\n  var device = system.substring(system.lastIndexOf(';') + 1);\n\n  // use JavaScript to detect GPU used from within your browser - by cvan\n  // https://gist.github.com/cvan/042b2448fcecefafbb6a91469484cdf8\n  var canvas = document.createElement('canvas');\n  var gl;\n  var debugInfo;\n  var gpuVendor;\n  var renderer;\n\n  try {\n    gl = canvas.getContext('webgl') || canvas.getContext('experimental-webgl');\n    // move block here if webgl not available\n    // if (gl) {\n    debugInfo = gl.getExtension('WEBGL_debug_renderer_info');\n    gpuVendor = gl.getParameter(debugInfo.UNMASKED_VENDOR_WEBGL);\n    renderer = gl.getParameter(debugInfo.UNMASKED_RENDERER_WEBGL);\n    // }\n  } catch (e) {\n    //   do nothing\n  }\n  // ----------------------------------------------------------------\n\n  //   window.jscd = {\n  return {\n    browser: browser,\n    browserVersion: majorVersion,\n    browserRelease: version,\n    // vendor: navigator.vendor,\n    device: device,\n    os: os,\n    osVersion: osVersion,\n    mobile: mobile,\n    platform: navigator.platform,\n    screen: screenSize,\n    windowSize: windowSize,\n    dpr: +window.devicePixelRatio.toFixed(3),\n    gpu: renderer,\n    gpuVendor: gpuVendor,\n    userAgent: navigator.userAgent,\n    // cookies: cookieEnabled,\n    // flashVersion: flashVersion\n  };\n}\n// (this)\n\n// alert(\n//     'OS: ' + jscd.os +' '+ jscd.osVersion + '\\n' +\n//     'Browser: ' + jscd.browser +' '+ jscd.browserMajorVersion +\n//       ' (' + jscd.browserVersion + ')\\n' +\n//     'Mobile: ' + jscd.mobile + '\\n' +\n//     'Flash: ' + jscd.flashVersion + '\\n' +\n//     'Cookies: ' + jscd.cookies + '\\n' +\n//     'Screen Size: ' + jscd.screen + '\\n\\n' +\n//     'Full User Agent: ' + navigator.userAgent\n// );\n","// TODO set max iterations as parameter\n\nimport { RendererRenderValues } from '../common/render';\n\nconst newSmoothJuliaShader = ({\n  maxI = 300,\n  AA = 1,\n  B = 64,\n}: RendererRenderValues): string => `\n\n#define AA ${AA}\n#define MAXI ${maxI}\n#define B ${B.toFixed(1)}\n\n// https://webglfundamentals.org/webgl/lessons/webgl-precision-issues.html\n// prefer high float precision (lower than this may break colours on mobile)\n#ifdef GL_FRAGMENT_PRECISION_HIGH\n  precision highp float;\n#else\n  precision mediump float;\n#endif\n\n// need to know the resolution of the canvas\nuniform vec2 resolution;\n\n// properties should be passed as uniforms\nuniform int   u_maxI;\nuniform vec2  u_xy;\nuniform vec2  u_c;\nuniform float u_zoom;\nuniform float u_theta;\nuniform vec3  u_colour;\n\nfloat julia( vec2 z, vec2 c ) {\n\n  float l = 0.0;\n  for( int i=0; i<MAXI; i++ )\n  {\n      z = vec2( z.x*z.x - z.y*z.y, 2.0*z.x*z.y ) + c;\n      if( dot(z,z)>(B*B) ) break;\n      l += 1.0;\n  }\n\n  // maxed out iterations\n  if( l>float(MAXI)-1.0 ) return 0.0;\n\n  // equivalent optimized smooth interation count\n  l = l - log2(log2(dot(z,z))) + 4.0;\n\n  return l;\n}\n\nvoid main() {    \n  // set the initial colour to black\n  vec3 col = vec3(0.0);\n\n  // anti-aliasing\n  #if AA>1\n  for( int m=0; m<AA; m++ )\n  for( int n=0; n<AA; n++ )\n  {\n      vec2 p = (2.0*(gl_FragCoord.xy + vec2(float(m), float(n)) / float(AA) ) - resolution.xy)/resolution.y;\n      float w = float(AA*m+n);\n  #else    \n      // adjust pixels to range from [-1, 1]\n      vec2 p = (2.0*gl_FragCoord.xy - resolution.xy)/resolution.y;\n  #endif\n  \n  // constant \"c\" to add, based on mandelbrot position\n  vec2 c = u_c;\n\n  float sinT = sin(u_theta);\n  float cosT = cos(u_theta);\n\n  vec2 xy = vec2( p.x*cosT - p.y*sinT, p.x*sinT + p.y*cosT );\n  // c is based on offset and grid position, z_0 = 0\n  vec2 z = u_xy + xy/u_zoom;\n\n  float l = julia(z, c);\n  // col += 0.5 + 0.5*cos( 3.0 + l*0.15 + vec3(0.0,0.6,1.0));\n  col += 0.5 + 0.5*cos( 3.0 + l*0.15 + u_colour);\n\n\n  // antialiasing\n  #if AA>1\n  }\n  col /= float(AA*AA);\n  #endif\n\n  // Output to screen\n  gl_FragColor = vec4( col, 1.0 );\n}\n`;\n\nexport default newSmoothJuliaShader;\n","import { FormControlLabelProps, SvgIcon } from '@material-ui/core';\nimport React from 'react';\nimport { RgbColor } from 'react-colorful';\nimport { defaultShadingColour } from './values';\n// https://stackoverflow.com/a/39281228/9184658\n\nexport type settingsDefinitionsType = {\n  showMinimap: boolean;\n  showCrosshair: boolean;\n  showCoordinates: boolean;\n  showFPS: boolean;\n  maxI: number;\n  useDPR: boolean;\n  useAA: boolean;\n  colour: RgbColor;\n};\n\nexport const defaultSettings = {\n  showMinimap: true,\n  showCrosshair: true,\n  showCoordinates: false,\n  maxI: 250,\n  showFPS: false,\n  useDPR: false,\n  useAA: false,\n  colour: defaultShadingColour,\n};\n\nexport type settingsWidgetType = {\n  // - settings widgets key k must be in the set\n  // - its type must be of FormControlLabelProps (for displaying in the Material UI form)\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  [k in keyof settingsDefinitionsType]: FormControlLabelProps;\n  // using \"k\" results in an error since it is not used again\n};\n\nexport type settingsGroupType = {\n  name: string;\n  icon: typeof SvgIcon;\n  widgets: {\n    // widget groups may contain any of the keys in the settingsDefinitionsType\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    [k in keyof Partial<settingsDefinitionsType>]: FormControlLabelProps;\n    // using \"k\" results in an error since it is not used again\n  };\n};\n\nexport type SettingsContextType = {\n  settings: settingsDefinitionsType;\n  setSettings: React.Dispatch<React.SetStateAction<settingsDefinitionsType>>;\n  settingsWidgets: settingsWidgetType;\n  // newSettings: {\n  //   [k in keyof settingsDefinitionsType]: [\n  //     settingsDefinitionsType[k],\n  //     React.Dispatch<React.SetStateAction<settingsDefinitionsType[k]>>,\n  //   ];\n  // };\n};\n\nexport interface SettingsMenuProps {\n  reset: () => void;\n  toggleInfo: () => void;\n}\n","import { Slider, Switch } from '@material-ui/core';\nimport ExtensionIcon from '@material-ui/icons/Extension';\nimport PhotoIcon from '@material-ui/icons/Photo';\nimport React from 'react';\nimport { RgbColorPicker } from 'react-colorful';\nimport {\n  settingsDefinitionsType,\n  settingsGroupType,\n  settingsWidgetType,\n} from '../../common/settings';\n\nexport const settingsWidgets = (\n  settings: settingsDefinitionsType,\n): settingsWidgetType => ({\n  showMinimap: {\n    label: 'Minimap',\n    checked: settings.showMinimap,\n    control: <Switch />,\n  },\n  showCrosshair: {\n    label: 'Crosshair',\n    checked: settings.showCrosshair,\n    control: <Switch />,\n  },\n  showCoordinates: {\n    label: 'Show coordinates',\n    checked: settings.showCoordinates,\n    control: <Switch />,\n  },\n  maxI: {\n    label: 'Iterations',\n    value: settings.maxI,\n    labelPlacement: 'top',\n    style: {\n      marginLeft: 0,\n      marginRight: 0,\n    },\n    control: (\n      <Slider\n        min={10}\n        max={1000}\n        step={10}\n        valueLabelDisplay=\"auto\"\n        marks={[\n          { value: 10, label: 10 },\n          { value: 250, label: 250 },\n          { value: 500, label: 500 },\n          { value: 750, label: 750 },\n          { value: 1000, label: 1000 },\n        ]}\n      />\n    ),\n  },\n  useDPR: {\n    // https://stackoverflow.com/a/12830454/9184658\n    // // There is a downside that values like 1.5 will give \"1.50\" as the output. A fix suggested by @minitech:\n    // var numb = 1.5;\n    // numb = +numb.toFixed(2);\n    // // Note the plus sign that drops any \"extra\" zeroes at the end.\n    // // It changes the result (which is a string) into a number again (think \"0 + foo\"),\n    // // which means that it uses only as many digits as necessary.\n    label: `Use pixel ratio (${+window.devicePixelRatio.toFixed(3)})`,\n    checked: settings.useDPR,\n    control: <Switch />,\n  },\n  useAA: {\n    label: `Anti-aliasing (slow)`,\n    checked: settings.useAA,\n    control: <Switch />,\n  },\n  showFPS: {\n    label: `Show FPS`,\n    checked: settings.showFPS,\n    control: <Switch />,\n  },\n  colour: {\n    label: null,\n    style: {\n      marginTop: 14,\n      marginBottom: 10,\n      marginLeft: 0,\n      marginRight: 0,\n    },\n    control: (\n      <RgbColorPicker\n        // set the initial colour\n        color={settings.colour}\n      />\n    ),\n  },\n});\n\nexport const getSettingsWidgetsGrouping = (\n  settingsWidgets: settingsWidgetType,\n): Array<settingsGroupType> => [\n  {\n    icon: ExtensionIcon,\n    name: 'Interface',\n    widgets: {\n      showMinimap: settingsWidgets.showMinimap,\n      showCrosshair: settingsWidgets.showCrosshair,\n      showCoordinates: settingsWidgets.showCoordinates,\n    },\n    // ],\n  },\n  {\n    icon: PhotoIcon,\n    name: 'Graphics',\n    widgets: {\n      maxI: settingsWidgets.maxI,\n      colour: settingsWidgets.colour,\n      useDPR: settingsWidgets.useDPR,\n      useAA: settingsWidgets.useAA,\n      showFPS: settingsWidgets.showFPS,\n    },\n  },\n];\n","import React, { createContext, ReactNode, useState } from 'react';\nimport {\n  defaultSettings,\n  SettingsContextType,\n  settingsDefinitionsType,\n} from '../../common/settings';\nimport { settingsWidgets } from './SettingsDefinitions';\n\nexport const SettingsContext = createContext<SettingsContextType>({\n  // provide the context with the default values\n  settings: defaultSettings,\n  // can't set state until it's initialized\n  setSettings: () => {\n    return;\n  },\n  settingsWidgets: settingsWidgets(defaultSettings),\n});\n\n// export const useSettings = (): SettingsContextType => useContext(SettingsContext);\n\nexport const SettingsProvider = ({ children }: { children: ReactNode }): JSX.Element => {\n  // https://reactjs.org/docs/context.html#updating-context-from-a-nested-component\n  // no grouping: all settings are accessible\n  const [settings, setSettings] = useState<settingsDefinitionsType>(defaultSettings);\n\n  return (\n    <SettingsContext.Provider\n      value={{\n        settings,\n        setSettings,\n        settingsWidgets: settingsWidgets(settings),\n      }}\n    >\n      {children}\n    </SettingsContext.Provider>\n  );\n};\n\nexport default SettingsProvider;\n","import { colors, createMuiTheme } from '@material-ui/core';\n\nconst theme = createMuiTheme({\n  props: {\n    // Name of the component ⚛️\n    MuiSwitch: {\n      // The default props to change\n      color: 'primary', // x, on the whole application 💣!\n    },\n    MuiButton: {\n      variant: 'outlined',\n      style: {\n        borderRadius: 24,\n      },\n    },\n  },\n  palette: {\n    primary: {\n      main: colors.blue[700],\n    },\n    secondary: {\n      main: colors.red[700],\n    },\n    info: {\n      main: colors.blue[700],\n    },\n  },\n  shape: {\n    borderRadius: 12,\n  },\n});\n\nexport const simpleBoxShadow = '0px 2px 10px 1px rgba(0, 0, 0, 0.4)';\nexport const lightBoxShadow = '0px 0px 10px 2px rgba(255, 255, 255, 0.8)';\nexport const darkBoxShadow = '0px 0px 10px 2px rgba(0, 0, 0, 0.8)';\n\n/**\n * A box shadow comprised of two overlaid box shadows:\n * - a light box shadow (for contrasting against **dark** backgrounds)\n * - a dark box shadow (for contrasting against **light** backgrounds)\n */\nexport const contrastBoxShadow = `${lightBoxShadow}, ${darkBoxShadow}`;\n\nexport default theme;\n","export const fullVertexShader = `\nattribute vec4 position;\n\nvoid main() {\n  gl_Position = position;\n}\n`;\n\n// This \"position\" array specifies the vertex positions of the element\n// to be displayed by the vertex shader. It represents two triangles,\n// each filling half of the screen diagonally, and together filling the\n// full canvas space to allow the fragment shader to act on the full canvas.\nexport const fullscreenVertexArray = {\n  position: {\n    numComponents: 3,\n    data: [-1, -1, 0, 1, -1, 0, -1, 1, 0, -1, 1, 0, 1, -1, 0, 1, 1, 0],\n  },\n};\n","import React, { useCallback, useEffect, useRef } from 'react';\nimport { animated } from 'react-spring';\nimport * as twgl from 'twgl.js';\nimport { WebGLCanvasProps } from '../../common/render';\nimport { fullscreenVertexArray, fullVertexShader } from '../../shaders/fullVertexShader';\n\n// https://mariusschulz.com/blog/typing-destructured-object-parameters-in-typescript\n// https://stackoverflow.com/a/50294843/9184658\nconst WebGLCanvas = React.forwardRef<HTMLCanvasElement, WebGLCanvasProps>(\n  (props: WebGLCanvasProps, refAny) => {\n    // const { mini = false, ...rest } = props;\n    // props:\n    // id\n    // fragShader\n    // -- uniforms:\n    //    u_zoom\n    //    u_pos\n    //    u_maxI\n    // ref\n    // glRef\n\n    const canvasRef = refAny as React.MutableRefObject<HTMLCanvasElement>;\n\n    const gl = useRef<WebGLRenderingContext | null>();\n    const renderRequestRef = useRef<number>();\n    const bufferInfo = useRef<twgl.BufferInfo>();\n    const programInfo = useRef<twgl.ProgramInfo>();\n\n    const u = props.u;\n    const setFps = props.fps;\n\n    // have a zoom callback\n    // keeps minimaps at a fixed zoom level\n    const zoom = useCallback(() => (props.mini ? 1.0 : props.u.zoom.getValue()), [\n      props.mini,\n      props.u.zoom,\n    ]);\n\n    const dpr = props.useDPR ? window.devicePixelRatio : 1;\n\n    // canvas setup step - get webgl context\n    const setupCanvas = useCallback(() => {\n      gl.current = canvasRef.current.getContext('webgl');\n      console.debug(`WebGL canvas context created`);\n    }, [gl, canvasRef]);\n\n    useEffect(() => {\n      setupCanvas();\n\n      // https://www.khronos.org/webgl/wiki/HandlingContextLost\n      canvasRef.current.addEventListener(\n        'webglcontextlost',\n        (event: Event) => {\n          console.error('WebGL context lost!');\n          event.preventDefault();\n          // trigger an error alert in future?\n        },\n        false,\n      );\n      canvasRef.current.addEventListener(\n        'webglcontextrestored',\n        (event: Event) => {\n          console.error('WebGL context restored! Setting up...');\n          setupCanvas();\n        },\n        false,\n      );\n\n      // remove this context?\n      // return () => gl.current ??\n    }, [canvasRef, setupCanvas]);\n\n    const compileShader = useCallback(() => {\n      const ctx = gl.current as WebGLRenderingContext;\n      bufferInfo.current = twgl.createBufferInfoFromArrays(ctx, fullscreenVertexArray);\n      programInfo.current = twgl.createProgramInfo(ctx, [\n        fullVertexShader,\n        props.fragShader,\n      ]);\n      console.debug(`Fragment shader compiled`);\n    }, [gl, props.fragShader]);\n\n    // re-compile program if shader changes\n    useEffect(compileShader, [compileShader]);\n\n    const then = useRef(0);\n    const frames = useRef(0);\n    const elapsedTime = useRef(0);\n    // fps update interval\n    const interval = 1000;\n\n    // the main render function for WebGL\n    const render = useCallback(\n      (time) => {\n        const ctx = gl.current as WebGLRenderingContext;\n        const prog = programInfo.current as twgl.ProgramInfo;\n        const buff = bufferInfo.current as twgl.BufferInfo;\n\n        twgl.resizeCanvasToDisplaySize(canvasRef.current, dpr);\n        // scale the viewport to the canvas size\n        ctx.viewport(0, 0, canvasRef.current.width, canvasRef.current.height);\n\n        const uniforms = {\n          resolution: [canvasRef.current.width, canvasRef.current.height],\n          u_zoom: zoom(),\n          u_c: u.c === undefined ? 0 : u.c.getValue(),\n          u_xy: u.xy.getValue(),\n          u_maxI: u.maxI,\n          u_theta: u.theta.getValue(),\n          u_colour: u.colour,\n        };\n\n        ctx.useProgram(prog.program);\n        twgl.setBuffersAndAttributes(ctx, prog, buff);\n        twgl.setUniforms(prog, uniforms);\n        twgl.drawBufferInfo(ctx, buff);\n\n        // calculate fps\n        if (setFps !== undefined) {\n          frames.current++;\n          elapsedTime.current += time - then.current;\n          then.current = time;\n\n          // console.log(elapsedTime.current);\n          if (elapsedTime.current >= interval) {\n            //multiply with (1000 / elapsed) for accuracy\n            setFps((frames.current * (interval / elapsedTime.current)).toFixed(1));\n            frames.current = 0;\n            elapsedTime.current -= interval;\n\n            // document.getElementById('test').innerHTML = fps;\n          }\n        }\n\n        // The 'state' will always be the initial value here\n        renderRequestRef.current = requestAnimationFrame(render);\n      },\n      [gl, u, zoom, dpr, setFps, interval, canvasRef],\n    );\n\n    useEffect(() => {\n      renderRequestRef.current = requestAnimationFrame(render);\n      return () => cancelAnimationFrame(renderRequestRef.current as number);\n    }, [render]);\n\n    return (\n      <animated.canvas\n        className=\"renderer\"\n        ref={refAny}\n        id={props.id}\n        style={{\n          // cursor should show whether the viewer is being grabbed\n          cursor: props.dragging ? 'grabbing' : 'grab',\n          // adding style allows direct style override\n          ...props.style,\n        }}\n      />\n    );\n  },\n);\n\nWebGLCanvas.displayName = 'WebGLCanvas';\n\nexport default WebGLCanvas;\n","import { ButtonBase, Grow, makeStyles } from '@material-ui/core';\nimport React from 'react';\nimport { MinimapViewerProps } from '../../common/render';\nimport { simpleBoxShadow } from '../../theme/theme';\nimport WebGLCanvas from './WebGLCanvas';\n\nconst miniSize = 100;\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    borderRadius: theme.shape.borderRadius,\n  },\n}));\n\nconst MinimapViewer = (props: MinimapViewerProps): JSX.Element => {\n  const { canvasRef, onClick, show, ...rest } = props;\n  const classes = useStyles();\n\n  return (\n    <Grow in={show}>\n      <ButtonBase\n        style={{\n          position: 'absolute',\n          // make minimap stick out through backdrop\n          zIndex: 1300,\n          margin: '0.5rem',\n          left: 0,\n          bottom: 0,\n          // cursor: 'pointer',\n          height: miniSize,\n          width: miniSize,\n          // borderRadius: borderRadius,\n          // border: \"1px solid #000\",\n          boxShadow: simpleBoxShadow,\n          overflow: 'hidden',\n          // opacity: zoom.interpolate((z) => _.clamp(z - 1, 0, 1)),\n          // display: zoom.interpolate((z) => (_.clamp(z - 1, 0, 1) === 0 ? 'none' : 'block')),\n        }}\n        onClick={onClick}\n        className={classes.root}\n      >\n        {/* <animated.div */}\n        {/* // \n      // > */}\n        <WebGLCanvas\n          id={props.id}\n          mini={true}\n          ref={canvasRef}\n          {...rest}\n          // setting border radius here stops the canvas clickable area from overflowing\n          // outside the div circle, which would make the clickable area a rectangle\n          style={{\n            // borderRadius: borderRadius,\n            // cursor should be \"pointer\" (looks clickable) if this is a minimap,\n            cursor: 'pointer',\n          }}\n        />\n        {/* </animated.div> */}\n      </ButtonBase>\n    </Grow>\n  );\n};\nexport default MinimapViewer;\n","import React, { useRef, useState } from 'react';\nimport { useGesture } from 'react-use-gesture';\nimport { JuliaRendererProps } from '../../common/render';\nimport { MandelbrotMapsWebGLUniforms } from '../../common/types';\nimport { genericTouchBind, Rgb255ColourToFloat } from '../../common/utils';\nimport newSmoothJuliaShader from '../../shaders/newSmoothJuliaShader';\nimport { SettingsContext } from '../settings/SettingsContext';\nimport MinimapViewer from './MinimapViewer';\nimport WebGLCanvas from './WebGLCanvas';\nexport default function JuliaRenderer(props: JuliaRendererProps): JSX.Element {\n  // variables to hold canvas and webgl information\n  const canvasRef = useRef<HTMLCanvasElement>(null);\n  const miniCanvasRef = useRef<HTMLCanvasElement>(null);\n\n  const [{ xy }] = props.controls.xyCtrl;\n  const [{ z }, setControlZoom] = props.controls.zoomCtrl;\n  const [{ theta }] = props.controls.rotCtrl;\n  const maxI = props.maxI; // -> global\n  const AA = props.useAA ? 2 : 1;\n\n  const fragShader = newSmoothJuliaShader({\n    maxI: maxI,\n    AA: AA,\n  });\n\n  const miniFragShader = newSmoothJuliaShader({\n    maxI: maxI,\n    AA: 2,\n  });\n\n  const u: MandelbrotMapsWebGLUniforms = {\n    zoom: z,\n    xy: xy,\n    c: props.c,\n    theta: theta,\n    maxI: maxI,\n    colour: Rgb255ColourToFloat(props.colour),\n  };\n\n  const [dragging, setDragging] = useState(false);\n\n  const gtb = genericTouchBind({\n    domTarget: canvasRef,\n    controls: props.controls,\n    setDragging: setDragging,\n  });\n\n  useGesture(gtb.handlers, gtb.config);\n\n  return (\n    <SettingsContext.Consumer>\n      {({ settings }) => (\n        <div\n          className=\"renderer\"\n          style={{\n            position: 'relative',\n          }}\n        >\n          <WebGLCanvas\n            id=\"julia-canvas\"\n            fragShader={fragShader}\n            useDPR={props.useDPR}\n            u={u}\n            ref={canvasRef}\n            dragging={dragging}\n          />\n          <MinimapViewer\n            id=\"julia-minimap-canvas\"\n            fragShader={miniFragShader}\n            useDPR={settings.useDPR}\n            u={u}\n            canvasRef={miniCanvasRef}\n            onClick={() => setControlZoom({ z: 1 })}\n            show={settings.showMinimap}\n          />\n        </div>\n      )}\n    </SettingsContext.Consumer>\n  );\n}\n","// TODO set max iterations as parameter, crosshair as parameter\n\nimport { RendererRenderValues } from '../common/render';\n\nconst makeCrosshair = (stroke: number, radius: number) => ({\n  stroke,\n  radius,\n});\n\nexport const standardCrosshair = makeCrosshair(2, 100);\nexport const miniCrosshair = makeCrosshair(1, 30);\n\nexport interface MandelbrotShaderParams {\n  maxI: number;\n  /** Radial boundary */\n  B: number;\n  /** Anti-aliasing samples */\n  AA: number;\n}\n\nconst newSmoothMandelbrotShader = (\n  { maxI = 300, AA = 1, B = 64 }: RendererRenderValues,\n  showCrosshair = true,\n  crosshairShape = {\n    stroke: 2,\n    radius: 100,\n  },\n): string => {\n  return `\n// Adapted by Joao Maio/2019, based on work by inigo quilez - iq/2013\n// License Creative Commons Attribution-NonCommercial-ShareAlike 3.0 Unported License.\n\n// See here for more information on smooth iteration count:\n// http://iquilezles.org/www/articles/mset_smooth/mset_smooth.htm\n\n#define false 0\n#define true 1\n\n// render parameters\n#define AA ${AA}\n#define MAXI ${maxI}\n#define B ${B.toFixed(1)}\n\n// crosshair parameters\n#define show_crosshair ${showCrosshair}\n#define cross_stroke ${crosshairShape.stroke.toFixed(1)}\n#define cross_radius ${crosshairShape.radius.toFixed(1)}\n\n// https://webglfundamentals.org/webgl/lessons/webgl-precision-issues.html\n// prefer high float precision (lower than this may break colours on mobile)\n#ifdef GL_FRAGMENT_PRECISION_HIGH\n  precision highp float;\n#else\n  precision mediump float;\n#endif\n\n// need to know the resolution of the canvas\nuniform vec2 resolution;\n\n// properties should be passed as uniforms\nuniform int   u_maxI;  \nuniform vec2  u_xy;\nuniform float u_zoom;\nuniform float u_theta;\nuniform vec3  u_colour;\n\nbool crosshair( float x, float y ) {\n  float abs_x = abs(2.0*x - resolution.x);\n  float abs_y = abs(2.0*y - resolution.y);\n\n  return \n  // crosshair in centre of screen\n  (abs_x <= cross_stroke || abs_y <= cross_stroke) &&\n  // crosshair size / \"radius\"\n  (abs_x <= cross_radius && abs_y <= cross_radius);\n}\n\nfloat mandelbrot( in vec2 c ) {\n    {\n        float c2 = dot(c, c);\n        // skip computation inside M1 - http://iquilezles.org/www/articles/mset_1bulb/mset1bulb.htm\n        if( 256.0*c2*c2 - 96.0*c2 + 32.0*c.x - 3.0 < 0.0 ) return 0.0;\n        // skip computation inside M2 - http://iquilezles.org/www/articles/mset_2bulb/mset2bulb.htm\n        if( 16.0*(c2+2.0*c.x+1.0) - 1.0 < 0.0 ) return 0.0;\n    }\n\n    float l = 0.0;\n    vec2 z  = vec2(0.0);\n    for( int i=0; i<MAXI; i++ )\n    {\n        z = vec2( z.x*z.x - z.y*z.y, 2.0*z.x*z.y ) + c;\n        if( dot(z,z)>(B*B) ) break;\n        l += 1.0;\n    }\n\n    // maxed out iterations\n    if( l>float(MAXI)-1.0 ) return 0.0;\n    \n    // optimized smooth interation count\n    l = l - log2(log2(dot(z,z))) + 4.0;\n\n    return l;\n}\n\nvoid main() {    \n    // set the initial colour to black\n    vec3 col = vec3(0.0);\n\n    // anti-aliasing\n    #if AA>1\n    for( int m=0; m<AA; m++ )\n    for( int n=0; n<AA; n++ )\n    {\n        // vec2 p = (-iResolution.xy + 2.0*(fragCoord.xy+vec2(float(m),float(n))/float(AA)))/iResolution.y;\n        vec2 p = (2.0*(gl_FragCoord.xy + vec2(float(m), float(n)) / float(AA) ) - resolution.xy)/resolution.y;\n        float w = float(AA*m+n);\n    #else    \n        // adjust pixels to range from [-1, 1]\n        vec2 p = (2.0*gl_FragCoord.xy - resolution.xy)/resolution.y;\n    #endif\n\n    float sinT = sin(u_theta);\n    float cosT = cos(u_theta);\n\n    vec2 xy = vec2( p.x*cosT - p.y*sinT, p.x*sinT + p.y*cosT );\n    // c is based on offset and grid position, z_0 = 0\n    vec2 c = u_xy + xy/u_zoom;\n    \n    float l = mandelbrot(c);\n    // col += 0.5 + 0.5*cos( 3.0 + l*0.15 + vec3(0.0,0.6,1.0));\n    col += 0.5 + 0.5*cos( 3.0 + l*0.15 + u_colour);\n\n    // antialiasing\n    #if AA>1\n    }\n    col /= float(AA*AA);\n    #endif\n\n    #if show_crosshair\n    if (crosshair(gl_FragCoord.x, gl_FragCoord.y)) {\n        col = 1. - col;\n    }\n    #endif\n\n    // Output to screen\n    gl_FragColor = vec4( col, 1.0 );\n}\n    `;\n};\n\nexport default newSmoothMandelbrotShader;\n","import { Card, Grow } from '@material-ui/core';\nimport React from 'react';\nimport { animated } from 'react-spring';\nimport { FPSCardProps } from '../../common/info';\n\nconst FPSCard = (props: FPSCardProps): JSX.Element => (\n  <Grow in={props.show}>\n    <Card\n      style={{\n        position: 'fixed',\n        top: 0,\n        left: 0,\n        padding: '4px 12px',\n        margin: 6,\n        fontFamily: 'monospace',\n        borderRadius: 100,\n        fontSize: '1.8rem',\n        zIndex: 1300,\n        userSelect: 'none',\n      }}\n    >\n      <animated.div>{props.fps}</animated.div>\n    </Card>\n  </Grow>\n);\n\nexport default FPSCard;\n","import React, { useRef, useState } from 'react';\nimport { useGesture } from 'react-use-gesture';\nimport { MandelbrotRendererProps } from '../../common/render';\nimport { MandelbrotMapsWebGLUniforms } from '../../common/types';\nimport { genericTouchBind, Rgb255ColourToFloat } from '../../common/utils';\nimport newSmoothMandelbrotShader, {\n  miniCrosshair,\n  standardCrosshair,\n} from '../../shaders/newSmoothMandelbrotShader';\nimport FPSCard from '../info/FPSCard';\nimport { SettingsContext } from '../settings/SettingsContext';\nimport MinimapViewer from './MinimapViewer';\nimport WebGLCanvas from './WebGLCanvas';\n\nexport default function MandelbrotRenderer(props: MandelbrotRendererProps): JSX.Element {\n  // variables to hold canvas and webgl information\n  const canvasRef = useRef<HTMLCanvasElement>(null);\n  const miniCanvasRef = useRef<HTMLCanvasElement>(null);\n\n  // const gl = useRef<WebGLRenderingContext>(null);\n  // const miniGl = useRef<WebGLRenderingContext>(null);\n\n  // this multiplier subdivides the screen space into smaller increments\n  // to allow for velocity calculations to not immediately decay, due to the\n  // otherwise small scale that is being mapped to the screen.\n  // const screenScaleMultiplier = props.screenScaleMultiplier; // -> global\n\n  // temporary bounds to prevent excessive panning\n  // eslint-disable-next-line\n  // const radialBound = 1;\n  // const relativeRadialBound = radialBound;// / -screenScaleMultiplier;\n\n  // read incoming props\n  const [{ xy }] = props.controls.xyCtrl;\n  // const [{ theta, last_pointer_angle }, setControlRot] = props.controls.rot;\n  const [{ z }, setControlZoom] = props.controls.zoomCtrl;\n  const [{ theta }] = props.controls.rotCtrl;\n  const maxI = props.maxI; // -> global\n  const AA = props.useAA ? 2 : 1; // -> global\n\n  const fragShader = newSmoothMandelbrotShader(\n    {\n      maxI: maxI,\n      AA: AA,\n    },\n    props.showCrosshair,\n    standardCrosshair,\n  );\n  const miniFragShader = newSmoothMandelbrotShader(\n    {\n      maxI: maxI,\n      AA: 2,\n    },\n    props.showCrosshair,\n    miniCrosshair,\n  );\n\n  const u: MandelbrotMapsWebGLUniforms = {\n    zoom: z,\n    xy: xy,\n    theta: theta,\n    maxI: maxI,\n    colour: Rgb255ColourToFloat(props.colour), // vec3(0.0,0.6,1.0)\n    // screenScaleMultiplier: screenScaleMultiplier,\n  };\n\n  const [dragging, setDragging] = useState(false);\n\n  const gtb = genericTouchBind({\n    domTarget: canvasRef,\n    controls: props.controls,\n    // gl: gl,\n    setDragging: setDragging,\n  });\n\n  // https://use-gesture.netlify.app/docs/changelog/#breaking\n  // When adding events directly to the dom element using `domTarget`\n  // you no longer need to clean the effect yourself.\n  // const touchBind =\n  useGesture(gtb.handlers, gtb.config);\n\n  // useEffect(() => {\n  //   touchBind();\n  // }, [touchBind]);\n\n  const [fps, setFps] = useState('');\n\n  return (\n    <SettingsContext.Consumer>\n      {({ settings }) => (\n        <div\n          className=\"renderer\"\n          style={{\n            position: 'relative',\n          }}\n        >\n          <FPSCard fps={fps} show={settings.showFPS} />\n          <WebGLCanvas\n            id=\"mandelbrot-canvas\"\n            fragShader={fragShader}\n            useDPR={settings.useDPR}\n            // touchBind={touchBind}\n            u={u}\n            ref={canvasRef}\n            // glRef={gl}\n            fps={setFps}\n            dragging={dragging}\n          />\n          <MinimapViewer\n            id=\"mandelbrot-minimap-canvas\"\n            fragShader={miniFragShader}\n            useDPR={settings.useDPR}\n            u={u}\n            canvasRef={miniCanvasRef}\n            // glRef={miniGl}\n            show={settings.showMinimap}\n            onClick={() => setControlZoom({ z: 1 })}\n          />\n        </div>\n      )}\n    </SettingsContext.Consumer>\n  );\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/,\n    ),\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config): void {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://cra.link/PWA',\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://cra.link/PWA.',\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister(): void {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","// https://felixgerschau.com/create-a-pwa-update-notification-with-create-react-app/\n\nimport { Button, Snackbar } from '@material-ui/core';\nimport Alert from '@material-ui/lab/Alert';\nimport React, { FC, useEffect } from 'react';\nimport * as serviceWorker from '../serviceWorkerRegistration';\n// service worker config has been removed from CRA / react-scripts 4.0\n// https://github.com/facebook/create-react-app/issues/9776#issuecomment-728945921\n// files sourced from https://github.com/cra-template/pwa/tree/master/packages/cra-template-pwa-typescript\n\nconst ServiceWorkerWrapper: FC = () => {\n  const [showReload, setShowReload] = React.useState(false);\n  const [waitingWorker, setWaitingWorker] = React.useState<ServiceWorker | null>(null);\n\n  const onSWUpdate = (registration: ServiceWorkerRegistration) => {\n    console.log('Out of date version detected! Triggering snackbar.');\n    setShowReload(true);\n    setWaitingWorker(registration.waiting);\n  };\n\n  useEffect(() => {\n    console.log('Registering Service Worker for update detection...');\n    serviceWorker.register({ onUpdate: onSWUpdate });\n  }, []);\n\n  const reloadPage = () => {\n    // optional chaining was not working here...\n    // https://www.typescriptlang.org/docs/handbook/release-notes/typescript-3-7.html\n    waitingWorker && waitingWorker.postMessage({ type: 'SKIP_WAITING' });\n    setShowReload(false);\n    // reload(b: Boolean) is deprecated\n    window.location.reload();\n  };\n\n  return (\n    <Snackbar open={showReload} anchorOrigin={{ vertical: 'top', horizontal: 'center' }}>\n      <Alert\n        severity=\"info\"\n        action={\n          <Button color=\"inherit\" variant=\"outlined\" size=\"small\" onClick={reloadPage}>\n            Update\n          </Button>\n        }\n      >\n        A new version is available!\n      </Alert>\n    </Snackbar>\n  );\n};\n\nexport default ServiceWorkerWrapper;\n","import {\n  Backdrop,\n  Divider,\n  Fab,\n  FormControlLabel,\n  FormControlLabelProps,\n  FormGroup,\n  Grid,\n  makeStyles,\n  Popover,\n  Typography,\n} from '@material-ui/core';\nimport Button from '@material-ui/core/Button';\nimport { SvgIconComponent } from '@material-ui/icons';\nimport InfoIcon from '@material-ui/icons/Info';\nimport MyLocationIcon from '@material-ui/icons/MyLocation';\nimport SettingsIcon from '@material-ui/icons/Settings';\nimport React, { useState } from 'react';\nimport { SettingsMenuProps } from '../../common/settings';\n// react-colorful requires style imports\n// import 'react-colorful/dist/index.css';\nimport '../../css/react-colorful.css';\nimport { contrastBoxShadow } from '../../theme/theme';\nimport { SettingsContext } from './SettingsContext';\nimport { getSettingsWidgetsGrouping } from './SettingsDefinitions';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    position: 'absolute',\n    bottom: theme.spacing(2),\n    right: theme.spacing(2),\n    display: 'flex',\n    flexDirection: 'column',\n    zIndex: 2,\n  },\n  settingsButton: {\n    boxShadow: contrastBoxShadow,\n  },\n  popoverCardGrid: {\n    paddingTop: 24,\n    paddingBottom: 16,\n    paddingRight: 24,\n    paddingLeft: 24,\n  },\n  sliderControl: {\n    width: 30,\n  },\n}));\n\nconst GroupDivider = () => <Divider style={{ marginTop: 8, marginBottom: 12 }} />;\nconst GroupTitle = (props: { title: string; icon: SvgIconComponent }) => (\n  <Grid container alignItems=\"center\" justify=\"center\" spacing={1}>\n    {/* remove margin to center based only on text and not icon (not ideal) */}\n    <Grid item style={{ marginLeft: -24 }}>\n      <props.icon color=\"primary\" fontSize=\"small\" />\n    </Grid>\n    <Grid item>\n      <Typography color=\"primary\" variant=\"button\" style={{ fontSize: 14 }}>\n        {props.title}\n      </Typography>\n    </Grid>\n  </Grid>\n);\n\nexport default function SettingsMenu(props: SettingsMenuProps): JSX.Element {\n  const classes = useStyles();\n\n  const [anchorEl, setAnchorEl] = useState<EventTarget & HTMLButtonElement>();\n\n  const ResetButton = () => (\n    <Button\n      startIcon={<MyLocationIcon />}\n      color=\"secondary\"\n      aria-controls=\"reset\"\n      onClick={() => {\n        props.reset();\n      }}\n    >\n      Reset\n    </Button>\n  );\n  const AboutButton = () => (\n    <Button\n      startIcon={<InfoIcon />}\n      color=\"primary\"\n      aria-controls=\"about\"\n      onClick={() => {\n        props.toggleInfo();\n        setAnchorEl(undefined);\n      }}\n    >\n      About\n    </Button>\n  );\n\n  return (\n    <div className={classes.root}>\n      <Fab\n        aria-controls=\"menu\"\n        aria-haspopup=\"true\"\n        aria-label=\"settings\"\n        size=\"small\"\n        onClick={(e) => setAnchorEl(e.currentTarget)}\n        // style={{\n        //   boxShadow: heavyBoxShadow,\n        // }}\n        className={classes.settingsButton}\n      >\n        <SettingsIcon />\n      </Fab>\n      <Backdrop open={Boolean(anchorEl)}>\n        <Popover\n          id=\"menu\"\n          anchorEl={anchorEl}\n          keepMounted\n          open={Boolean(anchorEl)}\n          onClose={() => setAnchorEl(undefined)}\n          anchorOrigin={{\n            horizontal: 'right',\n            vertical: 'bottom',\n          }}\n          transformOrigin={{\n            vertical: 'bottom',\n            horizontal: 'right',\n          }}\n        >\n          <Grid container direction=\"column\" className={classes.popoverCardGrid}>\n            <Grid item container alignItems=\"center\" justify=\"space-around\">\n              <Grid item>\n                <Typography variant=\"h1\" style={{ fontSize: 20 }}>\n                  Configuration\n                </Typography>\n              </Grid>\n            </Grid>\n            <SettingsContext.Consumer>\n              {({ setSettings, settingsWidgets }) =>\n                getSettingsWidgetsGrouping(settingsWidgets).map((g) => (\n                  <Grid item key={g.name}>\n                    <GroupDivider />\n                    <GroupTitle icon={g.icon} title={g.name} />\n                    <FormGroup>\n                      {Object.entries(g.widgets).map(([k, widget]) => (\n                        <FormControlLabel\n                          key={`${k}-control`}\n                          style={{ userSelect: 'none' }}\n                          {...(widget as FormControlLabelProps)}\n                          // ...e catches all event arguments\n                          onChange={(...e) => {\n                            // the value is the last element of the \"e\" array\n                            // https://stackoverflow.com/a/12099341/9184658\n                            // > using destructuring is nice too:\n                            // > const [lastItem] = arr.slice(-1)\n                            // > – diachedelic Mar 11 '19 at 6:30\n                            const [val] = e.slice(-1);\n                            console.debug(`${k} ->`, val);\n                            // TODO: updating state like this seems to be very slow\n                            // either have individual useState pairs, or use a Map?\n                            setSettings((prevState) => ({\n                              ...prevState,\n                              [k]: val,\n                            }));\n                          }}\n                        />\n                      ))}\n                    </FormGroup>\n                  </Grid>\n                ))\n              }\n            </SettingsContext.Consumer>\n\n            <GroupDivider />\n\n            <Grid\n              container\n              direction=\"row\"\n              justify=\"space-between\"\n              alignItems=\"stretch\"\n              spacing={1}\n            >\n              <Grid item>\n                <ResetButton />\n              </Grid>\n              <Grid item>\n                <AboutButton />\n              </Grid>\n            </Grid>\n          </Grid>\n        </Popover>\n      </Backdrop>\n    </div>\n  );\n}\n","import { Grid, ThemeProvider } from '@material-ui/core';\nimport React, { useCallback, useEffect, useMemo, useState } from 'react';\nimport { useSpring } from 'react-spring';\nimport './App.css';\nimport {\n  currentLocation,\n  useHashLocation,\n  useHashNavigator,\n  ViewerURLManager,\n} from './common/routing';\nimport {\n  ViewerControlSprings,\n  ViewerLocation,\n  ViewerRotationControl,\n  ViewerXYControl,\n  ViewerZoomControl,\n} from './common/types';\nimport { useWindowSize, warpToPoint } from './common/utils';\nimport { springsConfigs, viewerOrigin } from './common/values';\nimport CoordinateInterface from './components/info/CoordinateInterface';\nimport InfoDialog from './components/info/InfoDialog';\nimport JuliaRenderer from './components/render/JuliaRenderer';\n// import 'typeface-roboto';\nimport MandelbrotRenderer from './components/render/MandelbrotRenderer';\nimport ServiceWorkerWrapper from './components/ServiceWorkerWrapper';\nimport SettingsProvider, { SettingsContext } from './components/settings/SettingsContext';\nimport SettingsMenu from './components/settings/SettingsMenu';\nimport theme from './theme/theme';\n\nfunction App(): JSX.Element {\n  const size = useWindowSize();\n\n  // if app is started with a hash location, assume\n  // it should be the starting position\n  // detects hash updates\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  const [loc, navigate] = useHashLocation();\n\n  // non-reloading hash update\n  const updateBrowserHash = useHashNavigator();\n\n  const urlManager = useMemo(() => new ViewerURLManager(), []);\n\n  // generic callback\n  const updateHash = useCallback(\n    (name: string, v: Partial<ViewerLocation>) => {\n      urlManager.updateViewer(name, v);\n      const u = urlManager.asFullHashURL();\n      // console.debug(`Updated # for ${name} => ${u}`);\n      updateBrowserHash(u);\n    },\n    [updateBrowserHash, urlManager],\n  );\n\n  // callbacks for springs to update url when animation stops\n  const updateM = (v: Partial<ViewerLocation>) => updateHash('m', v);\n  const updateJ = (v: Partial<ViewerLocation>) => updateHash('j', v);\n\n  const mandelbrotControls: ViewerControlSprings = {\n    xyCtrl: useSpring<ViewerXYControl>(() => ({\n      xy: viewerOrigin.xy,\n      config: springsConfigs.default.xy,\n      onRest: updateM,\n    })),\n\n    zoomCtrl: useSpring<ViewerZoomControl>(() => ({\n      z: viewerOrigin.z,\n      minZoom: 0.5,\n      maxZoom: 100000,\n      config: springsConfigs.default.zoom,\n      onRest: updateM,\n    })),\n\n    rotCtrl: useSpring<ViewerRotationControl>(() => ({\n      theta: viewerOrigin.theta, // all angles in rad\n      config: springsConfigs.default.rot,\n      onRest: updateM,\n    })),\n  };\n\n  const juliaControls: ViewerControlSprings = {\n    xyCtrl: useSpring<ViewerXYControl>(() => ({\n      xy: viewerOrigin.xy,\n      config: springsConfigs.default.xy,\n      onRest: updateJ,\n    })),\n\n    zoomCtrl: useSpring<ViewerZoomControl>(() => ({\n      z: viewerOrigin.z,\n      minZoom: 0.5,\n      maxZoom: 2000,\n      config: springsConfigs.default.zoom,\n      onRest: updateJ,\n    })),\n\n    rotCtrl: useSpring<ViewerRotationControl>(() => ({\n      theta: viewerOrigin.theta, // all angles in rad\n      config: springsConfigs.default.rot,\n      onRest: updateJ,\n    })),\n  };\n\n  useEffect(() => {\n    // viewer should update if user goes back / forward on the page\n    // parse current location after user change\n    urlManager.updateFromURL();\n    console.log(`Warping to requested url => ${currentLocation()}`);\n\n    // warp to the newly parsed locations\n    warpToPoint(mandelbrotControls, urlManager.vs['m'].v);\n    warpToPoint(juliaControls, urlManager.vs['j'].v);\n    // this update process should only trigger when the hash location changes\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [loc]);\n\n  const reset = () => {\n    warpToPoint(mandelbrotControls, viewerOrigin);\n    warpToPoint(juliaControls, viewerOrigin);\n  };\n\n  const [showInfo, setShowInfo] = useState(false);\n\n  const toggleInfo = () => setShowInfo(!showInfo);\n\n  return (\n    <ThemeProvider theme={theme}>\n      <ServiceWorkerWrapper />\n      <SettingsProvider>\n        <Grid container>\n          <SettingsContext.Consumer>\n            {({ settings }) => (\n              // JSX expressions must have one parent element\n              <Grid\n                item\n                container\n                direction={\n                  (size.width || 1) < (size.height || 0) ? 'column-reverse' : 'row'\n                }\n                justify=\"center\"\n                className=\"fullSize\"\n                style={{\n                  position: 'absolute',\n                }}\n              >\n                <CoordinateInterface\n                  show={settings.showCoordinates}\n                  mandelbrot={mandelbrotControls}\n                />\n                <Grid item xs className=\"renderer\">\n                  <MandelbrotRenderer controls={mandelbrotControls} {...settings} />\n                </Grid>\n                <Grid item xs className=\"renderer\">\n                  <JuliaRenderer\n                    c={mandelbrotControls.xyCtrl[0].xy}\n                    controls={juliaControls}\n                    {...settings}\n                  />\n                </Grid>\n              </Grid>\n            )}\n          </SettingsContext.Consumer>\n\n          <SettingsMenu reset={() => reset()} toggleInfo={() => toggleInfo()} />\n\n          <InfoDialog ctrl={[showInfo, setShowInfo]} />\n        </Grid>\n      </SettingsProvider>\n    </ThemeProvider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n// import * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// The default service worker is not used: it's overridden instead\n// by the ServiceWorkerWrapper (ServiceWorkerWrapper.tsx)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n// serviceWorker.register();\n"],"sourceRoot":""}