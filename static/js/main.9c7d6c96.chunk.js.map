{"version":3,"sources":["common/values.ts","common/routing.ts","common/utils.ts","components/info/ChangeCoordinatesCard.tsx","components/info/CoordinatesCard.tsx","components/info/CoordinateInterface.tsx","components/info/InfoDialog.tsx","dist/clientDetect.js","shaders/newSmoothJuliaShader.js","common/settings.ts","components/settings/SettingsDefinitions.tsx","components/settings/SettingsContext.tsx","theme/theme.tsx","shaders/fullVertexShader.js","components/render/WebGLCanvas.tsx","components/render/MinimapViewer.tsx","components/render/JuliaRenderer.tsx","shaders/newSmoothMandelbrotShader.ts","components/info/FPSCard.tsx","components/render/MandelbrotRenderer.tsx","serviceWorker.js","components/ServiceWorkerWrapper.tsx","components/settings/SettingsMenu.tsx","App.tsx","index.tsx"],"names":["viewerOrigin","xy","z","theta","defaultMandelbrotStart","defaultJuliaStart","springsConfigs","default","mass","tension","friction","precision","zoom","rot","user","toFloatDisplay","n","p","toFixed","toFloatDisplayShort","NamedHashURLViewer","name","v","this","ViewerURLManager","vs","updateFromURL","asHashURL","params","currentViewerState","newV","undefined","map","toFloatDisplayDefault","m","j","updateViewer","currentLocation","window","location","hash","replace","l","viewerParams","split","filter","length","forEach","s","Number","x","y","t","error","console","log","genericTouchBind","domTarget","controls","setDragging","xyCtrl","setControlXY","zoomCtrl","minZoom","maxZoom","setControlZoom","rotCtrl","setControlRot","zoomMult","getRealZoom","current","height","handlers","onPinch","event","da","vdva","down","movement","md","ma","delta","first","origin","memo","getValue","a","o","preventDefault","newZ","_","clamp","deg","newZclamp","realZoom","vScale","subV","relMove","addV","vRotate","immediate","config","Math","PI","onWheel","my","active","shiftKey","newT","onDrag","direction","pinching","velocity","cancel","last","vecXY","eventOptions","passive","capture","warpToPoint","ChangeCoordinatesCard","props","useState","setXY","setZoom","setTheta","Card","style","width","zIndex","position","padding","display","flexDirection","flexShrink","Grid","container","alignItems","TextField","size","onChange","e","target","value","type","defaultValue","inputProps","step","label","justify","min","Button","marginTop","onClick","mandelbrot","CoordinatesCard","marginBottom","Typography","align","fontFamily","fontSize","span","interpolate","CoordinateInterface","Grow","in","show","right","top","margin","DialogTitle","withStyles","theme","createStyles","root","spacing","image","marginRight","closeButton","marginLeft","color","palette","grey","children","classes","onClose","other","disableTypography","className","src","alt","variant","IconButton","aria-label","DialogContent","MuiDialogContent","DialogActions","MuiDialogActions","Alert","elevation","InfoDialog","ctrl","open","setOpen","snackBarOpen","setSnackBarOpen","handleClose","clientData","useMemo","screenSize","screen","nameOffset","verOffset","ix","nVer","navigator","appVersion","nAgt","userAgent","browser","appName","version","parseFloat","majorVersion","parseInt","indexOf","substring","lastIndexOf","toLowerCase","toUpperCase","isNaN","mobile","test","cookieEnabled","document","cookie","os","clientStrings","r","id","cs","osVersion","exec","gl","debugInfo","gpuVendor","renderer","system","device","canvas","createElement","getContext","getExtension","getParameter","UNMASKED_VENDOR_WEBGL","UNMASKED_RENDERER_WEBGL","browserVersion","browserRelease","platform","dpr","devicePixelRatio","gpu","clientDetect","Dialog","aria-labelledby","maxWidth","dividers","gutterBottom","Link","href","Divider","Box","TableContainer","component","Paper","Table","TableHead","TableRow","TableCell","colSpan","TableBody","Object","entries","k","key","String","data","clipboard","writeText","prompt","writeToClipboard","JSON","stringify","startIcon","Snackbar","autoHideDuration","severity","surveyLink","rel","textDecoration","autoFocus","newSmoothJuliaShader","maxI","AA","B","defaultSettings","showMinimap","showCrosshair","showCoordinates","showFPS","useDPR","useAA","settingsWidgets","settings","checked","control","Switch","labelPlacement","Slider","max","valueLabelDisplay","marks","SettingsContext","createContext","setSettings","SettingsProvider","Provider","createMuiTheme","MuiSwitch","MuiButton","primary","main","colors","blue","secondary","red","info","fullscreenVertexArray","numComponents","WebGLCanvas","React","forwardRef","refAny","canvasRef","useRef","renderRequestRef","bufferInfo","programInfo","u","setFps","fps","useCallback","mini","setupCanvas","debug","useEffect","addEventListener","compileShader","ctx","twgl","fragShader","then","frames","elapsedTime","render","time","prog","buff","viewport","uniforms","resolution","u_zoom","u_c","c","u_xy","u_maxI","u_theta","useProgram","program","requestAnimationFrame","cancelAnimationFrame","ref","cursor","dragging","displayName","MinimapViewer","rest","ButtonBase","left","bottom","borderRadius","boxShadow","overflow","JuliaRenderer","miniCanvasRef","miniFragShader","gtb","useGesture","Consumer","makeCrosshair","stroke","radius","standardCrosshair","miniCrosshair","newSmoothMandelbrotShader","crosshairShape","FPSCard","userSelect","div","MandelbrotRenderer","isLocalhost","Boolean","hostname","match","register","URL","process","swUrl","fetch","response","contentType","headers","get","status","serviceWorker","ready","registration","unregister","reload","registerValidSW","catch","checkValidServiceWorker","onupdatefound","installingWorker","installing","onstatechange","state","controller","onUpdate","onSuccess","ServiceWorkerWrapper","showReload","setShowReload","waitingWorker","setWaitingWorker","onSWUpdate","waiting","anchorOrigin","vertical","horizontal","action","postMessage","useStyles","makeStyles","button","sliderControl","GroupDivider","GroupTitle","title","SettingsMenu","anchorEl","setAnchorEl","ResetButton","aria-controls","reset","AboutButton","toggleInfo","Fab","aria-haspopup","currentTarget","Backdrop","Popover","keepMounted","transformOrigin","paddingLeft","paddingRight","paddingTop","paddingBottom","item","widgets","getSettingsWidgetsGrouping","g","FormGroup","widget","FormControlLabel","val","prevState","App","isClient","getSize","innerWidth","innerHeight","windowSize","setWindowSize","handleResize","removeEventListener","useWindowSize","loc","setLoc","handler","to","useHashLocation","updateBrowserHash","history","replaceState","urlManager","updateHash","asFullHashURL","updateM","updateJ","mandelbrotControls","useSpring","onRest","juliaControls","showInfo","setShowInfo","ThemeProvider","xs","ReactDOM","getElementById"],"mappings":"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","file":"static/js/main.9c7d6c96.chunk.js","sourcesContent":["import { ViewerLocation } from './types';\n\n// this multiplier subdivides the screen space into smaller increments\n// to allow for velocity calculations to not immediately decay, due to the\n// otherwise small scale that is being mapped to the screen.\n// export const screenScaleMultiplier = 1e-7;\n// TL;DR this was a workaround - react-spring allows for \"precision\"\n//       to be defined in each spring configuration, which is:\n//       > The smallest velocity before the animation is considered \"not moving\"\nexport const defaultPrecision = 1e-7;\n\nexport const viewerOrigin: ViewerLocation = {\n  xy: [0, 0],\n  z: 1,\n  theta: 0,\n};\n\nexport const defaultMandelbrotStart: ViewerLocation = {\n  xy: [0.2361652, 0.5633767],\n  z: 4,\n  theta: 0.2,\n};\nexport const defaultJuliaStart: ViewerLocation = {\n  xy: [0.4364131, -0.6468786],\n  z: 4,\n  theta: 2.12,\n};\n\nexport const springsConfigs = {\n  /** used when the values are animated to a point, includes decay */\n  default: {\n    xy: { mass: 1, tension: 500, friction: 75, precision: defaultPrecision },\n    zoom: { mass: 1, tension: 300, friction: 40 },\n    rot: { mass: 1, tension: 400, friction: 75 },\n  },\n  /** used when a user is interacting with the view */\n  user: {\n    xy: { mass: 1, tension: 2000, friction: 75, precision: defaultPrecision },\n    zoom: { mass: 1, tension: 1200, friction: 75 },\n    rot: { mass: 1, tension: 1200, friction: 75 },\n  },\n  // default and decay are merged to give them single \"non-user\" values\n  // decay: {\n  //   /** used after the user has let go of the view, decaying */\n  //   xy: { mass: 1, tension: 500, friction: 75 },\n  //   zoom: { mass: 1, tension: 300, friction: 50 },\n  //   rot: { mass: 1, tension: 400, friction: 75 },\n  // },\n};\n\n// export const defaultSpringConfig = { mass: 1, tension: 100, friction: 200 };\n\n// export const xyCtrlSpringConfig = { mass: 1, tension: 2000, friction: 100 };\n// export const xyCtrlSpringDecayConfig = { mass: 1, tension: 500, friction: 75 };\n\n// default number of numbers after the decimal point\nexport const defaultFloatFixedPrecision = 7;\nexport const shortFloatFixedPrecision = 2;\n\nexport const toFloatDisplay = (n: number, p: number): number => +n.toFixed(p);\n\nexport const toFloatDisplayDefault = (n: number): number =>\n  toFloatDisplay(n, defaultFloatFixedPrecision);\n\nexport const toFloatDisplayShort = (n: number): number =>\n  toFloatDisplay(n, shortFloatFixedPrecision);\n","import { useCallback, useEffect, useState } from 'react';\nimport { ReactUseStateType, ViewerLocation, XYType } from './types';\nimport {\n  defaultJuliaStart,\n  defaultMandelbrotStart,\n  toFloatDisplayDefault,\n  toFloatDisplayShort,\n} from './values';\n\nexport class NamedHashURLViewer {\n  name: string;\n  v: ViewerLocation;\n\n  constructor(name: string, v: ViewerLocation) {\n    this.name = name;\n    this.v = v;\n  }\n\n  /**\n   * convert a viewer's state into a defined URL representation\n   * @param namedViewer the viewer object to be converted\n   */\n  asHashURL(): string {\n    const { xy, z, theta } = this.v;\n    return `/${this.name}@${xy[0]},${xy[1]},${z},${theta}`;\n  }\n}\n\nexport class ViewerURLManager {\n  vs: {\n    [k: string]: NamedHashURLViewer;\n  };\n\n  constructor() {\n    this.vs = {};\n    this.updateFromURL();\n  }\n\n  asFullHashURL(): string {\n    return `#${this.vs['m'].asHashURL()}${this.vs['j'].asHashURL()}`;\n  }\n\n  updateFromURL(): void {\n    const params = currentViewerState();\n    this.vs['m'] = new NamedHashURLViewer(\n      'm',\n      params['m'] || { ...defaultMandelbrotStart },\n    );\n    this.vs['j'] = new NamedHashURLViewer('j', params['j'] || { ...defaultJuliaStart });\n  }\n\n  updateViewer(name: string, v: Partial<ViewerLocation>): void {\n    // console.log('updateViewer');\n    const { xy, z, theta } = v;\n    // const [[{ xy }], [{ z }], [{ theta }]] = [xyC]\n    // const [xy] = [xyCtrl?.xy];\n    const newV = this.vs[name].v;\n    if (xy !== undefined) newV.xy = xy.map((n) => toFloatDisplayDefault(n)) as XYType;\n    if (z !== undefined) newV.z = toFloatDisplayShort(z);\n    if (theta !== undefined) newV.theta = toFloatDisplayShort(theta);\n\n    this.vs[name].v = newV;\n  }\n\n  updateFromViewer(m: Partial<ViewerLocation>, j: Partial<ViewerLocation>): void {\n    this.updateViewer('m', m);\n    this.updateViewer('j', j);\n  }\n}\n\n// returns the current hash location in a normalized form\n// (excluding the leading '#' symbol)\nexport const currentLocation = (): string => {\n  // console.log(window.location);\n  const l = window.location.hash.replace('#', '') || '';\n  return l;\n};\n\nexport const currentViewerState = (): { [k: string]: ViewerLocation } => {\n  const l = currentLocation();\n  const viewerParams: { [k: string]: ViewerLocation } = {};\n  try {\n    const qs = l.split('/').filter((v) => v.length > 0);\n    qs.forEach((s) => {\n      const [v, params] = s.split('@');\n      const [x, y, z, t] = params.split(',').map(Number);\n      viewerParams[v] = { xy: [x, y] as XYType, z: z, theta: t };\n    });\n  } catch (error) {\n    console.log(error);\n  }\n  return viewerParams;\n};\n\n// non-reloading hash change\nexport const useHashNavigator = (): ((to: string) => void) =>\n  useCallback((to) => window.history.replaceState(null, document.title, to), []);\n\n// https://github.com/molefrog/wouter#customizing-the-location-hook\nexport const useHashLocation = (): ReactUseStateType<string> => {\n  const [loc, setLoc] = useState(currentLocation());\n\n  useEffect(() => {\n    // this function is called whenever the hash changes\n    const handler = () => setLoc(currentLocation());\n\n    // subscribe to hash changes\n    window.addEventListener('hashchange', handler);\n    return () => window.removeEventListener('hashchange', handler);\n  }, []);\n\n  // remember to wrap your function with `useCallback` hook\n  // a tiny but important optimization\n  const navigate = useCallback((to) => (window.location.hash = to), []);\n\n  return [loc, navigate];\n};\n","import _ from 'lodash';\nimport { RefObject, useCallback, useEffect, useState } from 'react';\nimport { addV, subV } from 'react-use-gesture';\nimport {\n  FullGestureState,\n  Handlers,\n  StateKey,\n  UseGestureConfig,\n  Vector2,\n} from 'react-use-gesture/dist/types';\nimport { Vector, vRotate, vScale } from 'vec-la-fp';\nimport { ViewerControlSprings, ViewerLocation } from './types';\nimport { springsConfigs } from './values';\n\n// https://usehooks.com/useWindowSize/\nexport function useWindowSize(): { width?: number; height?: number } {\n  const isClient = typeof window === 'object';\n\n  const getSize = useCallback(\n    () => ({\n      width: isClient ? window.innerWidth : undefined,\n      height: isClient ? window.innerHeight : undefined,\n    }),\n    [isClient],\n  );\n\n  const [windowSize, setWindowSize] = useState(getSize);\n\n  useEffect(() => {\n    if (!isClient) {\n      // return false;\n      return () => {\n        // do nothing\n      };\n    }\n\n    function handleResize() {\n      setWindowSize(getSize());\n    }\n\n    window.addEventListener('resize', handleResize);\n    return () => window.removeEventListener('resize', handleResize);\n  }, [getSize, isClient]); // Empty array ensures that effect is only run on mount and unmount\n\n  return windowSize;\n}\n\nexport interface GenericTouchBindParams {\n  domTarget: RefObject<HTMLCanvasElement>;\n  controls: ViewerControlSprings;\n  // screenScaleMultiplier: number;\n  // gl: any,\n  setDragging: React.Dispatch<React.SetStateAction<boolean>>;\n}\n\nexport interface GenericTouchBindReturn {\n  handlers: Handlers;\n  config: UseGestureConfig;\n}\n\n// --------------------------------------------------------------------------\n// https://gist.github.com/evdokimovm/0e7163faf7c8fe24e41e6b68461e4feb\n// Convert from degrees to radians.\nconst degToRad = (deg: number): number => (deg * Math.PI) / 180;\n// Math.radians(90); // 1.5707963267948966\n\n// Convert from radians to degrees.\n// eslint-disable-next-line\nconst radToDeg = (rad: number): number => (rad * 180) / Math.PI;\n// Math.degrees(3.141592653589793); // 180\n// --------------------------------------------------------------------------\n\n// a touchbind for re-using across renderers\nexport function genericTouchBind({\n  domTarget,\n  controls,\n  setDragging,\n}: GenericTouchBindParams): GenericTouchBindReturn {\n  const [{ xy }, setControlXY] = controls.xyCtrl;\n  const [{ z, minZoom, maxZoom }, setControlZoom] = controls.zoomCtrl;\n  const [{ theta }, setControlRot] = controls.rotCtrl;\n\n  const zoomMult = { in: 3e-3, out: 1e-3 };\n\n  // used to have screenScaleMultiplier here\n  const getRealZoom = (z: number) => (domTarget.current?.height || 100) * z;\n  // * screenScaleMultiplier;\n\n  return {\n    handlers: {\n      // prevent some browser events such as swipe-based navigation or\n      // pinch-based zoom and instead redirect them to this handler\n      // onDragStart: ({ event }: FullGestureState<StateKey<'drag'>>) =>\n      //   event?.preventDefault(),\n      // onPinchStart: ({ event }: FullGestureState<StateKey<'pinch'>>) =>\n      //   event?.preventDefault(),\n      // onWheelStart: ({ event }: FullGestureState<StateKey<'wheel'>>) =>\n      //   event?.preventDefault(),\n\n      onPinch: ({\n        event,\n        da: [d, a],\n        vdva: [vd, va],\n        down,\n        // delta: [dd, da],\n        movement: [md, ma],\n        delta: [dd, da],\n        first,\n        // initial, // initial [d, a]\n        origin,\n        // movement, //: [mx, my],\n        memo = {\n          xy: xy.getValue(),\n          z: z.getValue(),\n          t: theta.getValue(),\n          a: 0,\n          o: [0, 0] as Vector2,\n        },\n      }: FullGestureState<StateKey<'pinch'>>) => {\n        // disable native browser events\n        event && event.preventDefault();\n\n        if (first) {\n          // remember the angle, location at which the pinch gesture starts\n          // memo.a = a;\n          memo.o = origin;\n        }\n\n        // console.log(subV(origin, initial));\n        // console.log(initial);\n        // console.log(origin);\n        // console.log(md);\n        // console.log(ma);\n        // const zd = md * 1e-2;\n\n        // new zoom is the product of initial zoom and a function of the delta since the pinch\n        //   (initial zoom) exponentially changed by md, with linear and exponential multipliers\n        //     linear multiplier:\n        //     exponential multiplier: scale faster as pinch becomes more distant\n        //     if decreasing, scale must decrease more slowly\n        // const em = 1.33;\n        // const newZ =\n        //   memo.z * (1 + Math.sign(md) * 1e-2 * Math.abs(md) ** (md <= 0 ? 1 / em : em)); //(1 - zdelta * Math.abs(zdelta));\n        const newZ = _.clamp(memo.z + md * 1e-2, 0.5, 100_000) ** (1 + md * 1e-3); //(1 - zdelta * Math.abs(zdelta));\n        // console.log(Math.abs(md * 1e-2));\n        // console.log(\n        //   md.toFixed(2) + ' => ' + 1e-2 * Math.abs(md) ** (md <= 0 ? 0.8 : 1.1),\n        // );\n        console.log(newZ);\n        const newZclamp = _.clamp(newZ, minZoom.getValue(), maxZoom.getValue());\n\n        const realZoom = getRealZoom(newZclamp);\n\n        // get movement of pointer origin for panning\n        const [px, py]: Vector2 = vScale(-2 / realZoom, subV(origin, memo.o));\n        const relMove: Vector2 = [px, -py];\n\n        setControlXY({\n          xy: addV(memo.xy, vRotate(theta.getValue(), relMove)),\n          immediate: false,\n        });\n\n        setControlZoom({\n          z: newZclamp,\n          immediate: false,\n          config: down ? springsConfigs.user.zoom : springsConfigs.default.zoom,\n        });\n\n        setControlRot({\n          theta: memo.t + degToRad(ma),\n          // fixes issues with wrapping around from (0) to (-2pi)\n          immediate: false,\n          config: down ? springsConfigs.user.rot : springsConfigs.default.rot,\n        });\n\n        return memo;\n      },\n\n      onWheel: ({\n        event,\n        movement: [, my],\n        active,\n        shiftKey,\n        memo = { zoom: z.getValue(), t: theta.getValue() },\n      }: FullGestureState<StateKey<'wheel'>>) => {\n        // disable native browser events\n        event && event.preventDefault();\n\n        if (shiftKey) {\n          // if shift is pressed, rotate instead of zoom\n          const newT = memo.t + my * 1.5e-3;\n\n          setControlRot({\n            theta: newT,\n            config: active ? springsConfigs.user.rot : springsConfigs.default.rot,\n            immediate: false,\n          });\n        } else {\n          // set different multipliers based on zoom direction\n          // mouse movement negative = move up the page = zoom in\n          //                                   zoom        in           out\n          const newZ = memo.zoom * (1 - my * (my < 0 ? zoomMult.in : zoomMult.out));\n\n          setControlZoom({\n            z: _.clamp(newZ, minZoom.getValue(), maxZoom.getValue()),\n            config: active ? springsConfigs.user.zoom : springsConfigs.default.zoom,\n            // reset immediate value from warp function\n            immediate: false,\n          });\n        }\n        return memo;\n      },\n\n      onDrag: ({\n        event,\n        down,\n        movement,\n        direction: [dx, dy],\n        velocity,\n        pinching,\n        last,\n        cancel,\n        memo = { xy: xy.getValue(), theta: theta.getValue() },\n      }: FullGestureState<StateKey<'drag'>>) => {\n        // disable native browser events\n        event && event.preventDefault();\n\n        // let pinch handle movement\n        if (pinching) cancel && cancel();\n        // change according to this formula:\n        // move (x, y) in the opposite direction of drag (pan with cursor)\n        // divide by canvas size to scale appropriately\n        // multiply by 2 to correct scaling on viewport (?)\n        // use screen multiplier for more granularity\n        const realZoom = getRealZoom(z.getValue());\n\n        const [px, py]: Vector = vScale(-2 / realZoom, movement);\n        // const relMove: Vector = vScale(2 / realZoom, movement);\n\n        const relMove: Vector = [px, -py];\n        // const relDir: Vector = [dx, -dy];\n\n        const t = theta.getValue();\n\n        const vecXY = addV(memo.xy, vRotate(t, relMove)); // add the displacement to the starting position\n        // const velXY = vScale(velocity, vNorm(vecXY))\n\n        setControlXY({\n          // add to the current position the relative displacement (relMove), rotated by theta,\n          // to maintain the correct displacement direction (without this it would move as if theta=0)\n          xy: vecXY,\n          // immediate: down, // immediately apply if the gesture is active\n          config: down ? springsConfigs.user.xy : springsConfigs.default.xy,\n          // reset immediate value from warp function\n          immediate: false,\n          //  {\n          //   // velocity also needs to be rotated according to theta\n          //   // -@ts-expect-error - velocity should be `[number, number]`, but only `number` allowed\n          //   // velocity: vScale(-velocity / realZoom, vRotate(t, relDir)), // set the velocity (gesture momentum)\n          //   // velocity: vMag(vScale(-velocity / realZoom, vRotate(t, relDir))), // set the velocity (gesture momentum)\n          //   // velocity: velocity / screenScaleMultiplier, // set the velocity (gesture momentum)\n          //   // mass: down ? 1 : 5,\n          //   ...xyCtrlSpringConfig,\n          //   tension: down ? xyCtrlSpringConfig.tension : xyCtrlSpringConfig.tension / 2,\n          //   // -@ts-expect-error - decay is undocumented?\n          //   // decay: true,\n          // },\n        });\n\n        // tell the renderer that it's being dragged on\n        setDragging(down);\n\n        return memo;\n      },\n    },\n    config: {\n      eventOptions: { passive: false, capture: false },\n      domTarget: domTarget,\n      // The config object passed to useGesture has drag, wheel, scroll, pinch and move keys\n      // for specific gesture options. See here for more details.\n      // drag: {\n      //   bounds,\n      //   rubberband: true,\n      // }\n    },\n  };\n}\n\n/**\n * Warps the given controller to a desired viewer location.\n * @param controls The controller to be animated\n * @param location The (partial) viewer location to warp to: xy, zoom, theta\n * @param immediate Should the update happen immediately? (Useful for testing)\n */\nexport const warpToPoint = (\n  controls: ViewerControlSprings,\n  { xy, z, theta }: Partial<ViewerLocation>,\n  immediate = false,\n): void => {\n  // can't do a simple \"if (x)\" check since values could be zero (evaluates to \"false\")\n  if (xy !== undefined) {\n    controls.xyCtrl[1]({\n      // use screen scale multiplier for a simpler API\n      xy: xy,\n      config: springsConfigs.default.xy,\n      immediate: immediate,\n    });\n  }\n  if (z !== undefined) {\n    controls.zoomCtrl[1]({\n      z: z,\n      config: springsConfigs.default.zoom,\n      immediate: immediate,\n    });\n  }\n  if (theta !== undefined) {\n    controls.rotCtrl[1]({\n      theta: theta,\n      config: springsConfigs.default.rot,\n      immediate: immediate,\n    });\n  }\n};\n\n// no longer using screenScaleMultiplier\n// export const screenToReal = (x: number): number => x * screenScaleMultiplier;\n// export const RealToScreen = (x: number): number => x / screenScaleMultiplier;\n","import { Button, Card, Grid, TextField } from '@material-ui/core';\nimport React, { useState } from 'react';\nimport { ChangeCoordinatesCardProps } from '../../common/info';\nimport { warpToPoint } from '../../common/utils';\nimport { defaultMandelbrotStart } from '../../common/values';\n\nconst ChangeCoordinatesCard = (props: ChangeCoordinatesCardProps): JSX.Element => {\n  const [xy, setXY] = useState(defaultMandelbrotStart.xy);\n  const [x, y] = xy;\n  const [zoom, setZoom] = useState(defaultMandelbrotStart.z);\n  const [theta, setTheta] = useState(defaultMandelbrotStart.theta);\n\n  return (\n    <Card\n      style={{\n        width: 'auto',\n        zIndex: 1300,\n        position: 'relative',\n        padding: 8,\n        display: 'flex',\n        flexDirection: 'column',\n        flexShrink: 1,\n        // borderRadius: 100,\n      }}\n    >\n      <Grid container direction=\"column\" alignItems=\"center\">\n        <TextField\n          size=\"small\"\n          style={{ width: '12ch' }}\n          onChange={(e) => setXY(([x, y]) => [Number(e.target.value), y])}\n          type=\"number\"\n          defaultValue={x}\n          inputProps={{ step: 0.01 }}\n          label=\"x\"\n        />\n        <TextField\n          size=\"small\"\n          style={{ width: '12ch' }}\n          onChange={(e) => setXY(([x, y]) => [x, Number(e.target.value)])}\n          type=\"number\"\n          defaultValue={y}\n          inputProps={{ step: 0.01 }}\n          label=\"y\"\n        />\n        <Grid container direction=\"row\" justify=\"space-around\">\n          <TextField\n            size=\"small\"\n            style={{ width: '5ch' }}\n            onChange={(e) => setZoom(Number(e.target.value))}\n            type=\"number\"\n            defaultValue={zoom}\n            inputProps={{ min: 0 }}\n            label=\"zoom\"\n          />\n          <TextField\n            size=\"small\"\n            style={{ width: '5ch' }}\n            onChange={(e) => setTheta(Number(e.target.value))}\n            type=\"number\"\n            defaultValue={theta}\n            inputProps={{ step: 0.1 }}\n            label=\"theta\"\n          />\n        </Grid>\n        <Button\n          style={{ marginTop: 12 }}\n          onClick={() => warpToPoint(props.mandelbrot, { xy: xy, z: zoom, theta: theta })}\n        >\n          Go\n        </Button>\n      </Grid>\n    </Card>\n  );\n};\n\nexport default ChangeCoordinatesCard;\n","import { Card, Typography } from '@material-ui/core';\nimport React from 'react';\nimport { animated } from 'react-spring';\nimport { CoordinatesCardProps } from '../../common/info';\nimport {\n  defaultFloatFixedPrecision,\n  shortFloatFixedPrecision,\n} from '../../common/values';\n\nconst CoordinatesCard = (props: CoordinatesCardProps): JSX.Element => {\n  return (\n    <Card\n      style={{\n        width: 'auto',\n        zIndex: 1300,\n        position: 'relative',\n        padding: '6px 12px',\n        marginBottom: 8,\n        // borderRadius: 100,\n      }}\n    >\n      <Typography align=\"right\" style={{ fontFamily: 'monospace', fontSize: '1.2rem' }}>\n        {/* https://www.typescriptlang.org/docs/handbook/basic-types.html#tuple */}\n        {/* https://www.typescriptlang.org/docs/handbook/2/objects.html#tuple-types */}\n        <animated.span>\n          {props.mandelbrot.xy.interpolate(\n            // @ts-expect-error: Function call broken in TS, waiting till react-spring v9 to fix\n            (x, y) => `${x.toFixed(defaultFloatFixedPrecision)} : x`,\n          )}\n        </animated.span>\n        <br />\n        <animated.span>\n          {props.mandelbrot.xy.interpolate(\n            // @ts-expect-error: Function call broken in TS, waiting till react-spring v9 to fix\n            (x, y) => `${y.toFixed(defaultFloatFixedPrecision)} : y`,\n          )}\n        </animated.span>\n        <br />\n        <animated.span>\n          {props.mandelbrot.zoom.interpolate(\n            (z) => `${z.toFixed(shortFloatFixedPrecision)} : z`,\n          )}\n        </animated.span>\n        <br />\n        <animated.span>\n          {props.mandelbrot.theta.interpolate(\n            (t) => `${t.toFixed(shortFloatFixedPrecision)} : t`,\n          )}\n        </animated.span>\n      </Typography>\n    </Card>\n  );\n};\n\nexport default CoordinatesCard;\n\n// <Card\n//   style={{\n//     width: 'auto',\n//     position: 'absolute',\n//     zIndex: 2,\n//     right: 0,\n//     top: 0,\n//     margin: 20,\n//     padding: 8,\n//     display: settings.coords[0] ? 'block' : 'none',\n//     // borderRadius: 100,\n//   }}\n// >\n//   <Typography align=\"right\">\n//     {/* https://www.typescriptlang.org/docs/handbook/basic-types.html#tuple */}\n//     {/* https://www.typescriptlang.org/docs/handbook/2/objects.html#tuple-types */}\n//     <animated.span>\n//       {mandelbrotControls.xyCtrl[0].xy.interpolate(\n//         // @ts-expect-error: Function call broken in TS, waiting till react-spring v9 to fix\n//         (x, y) => `${(x * screenScaleMultiplier).toFixed(7)} : x`,\n//       )}\n//     </animated.span>\n//     <br />\n//     <animated.span>\n//       {mandelbrotControls.xyCtrl[0].xy.interpolate(\n//         // @ts-expect-error: Function call broken in TS, waiting till react-spring v9 to fix\n//         (x, y) => `${(y * screenScaleMultiplier).toFixed(7)} : y`,\n//       )}\n//     </animated.span>\n//   </Typography>\n// </Card>;\n","import { Grow } from '@material-ui/core';\nimport React from 'react';\nimport { ViewerControlSprings } from '../../common/types';\nimport ChangeCoordinatesCard from './ChangeCoordinatesCard';\nimport CoordinatesCard from './CoordinatesCard';\n\nexport const CoordinateInterface = (props: {\n  mandelbrot: ViewerControlSprings;\n  show: boolean;\n}): JSX.Element => {\n  return (\n    <Grow\n      in={props.show}\n      style={{\n        position: 'absolute',\n        right: 0,\n        top: 0,\n        margin: 20,\n        width: 'auto',\n        zIndex: 1,\n      }}\n    >\n      <div>\n        <CoordinatesCard\n          mandelbrot={{\n            xy: props.mandelbrot.xyCtrl[0].xy,\n            zoom: props.mandelbrot.zoomCtrl[0].z,\n            theta: props.mandelbrot.rotCtrl[0].theta,\n          }}\n        />\n        <ChangeCoordinatesCard mandelbrot={props.mandelbrot} />\n      </div>\n    </Grow>\n  );\n};\n\nexport default CoordinateInterface;\n","import React, { PropsWithChildren, useMemo, useState } from 'react';\nimport { createStyles, Theme, WithStyles, withStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport MuiDialogTitle from '@material-ui/core/DialogTitle';\nimport MuiDialogContent from '@material-ui/core/DialogContent';\nimport MuiDialogActions from '@material-ui/core/DialogActions';\nimport IconButton from '@material-ui/core/IconButton';\nimport CloseIcon from '@material-ui/icons/Close';\nimport Typography from '@material-ui/core/Typography';\nimport {\n  Link,\n  TableContainer,\n  Table,\n  Paper,\n  TableRow,\n  TableCell,\n  TableHead,\n  TableBody,\n  Box,\n  Divider,\n  Snackbar,\n} from '@material-ui/core';\nimport LaunchIcon from '@material-ui/icons/Launch';\nimport FileCopyIcon from '@material-ui/icons/FileCopy';\nimport MuiAlert, { AlertProps } from '@material-ui/lab/Alert';\nimport { surveyLink } from '../surveyLink.json';\n\n// for evaluating build time\nimport preval from 'preval.macro';\nimport clientDetect from '../../dist/clientDetect';\n\nconst dateTimeStamp = preval`module.exports = new Date();`;\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    root: {\n      margin: 0,\n      padding: theme.spacing(2),\n      display: 'flex',\n      flexDirection: 'row',\n      // align: \"middle\",\n    },\n    image: {\n      marginTop: 'auto',\n      marginBottom: 'auto',\n      marginRight: 8,\n      height: 50,\n    },\n    closeButton: {\n      // position: 'absolute',\n      // right: theme.spacing(1),\n      // top: theme.spacing(1),\n      marginLeft: 'auto',\n      color: theme.palette.grey[500],\n    },\n  });\n\nexport interface DialogTitleProps extends PropsWithChildren<WithStyles<typeof styles>> {\n  onClose: () => void;\n  id: string;\n}\n\n// https://material-ui.com/guides/typescript/#usage-of-withstyles\nconst DialogTitle = withStyles(styles)(\n  ({ children, classes, onClose, ...other }: DialogTitleProps) => {\n    return (\n      <MuiDialogTitle disableTypography className={classes.root} {...other}>\n        <img src=\"logo-512.png\" alt=\"Mandelbrot Maps logo\" className={classes.image} />\n        <Typography\n          variant=\"h1\"\n          style={{ fontSize: 24, marginTop: 'auto', marginBottom: 'auto' }}\n        >\n          {children}\n        </Typography>\n        {onClose ? (\n          <IconButton\n            aria-label=\"close\"\n            className={classes.closeButton}\n            onClick={onClose}\n          >\n            <CloseIcon />\n          </IconButton>\n        ) : null}\n      </MuiDialogTitle>\n    );\n  },\n);\n\nconst DialogContent = withStyles((theme) => ({\n  root: {\n    padding: theme.spacing(3),\n  },\n}))(MuiDialogContent);\n\nconst DialogActions = withStyles((theme) => ({\n  root: {\n    margin: 0,\n    padding: theme.spacing(1),\n  },\n}))(MuiDialogActions);\n\nfunction Alert(props: AlertProps) {\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n}\n\nexport default function InfoDialog(props: any): JSX.Element {\n  const [open, setOpen] = props.ctrl;\n  const [snackBarOpen, setSnackBarOpen] = useState(false);\n\n  const handleClose = () => setOpen(false);\n  // const showSnackBar = () => {\n  // new Promise(() => {\n  // setSnackBarOpen(false);\n  // }).then(() => {\n  // setSnackBarOpen(true);\n  // });\n  // };\n\n  // guard against null / undefined window\n  const clientData = useMemo(() => clientDetect(window), []);\n  // const clientData = window.jscd || {};\n\n  const writeToClipboard = (data: string) => {\n    console.log(snackBarOpen);\n    try {\n      navigator.clipboard.writeText(data);\n      setSnackBarOpen(true);\n    } catch (e) {\n      window.prompt('Auto copy to clipboard failed, copy manually from below:', data);\n    }\n  };\n\n  return (\n    <Dialog\n      onClose={handleClose}\n      aria-labelledby=\"customized-dialog-title\"\n      open={open}\n      maxWidth=\"md\"\n    >\n      {/* <div style={{ maxWidth: 700 }}> */}\n      <DialogTitle id=\"customized-dialog-title\" onClose={handleClose}>\n        Mandelbrot Maps\n      </DialogTitle>\n      <DialogContent dividers style={{ maxWidth: 700 }}>\n        <Typography gutterBottom>\n          Mandelbrot Maps is an interactive fractal explorer built using React and WebGL.\n        </Typography>\n        <Typography gutterBottom>\n          Developed by{' '}\n          <Link href=\"https://jmaio.github.io/\" target=\"_blank\">\n            Joao Maio\n          </Link>{' '}\n          in 2019/2020 as part of an Honours Project at The University of Edinburgh, under\n          the supervision of Philip Wadler.\n        </Typography>\n        <Typography gutterBottom>\n          The project was simultaneously undertaken by Freddie Bawden, also under the\n          supervision of Philip Wadler. Freddie's version of the project is available at:{' '}\n          <Link href=\"http://mmaps.freddiejbawden.com/\" target=\"_blank\">\n            mmaps.freddiejbawden.com\n          </Link>\n        </Typography>\n        <Typography gutterBottom>\n          The{' '}\n          <Link\n            href=\"https://homepages.inf.ed.ac.uk/wadler/mandelbrot-maps/index.html\"\n            target=\"_blank\"\n          >\n            original Mandelbrot Maps project\n          </Link>{' '}\n          was developed by Iain Parris in 2008 as a Java Applet.\n        </Typography>\n        <Typography gutterBottom>\n          Mandelbrot set shader code adapted from{' '}\n          <Link href=\"https://www.shadertoy.com/view/4df3Rn\">Mandelbrot - smooth</Link> by{' '}\n          <Link href=\"http://iquilezles.org/\" target=\"_blank\">\n            Inigo Quilez\n          </Link>\n          .\n        </Typography>\n        {/* <Typography>\n            &copy; Joao Maio 2020\n          </Typography> */}\n\n        <Divider style={{ marginTop: 30, marginBottom: 30 }} />\n\n        <Box style={{ display: 'flex' }}>\n          <TableContainer\n            component={Paper}\n            style={{ width: 'auto', margin: 'auto', maxWidth: 460 }}\n          >\n            <Table size=\"small\" aria-label=\"a dense table\">\n              <TableHead>\n                <TableRow>\n                  <TableCell align=\"center\" colSpan={2} variant=\"head\">\n                    Device properties\n                  </TableCell>\n                </TableRow>\n              </TableHead>\n              <TableBody>\n                {Object.entries(clientData).map(([k, v]) => (\n                  <TableRow key={k}>\n                    <TableCell>{k}</TableCell>\n                    <TableCell align=\"right\" style={{ fontFamily: 'monospace' }}>\n                      {String(v)}\n                    </TableCell>\n                  </TableRow>\n                ))}\n              </TableBody>\n            </Table>\n          </TableContainer>\n        </Box>\n\n        <Divider style={{ marginTop: 30, marginBottom: 30 }} />\n\n        <Box style={{ display: 'flex' }}>\n          <Typography variant=\"overline\" align=\"center\" style={{ margin: 'auto' }}>\n            Build:\n            <Typography style={{ fontFamily: 'monospace' }}>{dateTimeStamp}</Typography>\n            {/* {console.log(new Date(dateTimeStamp).toLocaleString('en-GB', { timeZone: 'UTC' }))} */}\n          </Typography>\n        </Box>\n      </DialogContent>\n\n      <DialogActions>\n        <Button\n          onClick={() => {\n            writeToClipboard(JSON.stringify(clientData));\n          }}\n          color=\"primary\"\n          variant=\"outlined\"\n          startIcon={<FileCopyIcon />}\n        >\n          Copy\n        </Button>\n        <Snackbar\n          open={snackBarOpen}\n          autoHideDuration={5000}\n          // onClose={() => setSnackBarOpen(false)}\n        >\n          <Alert onClose={() => setSnackBarOpen(false)} severity=\"info\">\n            Device properties copied!\n          </Alert>\n        </Snackbar>\n        <Link\n          href={surveyLink}\n          target=\"_blank\"\n          rel=\"noopener\"\n          style={{ textDecoration: 'none' }}\n        >\n          <Button autoFocus color=\"primary\" variant=\"outlined\" startIcon={<LaunchIcon />}>\n            Feedback\n          </Button>\n        </Link>\n      </DialogActions>\n      {/* </div> */}\n    </Dialog>\n  );\n}\n","/* eslint-disable */\r\n/**\r\n * JavaScript Client Detection\r\n * (C) viazenetti GmbH (Christian Ludwig)\r\n */\r\nexport default function clientDetect(window) {\r\n  var unknown = '-';\r\n\r\n  // screen\r\n  var screenSize = '';\r\n  if (window.screen.width) {\r\n    var width = window.screen.width ? window.screen.width : '';\r\n    var height = window.screen.height ? window.screen.height : '';\r\n    screenSize += '' + width + ' x ' + height;\r\n  }\r\n\r\n  // browser\r\n  var nVer = navigator.appVersion;\r\n  var nAgt = navigator.userAgent;\r\n  var browser = navigator.appName;\r\n  var version = '' + parseFloat(navigator.appVersion);\r\n  var majorVersion = parseInt(navigator.appVersion, 10);\r\n  var nameOffset, verOffset, ix;\r\n\r\n  // Opera\r\n  if ((verOffset = nAgt.indexOf('Opera')) != -1) {\r\n    browser = 'Opera';\r\n    version = nAgt.substring(verOffset + 6);\r\n    if ((verOffset = nAgt.indexOf('Version')) != -1) {\r\n      version = nAgt.substring(verOffset + 8);\r\n    }\r\n  }\r\n  // Opera Next\r\n  if ((verOffset = nAgt.indexOf('OPR')) != -1) {\r\n    browser = 'Opera';\r\n    version = nAgt.substring(verOffset + 4);\r\n  }\r\n  // Edge\r\n  else if ((verOffset = nAgt.indexOf('Edge')) != -1) {\r\n    browser = 'Microsoft Edge';\r\n    version = nAgt.substring(verOffset + 5);\r\n  }\r\n  // MSIE\r\n  else if ((verOffset = nAgt.indexOf('MSIE')) != -1) {\r\n    browser = 'Microsoft Internet Explorer';\r\n    version = nAgt.substring(verOffset + 5);\r\n  }\r\n  // Chrome\r\n  else if ((verOffset = nAgt.indexOf('Chrome')) != -1) {\r\n    browser = 'Chrome';\r\n    version = nAgt.substring(verOffset + 7);\r\n  }\r\n  // Safari\r\n  else if ((verOffset = nAgt.indexOf('Safari')) != -1) {\r\n    browser = 'Safari';\r\n    version = nAgt.substring(verOffset + 7);\r\n    if ((verOffset = nAgt.indexOf('Version')) != -1) {\r\n      version = nAgt.substring(verOffset + 8);\r\n    }\r\n  }\r\n  // Firefox\r\n  else if ((verOffset = nAgt.indexOf('Firefox')) != -1) {\r\n    browser = 'Firefox';\r\n    version = nAgt.substring(verOffset + 8);\r\n  }\r\n  // MSIE 11+\r\n  else if (nAgt.indexOf('Trident/') != -1) {\r\n    browser = 'Microsoft Internet Explorer';\r\n    version = nAgt.substring(nAgt.indexOf('rv:') + 3);\r\n  }\r\n  // Other browsers\r\n  else if (\r\n    (nameOffset = nAgt.lastIndexOf(' ') + 1) < (verOffset = nAgt.lastIndexOf('/'))\r\n  ) {\r\n    browser = nAgt.substring(nameOffset, verOffset);\r\n    version = nAgt.substring(verOffset + 1);\r\n    if (browser.toLowerCase() == browser.toUpperCase()) {\r\n      browser = navigator.appName;\r\n    }\r\n  }\r\n  // trim the version string\r\n  if ((ix = version.indexOf(';')) != -1) version = version.substring(0, ix);\r\n  if ((ix = version.indexOf(' ')) != -1) version = version.substring(0, ix);\r\n  if ((ix = version.indexOf(')')) != -1) version = version.substring(0, ix);\r\n\r\n  majorVersion = parseInt('' + version, 10);\r\n  if (isNaN(majorVersion)) {\r\n    version = '' + parseFloat(navigator.appVersion);\r\n    majorVersion = parseInt(navigator.appVersion, 10);\r\n  }\r\n\r\n  // mobile version\r\n  var mobile = /Mobile|mini|Fennec|Android|iP(ad|od|hone)/.test(nVer);\r\n\r\n  // cookie\r\n  var cookieEnabled = navigator.cookieEnabled ? true : false;\r\n\r\n  if (typeof navigator.cookieEnabled == 'undefined' && !cookieEnabled) {\r\n    document.cookie = 'testcookie';\r\n    cookieEnabled = document.cookie.indexOf('testcookie') != -1 ? true : false;\r\n  }\r\n\r\n  // system\r\n  var os = unknown;\r\n  var clientStrings = [\r\n    { s: 'Windows 10', r: /(Windows 10.0|Windows NT 10.0)/ },\r\n    { s: 'Windows 8.1', r: /(Windows 8.1|Windows NT 6.3)/ },\r\n    { s: 'Windows 8', r: /(Windows 8|Windows NT 6.2)/ },\r\n    { s: 'Windows 7', r: /(Windows 7|Windows NT 6.1)/ },\r\n    { s: 'Windows Vista', r: /Windows NT 6.0/ },\r\n    { s: 'Windows Server 2003', r: /Windows NT 5.2/ },\r\n    { s: 'Windows XP', r: /(Windows NT 5.1|Windows XP)/ },\r\n    { s: 'Windows 2000', r: /(Windows NT 5.0|Windows 2000)/ },\r\n    { s: 'Windows ME', r: /(Win 9x 4.90|Windows ME)/ },\r\n    { s: 'Windows 98', r: /(Windows 98|Win98)/ },\r\n    { s: 'Windows 95', r: /(Windows 95|Win95|Windows_95)/ },\r\n    { s: 'Windows NT 4.0', r: /(Windows NT 4.0|WinNT4.0|WinNT|Windows NT)/ },\r\n    { s: 'Windows CE', r: /Windows CE/ },\r\n    { s: 'Windows 3.11', r: /Win16/ },\r\n    { s: 'Android', r: /Android/ },\r\n    { s: 'Open BSD', r: /OpenBSD/ },\r\n    { s: 'Sun OS', r: /SunOS/ },\r\n    { s: 'Chrome OS', r: /CrOS/ },\r\n    { s: 'Linux', r: /(Linux|X11(?!.*CrOS))/ },\r\n    { s: 'iOS', r: /(iPhone|iPad|iPod)/ },\r\n    { s: 'Mac OS X', r: /Mac OS X/ },\r\n    { s: 'Mac OS', r: /(MacPPC|MacIntel|Mac_PowerPC|Macintosh)/ },\r\n    { s: 'QNX', r: /QNX/ },\r\n    { s: 'UNIX', r: /UNIX/ },\r\n    { s: 'BeOS', r: /BeOS/ },\r\n    { s: 'OS/2', r: /OS\\/2/ },\r\n    {\r\n      s: 'Search Bot',\r\n      r: /(nuhk|Googlebot|Yammybot|Openbot|Slurp|MSNBot|Ask Jeeves\\/Teoma|ia_archiver)/,\r\n    },\r\n  ];\r\n  for (var id in clientStrings) {\r\n    var cs = clientStrings[id];\r\n    if (cs.r.test(nAgt)) {\r\n      os = cs.s;\r\n      break;\r\n    }\r\n  }\r\n\r\n  var osVersion = unknown;\r\n\r\n  if (/Windows/.test(os)) {\r\n    osVersion = /Windows (.*)/.exec(os)[1];\r\n    os = 'Windows';\r\n  }\r\n\r\n  switch (os) {\r\n    case 'Mac OS X':\r\n      osVersion = /Mac OS X (10[\\.\\_\\d]+)/.exec(nAgt)[1];\r\n      break;\r\n\r\n    case 'Android':\r\n      osVersion = /Android ([\\.\\_\\d]+)/.exec(nAgt)[1];\r\n      break;\r\n\r\n    case 'iOS':\r\n      osVersion = /OS (\\d+)_(\\d+)_?(\\d+)?/.exec(nVer);\r\n      osVersion = osVersion[1] + '.' + osVersion[2] + '.' + (osVersion[3] | 0);\r\n      break;\r\n\r\n    default:\r\n      break;\r\n  }\r\n\r\n  // user agent string manipulation to obtain device model\r\n  var system = nAgt.substring(nAgt.indexOf('(') + 1, nAgt.indexOf(')'));\r\n  var device = system.substring(system.lastIndexOf(';') + 1);\r\n\r\n  // use JavaScript to detect GPU used from within your browser - by cvan\r\n  // https://gist.github.com/cvan/042b2448fcecefafbb6a91469484cdf8\r\n  var canvas = document.createElement('canvas');\r\n  var gl;\r\n  var debugInfo;\r\n  var gpuVendor;\r\n  var renderer;\r\n\r\n  try {\r\n    gl = canvas.getContext('webgl') || canvas.getContext('experimental-webgl');\r\n    // move block here if webgl not available\r\n    // if (gl) {\r\n    debugInfo = gl.getExtension('WEBGL_debug_renderer_info');\r\n    gpuVendor = gl.getParameter(debugInfo.UNMASKED_VENDOR_WEBGL);\r\n    renderer = gl.getParameter(debugInfo.UNMASKED_RENDERER_WEBGL);\r\n    // }\r\n  } catch (e) {\r\n    //   do nothing\r\n  }\r\n  // ----------------------------------------------------------------\r\n\r\n  //   window.jscd = {\r\n  return {\r\n    browser: browser,\r\n    browserVersion: majorVersion,\r\n    browserRelease: version,\r\n    // vendor: navigator.vendor,\r\n    device: device,\r\n    os: os,\r\n    osVersion: osVersion,\r\n    mobile: mobile,\r\n    platform: navigator.platform,\r\n    screen: screenSize,\r\n    dpr: +window.devicePixelRatio.toFixed(3),\r\n    gpu: renderer,\r\n    gpuVendor: gpuVendor,\r\n    userAgent: navigator.userAgent,\r\n    // cookies: cookieEnabled,\r\n    // flashVersion: flashVersion\r\n  };\r\n}\r\n// (this)\r\n\r\n// alert(\r\n//     'OS: ' + jscd.os +' '+ jscd.osVersion + '\\n' +\r\n//     'Browser: ' + jscd.browser +' '+ jscd.browserMajorVersion +\r\n//       ' (' + jscd.browserVersion + ')\\n' +\r\n//     'Mobile: ' + jscd.mobile + '\\n' +\r\n//     'Flash: ' + jscd.flashVersion + '\\n' +\r\n//     'Cookies: ' + jscd.cookies + '\\n' +\r\n//     'Screen Size: ' + jscd.screen + '\\n\\n' +\r\n//     'Full User Agent: ' + navigator.userAgent\r\n// );\r\n","// TODO set max iterations as parameter\r\n\r\nconst newSmoothJuliaShader = ({\r\n  maxI = 300,\r\n  AA = 1,\r\n  B = 64,\r\n  // crosshair = {\r\n  //     stroke: 0,\r\n  //     radius: 0\r\n  // },\r\n}) => `\r\n\r\n#define AA ${AA}\r\n#define MAXI ${maxI}\r\n#define B ${B.toFixed(1)}\r\n\r\n// set high float precision (lower than this may break colours on mobile)\r\nprecision highp float;\r\n\r\n// need to know the resolution of the canvas\r\nuniform vec2 resolution;\r\n\r\n// properties should be passed as uniforms\r\nuniform int   u_maxI;\r\nuniform vec2  u_xy;\r\nuniform vec2  u_c;\r\nuniform float u_zoom;\r\nuniform float u_theta;\r\n\r\nfloat julia( vec2 z, vec2 c ) {\r\n\r\n  float l = 0.0;\r\n  for( int i=0; i<MAXI; i++ )\r\n  {\r\n      z = vec2( z.x*z.x - z.y*z.y, 2.0*z.x*z.y ) + c;\r\n      if( dot(z,z)>(B*B) ) break;\r\n      l += 1.0;\r\n  }\r\n\r\n  // maxed out iterations\r\n  if( l>float(MAXI)-1.0 ) return 0.0;\r\n\r\n  // equivalent optimized smooth interation count\r\n  l = l - log2(log2(dot(z,z))) + 4.0;\r\n\r\n  return l;\r\n}\r\n\r\nvoid main() {    \r\n  // set the initial colour to black\r\n  vec3 col = vec3(0.0);\r\n\r\n  // anti-aliasing\r\n  #if AA>1\r\n  for( int m=0; m<AA; m++ )\r\n  for( int n=0; n<AA; n++ )\r\n  {\r\n      vec2 p = (2.0*(gl_FragCoord.xy + vec2(float(m), float(n)) / float(AA) ) - resolution.xy)/resolution.y;\r\n      float w = float(AA*m+n);\r\n  #else    \r\n      // adjust pixels to range from [-1, 1]\r\n      vec2 p = (2.0*gl_FragCoord.xy - resolution.xy)/resolution.y;\r\n  #endif\r\n  \r\n  // constant \"c\" to add, based on mandelbrot position\r\n  vec2 c = u_c;\r\n\r\n  float sinT = sin(u_theta);\r\n  float cosT = cos(u_theta);\r\n\r\n  vec2 xy = vec2( p.x*cosT - p.y*sinT, p.x*sinT + p.y*cosT );\r\n  // c is based on offset and grid position, z_0 = 0\r\n  vec2 z = u_xy + xy/u_zoom;\r\n\r\n  float l = julia(z, c);\r\n  col += 0.5 + 0.5*cos( 3.0 + l*0.15 + vec3(0.0,0.6,1.0));\r\n\r\n  // antialiasing\r\n  #if AA>1\r\n  }\r\n  col /= float(AA*AA);\r\n  #endif\r\n\r\n  // Output to screen\r\n  gl_FragColor = vec4( col, 1.0 );\r\n}\r\n`;\r\n\r\nexport default newSmoothJuliaShader;\r\n","import { FormControlLabelProps } from '@material-ui/core';\nimport React from 'react';\n// https://stackoverflow.com/a/39281228/9184658\n\nexport type settingsDefinitionsType = {\n  showMinimap: boolean;\n  showCrosshair: boolean;\n  showCoordinates: boolean;\n  showFPS: boolean;\n  maxI: number;\n  useDPR: boolean;\n  useAA: boolean;\n};\n\nexport const defaultSettings = {\n  showMinimap: true,\n  showCrosshair: true,\n  showCoordinates: false,\n  maxI: 250,\n  showFPS: false,\n  useDPR: false,\n  useAA: false,\n};\n\nexport type settingsWidgetType = {\n  // - settings widgets key k must be in the set\n  // - its type must be of FormControlLabelProps (for displaying in the Material UI form)\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  [k in keyof settingsDefinitionsType]: FormControlLabelProps;\n  // using \"k\" results in an error since it is not used again\n};\n\nexport type settingsGroupType = {\n  name: string;\n  widgets: {\n    // widget groups may contain any of the keys in the settingsDefinitionsType\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    [k in keyof Partial<settingsDefinitionsType>]: FormControlLabelProps;\n    // using \"k\" results in an error since it is not used again\n  };\n};\n\nexport type SettingsContextType = {\n  settings: settingsDefinitionsType;\n  setSettings: React.Dispatch<React.SetStateAction<settingsDefinitionsType>>;\n  settingsWidgets: settingsWidgetType;\n};\n\nexport interface SettingsMenuProps {\n  reset: () => void;\n  toggleInfo: () => void;\n}\n","import { Slider, Switch } from '@material-ui/core';\nimport React from 'react';\nimport {\n  settingsDefinitionsType,\n  settingsGroupType,\n  settingsWidgetType,\n} from '../../common/settings';\n\nexport const settingsWidgets = (\n  settings: settingsDefinitionsType,\n): settingsWidgetType => ({\n  showMinimap: {\n    label: 'Minimap',\n    checked: settings.showMinimap,\n    control: <Switch />,\n  },\n  showCrosshair: {\n    label: 'Crosshair',\n    checked: settings.showCrosshair,\n    control: <Switch />,\n  },\n  showCoordinates: {\n    label: 'Show coordinates',\n    checked: settings.showCoordinates,\n    control: <Switch />,\n  },\n  maxI: {\n    label: 'Iterations',\n    value: settings.maxI,\n    labelPlacement: 'top',\n    style: {\n      marginLeft: 0,\n      marginRight: 0,\n    },\n    control: (\n      <Slider\n        min={10}\n        max={1000}\n        step={10}\n        valueLabelDisplay=\"auto\"\n        marks={[\n          { value: 10, label: 10 },\n          { value: 250, label: 250 },\n          { value: 500, label: 500 },\n          { value: 750, label: 750 },\n          { value: 1000, label: 1000 },\n        ]}\n      />\n    ),\n  },\n  useDPR: {\n    // https://stackoverflow.com/a/12830454/9184658\n    // // There is a downside that values like 1.5 will give \"1.50\" as the output. A fix suggested by @minitech:\n    // var numb = 1.5;\n    // numb = +numb.toFixed(2);\n    // // Note the plus sign that drops any \"extra\" zeroes at the end.\n    // // It changes the result (which is a string) into a number again (think \"0 + foo\"),\n    // // which means that it uses only as many digits as necessary.\n    label: `Use pixel ratio (${+window.devicePixelRatio.toFixed(3)})`,\n    checked: settings.useDPR,\n    control: <Switch />,\n  },\n  useAA: {\n    label: `Anti-aliasing (slow)`,\n    checked: settings.useAA,\n    control: <Switch />,\n  },\n  showFPS: {\n    label: `Show FPS`,\n    checked: settings.showFPS,\n    control: <Switch />,\n  },\n});\n\nexport const getSettingsWidgetsGrouping = (\n  settingsWidgets: settingsWidgetType,\n): Array<settingsGroupType> => [\n  {\n    name: 'Interface',\n    widgets: {\n      showMinimap: settingsWidgets.showMinimap,\n      showCrosshair: settingsWidgets.showCrosshair,\n      showCoordinates: settingsWidgets.showCoordinates,\n    },\n    // ],\n  },\n  {\n    name: 'Graphics',\n    widgets: {\n      maxI: settingsWidgets.maxI,\n      useDPR: settingsWidgets.useDPR,\n      useAA: settingsWidgets.useAA,\n      showFPS: settingsWidgets.showFPS,\n    },\n  },\n];\n","import React, { createContext, ReactNode, useState } from 'react';\nimport {\n  defaultSettings,\n  SettingsContextType,\n  settingsDefinitionsType,\n} from '../../common/settings';\nimport { settingsWidgets } from './SettingsDefinitions';\n\nexport const SettingsContext = createContext<SettingsContextType>({\n  // provide the context with the default values\n  settings: defaultSettings,\n  // can't set state until it's initialized\n  setSettings: () => {\n    return;\n  },\n  settingsWidgets: settingsWidgets(defaultSettings),\n});\n\n// export const useSettings = (): SettingsContextType => useContext(SettingsContext);\n\nexport const SettingsProvider = ({ children }: { children: ReactNode }): JSX.Element => {\n  // https://reactjs.org/docs/context.html#updating-context-from-a-nested-component\n  // no grouping: all settings are accessible\n  const [settings, setSettings] = useState<settingsDefinitionsType>(defaultSettings);\n\n  return (\n    <SettingsContext.Provider\n      value={{\n        settings,\n        setSettings,\n        settingsWidgets: settingsWidgets(settings),\n      }}\n    >\n      {children}\n    </SettingsContext.Provider>\n  );\n};\n\nexport default SettingsProvider;\n","import { colors, createMuiTheme } from '@material-ui/core';\r\n\r\nconst theme = createMuiTheme({\r\n  props: {\r\n    // Name of the component ⚛️\r\n    MuiSwitch: {\r\n      // The default props to change\r\n      color: 'primary', // x, on the whole application 💣!\r\n    },\r\n    MuiButton: {\r\n      variant: 'outlined',\r\n    },\r\n  },\r\n  palette: {\r\n    primary: {\r\n      main: colors.blue[700],\r\n    },\r\n    secondary: {\r\n      main: colors.red[700],\r\n    },\r\n    info: {\r\n      main: colors.blue[700],\r\n    },\r\n  },\r\n});\r\n\r\nexport const simpleBoxShadow = '0px 2px 10px 1px rgba(0, 0, 0, 0.4)';\r\n\r\nexport default theme;\r\n","export const fullVertexShader = `\r\nattribute vec4 position;\r\n\r\nvoid main() {\r\n  gl_Position = position;\r\n}\r\n`;\r\n\r\n// This \"position\" array specifies the vertex positions of the element\r\n// to be displayed by the vertex shader. It represents two triangles,\r\n// each filling half of the screen diagonally, and together filling the\r\n// full canvas space to allow the fragment shader to act on the full canvas.\r\nexport const fullscreenVertexArray = {\r\n  position: {\r\n    numComponents: 3,\r\n    data: [-1, -1, 0, 1, -1, 0, -1, 1, 0, -1, 1, 0, 1, -1, 0, 1, 1, 0],\r\n  },\r\n};\r\n","import React, { useCallback, useEffect, useRef } from 'react';\nimport { animated } from 'react-spring';\nimport * as twgl from 'twgl.js';\nimport { WebGLCanvasProps } from '../../common/render';\nimport { fullscreenVertexArray, fullVertexShader } from '../../shaders/fullVertexShader';\n\n// https://mariusschulz.com/blog/typing-destructured-object-parameters-in-typescript\n// https://stackoverflow.com/a/50294843/9184658\nconst WebGLCanvas = React.forwardRef<\n  HTMLCanvasElement,\n  WebGLCanvasProps & { mini?: boolean }\n>((props, refAny) => {\n  // const { mini = false, ...rest } = props;\n  // props:\n  // id\n  // fragShader\n  // -- uniforms:\n  //    u_zoom\n  //    u_pos\n  //    u_maxI\n  // ref\n  // glRef\n\n  const canvasRef = refAny as React.MutableRefObject<HTMLCanvasElement>;\n\n  const gl = useRef<WebGLRenderingContext | null>();\n  const renderRequestRef = useRef<number>();\n  const bufferInfo = useRef<twgl.BufferInfo>();\n  const programInfo = useRef<twgl.ProgramInfo>();\n\n  const u = props.u;\n  const setFps = props.fps;\n\n  // have a zoom callback\n  // keeps minimaps at a fixed zoom level\n  const zoom = useCallback(() => (props.mini ? 1.0 : props.u.zoom.getValue()), [\n    props.mini,\n    props.u.zoom,\n  ]);\n\n  const dpr = props.useDPR ? window.devicePixelRatio : 1;\n\n  // canvas setup step - get webgl context\n  const setupCanvas = useCallback(() => {\n    gl.current = canvasRef.current.getContext('webgl');\n    console.debug(`WebGL canvas context created`);\n  }, [gl, canvasRef]);\n\n  useEffect(() => {\n    setupCanvas();\n\n    // https://www.khronos.org/webgl/wiki/HandlingContextLost\n    canvasRef.current.addEventListener(\n      'webglcontextlost',\n      (event) => {\n        console.error('WebGL context lost!');\n        event.preventDefault();\n        // trigger an error alert in future?\n      },\n      false,\n    );\n    canvasRef.current.addEventListener(\n      'webglcontextrestored',\n      (event) => {\n        console.error('WebGL context restored! Setting up...');\n        setupCanvas();\n      },\n      false,\n    );\n\n    // remove this context?\n    // return () => gl.current ??\n  }, [canvasRef, setupCanvas]);\n\n  const compileShader = useCallback(() => {\n    const ctx = gl.current as WebGLRenderingContext;\n    bufferInfo.current = twgl.createBufferInfoFromArrays(ctx, fullscreenVertexArray);\n    programInfo.current = twgl.createProgramInfo(ctx, [\n      fullVertexShader,\n      props.fragShader,\n    ]);\n    console.debug(`Fragment shader compiled`);\n  }, [gl, props.fragShader]);\n\n  // re-compile program if shader changes\n  useEffect(compileShader, [compileShader]);\n\n  const then = useRef(0);\n  const frames = useRef(0);\n  const elapsedTime = useRef(0);\n  // fps update interval\n  const interval = 1000;\n\n  // the main render function for WebGL\n  const render = useCallback(\n    (time) => {\n      const ctx = gl.current as WebGLRenderingContext;\n      const prog = programInfo.current as twgl.ProgramInfo;\n      const buff = bufferInfo.current as twgl.BufferInfo;\n\n      twgl.resizeCanvasToDisplaySize(canvasRef.current, dpr);\n      // scale the viewport to the canvas size\n      ctx.viewport(0, 0, canvasRef.current.width, canvasRef.current.height);\n\n      const uniforms = {\n        resolution: [canvasRef.current.width, canvasRef.current.height],\n        u_zoom: zoom(),\n        u_c: u.c === undefined ? 0 : u.c.getValue(),\n        u_xy: u.xy.getValue(),\n        u_maxI: u.maxI,\n        u_theta: u.theta.getValue(),\n      };\n\n      ctx.useProgram(prog.program);\n      twgl.setBuffersAndAttributes(ctx, prog, buff);\n      twgl.setUniforms(prog, uniforms);\n      twgl.drawBufferInfo(ctx, buff);\n\n      // calculate fps\n      if (setFps !== undefined) {\n        frames.current++;\n        elapsedTime.current += time - then.current;\n        then.current = time;\n\n        // console.log(elapsedTime.current);\n        if (elapsedTime.current >= interval) {\n          //multiply with (1000 / elapsed) for accuracy\n          setFps((frames.current * (interval / elapsedTime.current)).toFixed(1));\n          frames.current = 0;\n          elapsedTime.current -= interval;\n\n          // document.getElementById('test').innerHTML = fps;\n        }\n        // time *= 0.001;                      // convert to seconds\n        // const deltaTime = time - then.current; // compute time since last frame\n        // then.current = time;                // remember time for next frame\n        // const fs = 1 / deltaTime;           // compute frames per second\n        // console.log(fs);\n        // (fs.toFixed(1));  // update fps display\n      }\n\n      // The 'state' will always be the initial value here\n      renderRequestRef.current = requestAnimationFrame(render);\n    },\n    [gl, u, zoom, dpr, setFps, interval, canvasRef],\n  );\n\n  useEffect(() => {\n    renderRequestRef.current = requestAnimationFrame(render);\n    return () => cancelAnimationFrame(renderRequestRef.current as number);\n  }, [render]);\n\n  return (\n    <animated.canvas\n      className=\"renderer\"\n      ref={refAny}\n      id={props.id}\n      style={{\n        // cursor should show whether the viewer is being grabbed\n        cursor: props.dragging ? 'grabbing' : 'grab',\n        // adding style allows direct style override\n        ...props.style,\n      }}\n    />\n  );\n});\n\nWebGLCanvas.displayName = 'WebGLCanvas';\n\nexport default WebGLCanvas;\n","import { ButtonBase, Grow } from '@material-ui/core';\nimport React from 'react';\nimport { MinimapViewerProps } from '../../common/render';\nimport { simpleBoxShadow } from '../../theme/theme';\nimport WebGLCanvas from './WebGLCanvas';\n\nconst miniSize = 100;\n// TODO: make square with rounded corners?\nconst borderRadius = 8;\n\nconst MinimapViewer = (props: MinimapViewerProps): JSX.Element => {\n  const { canvasRef, onClick, show, ...rest } = props;\n  return (\n    <Grow in={show}>\n      <ButtonBase\n        style={{\n          position: 'absolute',\n          // make minimap stick out through backdrop\n          zIndex: 1300,\n          margin: '0.5rem',\n          left: 0,\n          bottom: 0,\n          // cursor: 'pointer',\n          height: miniSize,\n          width: miniSize,\n          borderRadius: borderRadius,\n          // border: \"1px solid #000\",\n          boxShadow: simpleBoxShadow,\n          overflow: 'hidden',\n          // opacity: zoom.interpolate((z) => _.clamp(z - 1, 0, 1)),\n          // display: zoom.interpolate((z) => (_.clamp(z - 1, 0, 1) === 0 ? 'none' : 'block')),\n        }}\n        onClick={onClick}\n      >\n        {/* <animated.div */}\n        {/* // \n      // > */}\n        <WebGLCanvas\n          id={props.id}\n          mini={true}\n          ref={canvasRef}\n          {...rest}\n          // setting border radius here stops the canvas clickable area from overflowing\n          // outside the div circle, which would make the clickable area a rectangle\n          style={{\n            borderRadius: borderRadius,\n            // cursor should be \"pointer\" (looks clickable) if this is a minimap,\n            cursor: 'pointer',\n          }}\n        />\n        {/* </animated.div> */}\n      </ButtonBase>\n    </Grow>\n  );\n};\nexport default MinimapViewer;\n","import React, { useRef, useState } from 'react';\nimport { useGesture } from 'react-use-gesture';\nimport { JuliaRendererProps } from '../../common/render';\nimport { MandelbrotMapsWebGLUniforms } from '../../common/types';\nimport { genericTouchBind } from '../../common/utils';\nimport newSmoothJuliaShader from '../../shaders/newSmoothJuliaShader';\nimport { SettingsContext } from '../settings/SettingsContext';\nimport MinimapViewer from './MinimapViewer';\nimport WebGLCanvas from './WebGLCanvas';\nexport default function JuliaRenderer(props: JuliaRendererProps): JSX.Element {\n  // variables to hold canvas and webgl information\n  const canvasRef = useRef<HTMLCanvasElement>(null);\n  const miniCanvasRef = useRef<HTMLCanvasElement>(null);\n\n  const [{ xy }] = props.controls.xyCtrl;\n  const [{ z }, setControlZoom] = props.controls.zoomCtrl;\n  const [{ theta }] = props.controls.rotCtrl;\n  const maxI = props.maxI; // -> global\n  const AA = props.useAA ? 2 : 1;\n\n  const fragShader = newSmoothJuliaShader({\n    maxI: maxI,\n    AA: AA,\n  });\n\n  const miniFragShader = newSmoothJuliaShader({\n    maxI: maxI,\n    AA: 2,\n  });\n\n  const u: MandelbrotMapsWebGLUniforms = {\n    zoom: z,\n    xy: xy,\n    c: props.c,\n    theta: theta,\n    maxI: maxI,\n  };\n\n  const [dragging, setDragging] = useState(false);\n\n  const gtb = genericTouchBind({\n    domTarget: canvasRef,\n    controls: props.controls,\n    setDragging: setDragging,\n  });\n\n  useGesture(gtb.handlers, gtb.config);\n\n  return (\n    <SettingsContext.Consumer>\n      {({ settings }) => (\n        <div\n          className=\"renderer\"\n          style={{\n            position: 'relative',\n          }}\n        >\n          <WebGLCanvas\n            id=\"julia-canvas\"\n            fragShader={fragShader}\n            useDPR={props.useDPR}\n            u={u}\n            ref={canvasRef}\n            dragging={dragging}\n          />\n          <MinimapViewer\n            id=\"julia-minimap-canvas\"\n            fragShader={miniFragShader}\n            useDPR={settings.useDPR}\n            u={u}\n            canvasRef={miniCanvasRef}\n            onClick={() => setControlZoom({ z: 1 })}\n            show={settings.showMinimap}\n          />\n        </div>\n      )}\n    </SettingsContext.Consumer>\n  );\n}\n","// TODO set max iterations as parameter, crosshair as parameter\r\n\r\nconst makeCrosshair = (stroke: number, radius: number) => ({\r\n  stroke,\r\n  radius,\r\n});\r\n\r\nexport const standardCrosshair = makeCrosshair(2, 100);\r\nexport const miniCrosshair = makeCrosshair(1, 30);\r\n\r\nexport interface MandelbrotShaderParams {\r\n  maxI: number;\r\n  /** Radial boundary */\r\n  B: number;\r\n  /** Anti-aliasing samples */\r\n  AA: number;\r\n}\r\n\r\nconst newSmoothMandelbrotShader = (\r\n  { maxI = 300, AA = 1, B = 64 },\r\n  showCrosshair = true,\r\n  crosshairShape = {\r\n    stroke: 2,\r\n    radius: 100,\r\n  },\r\n): string => {\r\n  return `\r\n// Adapted by Joao Maio/2019, based on work by inigo quilez - iq/2013\r\n// License Creative Commons Attribution-NonCommercial-ShareAlike 3.0 Unported License.\r\n\r\n// See here for more information on smooth iteration count:\r\n// http://iquilezles.org/www/articles/mset_smooth/mset_smooth.htm\r\n\r\n#define false 0\r\n#define true 1\r\n\r\n// render parameters\r\n#define AA ${AA}\r\n#define MAXI ${maxI}\r\n#define B ${B.toFixed(1)}\r\n\r\n// crosshair parameters\r\n#define show_crosshair ${showCrosshair}\r\n#define cross_stroke ${crosshairShape.stroke.toFixed(1)}\r\n#define cross_radius ${crosshairShape.radius.toFixed(1)}\r\n\r\n// set high float precision (lower than this may break colours on mobile)\r\nprecision highp float;\r\n\r\n// need to know the resolution of the canvas\r\nuniform vec2 resolution;\r\n\r\n// properties should be passed as uniforms\r\nuniform int   u_maxI;  \r\nuniform vec2  u_xy;\r\nuniform float u_zoom;\r\nuniform float u_theta;\r\n\r\nbool crosshair( float x, float y ) {\r\n  float abs_x = abs(2.0*x - resolution.x);\r\n  float abs_y = abs(2.0*y - resolution.y);\r\n\r\n  return \r\n  // crosshair in centre of screen\r\n  (abs_x <= cross_stroke || abs_y <= cross_stroke) &&\r\n  // crosshair size / \"radius\"\r\n  (abs_x <= cross_radius && abs_y <= cross_radius);\r\n}\r\n\r\nfloat mandelbrot( in vec2 c ) {\r\n    {\r\n        float c2 = dot(c, c);\r\n        // skip computation inside M1 - http://iquilezles.org/www/articles/mset_1bulb/mset1bulb.htm\r\n        if( 256.0*c2*c2 - 96.0*c2 + 32.0*c.x - 3.0 < 0.0 ) return 0.0;\r\n        // skip computation inside M2 - http://iquilezles.org/www/articles/mset_2bulb/mset2bulb.htm\r\n        if( 16.0*(c2+2.0*c.x+1.0) - 1.0 < 0.0 ) return 0.0;\r\n    }\r\n\r\n    float l = 0.0;\r\n    vec2 z  = vec2(0.0);\r\n    for( int i=0; i<MAXI; i++ )\r\n    {\r\n        z = vec2( z.x*z.x - z.y*z.y, 2.0*z.x*z.y ) + c;\r\n        if( dot(z,z)>(B*B) ) break;\r\n        l += 1.0;\r\n    }\r\n\r\n    // maxed out iterations\r\n    if( l>float(MAXI)-1.0 ) return 0.0;\r\n    \r\n    // optimized smooth interation count\r\n    l = l - log2(log2(dot(z,z))) + 4.0;\r\n\r\n    return l;\r\n}\r\n\r\nvoid main() {    \r\n    // set the initial colour to black\r\n    vec3 col = vec3(0.0);\r\n\r\n    // anti-aliasing\r\n    #if AA>1\r\n    for( int m=0; m<AA; m++ )\r\n    for( int n=0; n<AA; n++ )\r\n    {\r\n        // vec2 p = (-iResolution.xy + 2.0*(fragCoord.xy+vec2(float(m),float(n))/float(AA)))/iResolution.y;\r\n        vec2 p = (2.0*(gl_FragCoord.xy + vec2(float(m), float(n)) / float(AA) ) - resolution.xy)/resolution.y;\r\n        float w = float(AA*m+n);\r\n    #else    \r\n        // adjust pixels to range from [-1, 1]\r\n        vec2 p = (2.0*gl_FragCoord.xy - resolution.xy)/resolution.y;\r\n    #endif\r\n\r\n    float sinT = sin(u_theta);\r\n    float cosT = cos(u_theta);\r\n\r\n    vec2 xy = vec2( p.x*cosT - p.y*sinT, p.x*sinT + p.y*cosT );\r\n    // c is based on offset and grid position, z_0 = 0\r\n    vec2 c = u_xy + xy/u_zoom;\r\n    \r\n    float l = mandelbrot(c);\r\n    col += 0.5 + 0.5*cos( 3.0 + l*0.15 + vec3(0.0,0.6,1.0));\r\n\r\n    // antialiasing\r\n    #if AA>1\r\n    }\r\n    col /= float(AA*AA);\r\n    #endif\r\n\r\n    #if show_crosshair\r\n    if (crosshair(gl_FragCoord.x, gl_FragCoord.y)) {\r\n        col = 1. - col;\r\n    }\r\n    #endif\r\n\r\n    // Output to screen\r\n    gl_FragColor = vec4( col, 1.0 );\r\n}\r\n    `;\r\n};\r\n\r\nexport default newSmoothMandelbrotShader;\r\n","import { Card, Grow } from '@material-ui/core';\r\nimport React from 'react';\r\nimport { animated } from 'react-spring';\r\nimport { FPSCardProps } from '../../common/info';\r\n\r\nconst FPSCard = (props: FPSCardProps): JSX.Element => (\r\n  <Grow in={props.show}>\r\n    <Card\r\n      style={{\r\n        position: 'fixed',\r\n        top: 0,\r\n        left: 0,\r\n        padding: '4px 12px',\r\n        margin: 6,\r\n        fontFamily: 'monospace',\r\n        borderRadius: 100,\r\n        fontSize: '1.8rem',\r\n        zIndex: 1300,\r\n        userSelect: 'none',\r\n      }}\r\n    >\r\n      <animated.div>{props.fps}</animated.div>\r\n    </Card>\r\n  </Grow>\r\n);\r\n\r\nexport default FPSCard;\r\n","import React, { useRef, useState } from 'react';\nimport { useGesture } from 'react-use-gesture';\nimport { MandelbrotRendererProps } from '../../common/render';\nimport { genericTouchBind } from '../../common/utils';\nimport newSmoothMandelbrotShader, {\n  miniCrosshair,\n  standardCrosshair,\n} from '../../shaders/newSmoothMandelbrotShader';\nimport FPSCard from '../info/FPSCard';\nimport { SettingsContext } from '../settings/SettingsContext';\nimport MinimapViewer from './MinimapViewer';\nimport WebGLCanvas from './WebGLCanvas';\n\nexport default function MandelbrotRenderer(props: MandelbrotRendererProps): JSX.Element {\n  // variables to hold canvas and webgl information\n  const canvasRef = useRef<HTMLCanvasElement>(null);\n  const miniCanvasRef = useRef<HTMLCanvasElement>(null);\n\n  // const gl = useRef<WebGLRenderingContext>(null);\n  // const miniGl = useRef<WebGLRenderingContext>(null);\n\n  // this multiplier subdivides the screen space into smaller increments\n  // to allow for velocity calculations to not immediately decay, due to the\n  // otherwise small scale that is being mapped to the screen.\n  // const screenScaleMultiplier = props.screenScaleMultiplier; // -> global\n\n  // temporary bounds to prevent excessive panning\n  // eslint-disable-next-line\n  const radialBound = 1;\n  // const relativeRadialBound = radialBound;// / -screenScaleMultiplier;\n\n  // read incoming props\n  const [{ xy }] = props.controls.xyCtrl;\n  // const [{ theta, last_pointer_angle }, setControlRot] = props.controls.rot;\n  const [{ z }, setControlZoom] = props.controls.zoomCtrl;\n  const [{ theta }] = props.controls.rotCtrl;\n  const maxI = props.maxI; // -> global\n  const AA = props.useAA ? 2 : 1; // -> global\n\n  const fragShader = newSmoothMandelbrotShader(\n    {\n      maxI: maxI,\n      AA: AA,\n    },\n    props.showCrosshair,\n    standardCrosshair,\n  );\n  const miniFragShader = newSmoothMandelbrotShader(\n    {\n      maxI: maxI,\n      AA: 2,\n    },\n    props.showCrosshair,\n    miniCrosshair,\n  );\n\n  const [dragging, setDragging] = useState(false);\n\n  const gtb = genericTouchBind({\n    domTarget: canvasRef,\n    controls: props.controls,\n    // gl: gl,\n    setDragging: setDragging,\n  });\n\n  // https://use-gesture.netlify.app/docs/changelog/#breaking\n  // When adding events directly to the dom element using `domTarget`\n  // you no longer need to clean the effect yourself.\n  // const touchBind =\n  useGesture(gtb.handlers, gtb.config);\n\n  // useEffect(() => {\n  //   touchBind();\n  // }, [touchBind]);\n\n  const [fps, setFps] = useState('');\n\n  return (\n    <SettingsContext.Consumer>\n      {({ settings }) => (\n        <div\n          className=\"renderer\"\n          style={{\n            position: 'relative',\n          }}\n        >\n          <FPSCard fps={fps} show={settings.showFPS} />\n\n          <WebGLCanvas\n            id=\"mandelbrot-canvas\"\n            fragShader={fragShader}\n            useDPR={settings.useDPR}\n            // touchBind={touchBind}\n            u={{\n              zoom: z,\n              xy: xy,\n              theta: theta,\n              maxI: maxI,\n              // screenScaleMultiplier: screenScaleMultiplier,\n            }}\n            ref={canvasRef}\n            // glRef={gl}\n            fps={setFps}\n            dragging={dragging}\n          />\n\n          <MinimapViewer\n            id=\"mandelbrot-minimap-canvas\"\n            fragShader={miniFragShader}\n            useDPR={settings.useDPR}\n            u={{\n              zoom: z,\n              xy: xy,\n              theta: theta,\n              maxI: maxI,\n              // screenScaleMultiplier: screenScaleMultiplier,\n            }}\n            canvasRef={miniCanvasRef}\n            // glRef={miniGl}\n            show={settings.showMinimap}\n            onClick={() => setControlZoom({ z: 1 })}\n          />\n        </div>\n      )}\n    </SettingsContext.Consumer>\n  );\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","// https://felixgerschau.com/create-a-pwa-update-notification-with-create-react-app/\r\n\r\nimport { Button, Snackbar } from '@material-ui/core';\r\nimport Alert from '@material-ui/lab/Alert';\r\nimport React, { FC, useEffect } from 'react';\r\nimport * as serviceWorker from '../serviceWorker';\r\n\r\nconst ServiceWorkerWrapper: FC = () => {\r\n  const [showReload, setShowReload] = React.useState(false);\r\n  const [waitingWorker, setWaitingWorker] = React.useState<ServiceWorker | null>(null);\r\n\r\n  const onSWUpdate = (registration: ServiceWorkerRegistration) => {\r\n    console.log('Out of date version detected! Triggering snackbar.');\r\n    setShowReload(true);\r\n    setWaitingWorker(registration.waiting);\r\n  };\r\n\r\n  useEffect(() => {\r\n    console.log('Registering Service Worker for update detection...');\r\n    serviceWorker.register({ onUpdate: onSWUpdate });\r\n  }, []);\r\n\r\n  const reloadPage = () => {\r\n    // optional chaining was not working here...\r\n    // https://www.typescriptlang.org/docs/handbook/release-notes/typescript-3-7.html\r\n    waitingWorker && waitingWorker.postMessage({ type: 'SKIP_WAITING' });\r\n    setShowReload(false);\r\n    // reload(b: Boolean) is deprecated\r\n    window.location.reload();\r\n  };\r\n\r\n  return (\r\n    <Snackbar open={showReload} anchorOrigin={{ vertical: 'top', horizontal: 'center' }}>\r\n      <Alert\r\n        severity=\"info\"\r\n        action={\r\n          <Button color=\"inherit\" variant=\"outlined\" size=\"small\" onClick={reloadPage}>\r\n            Update\r\n          </Button>\r\n        }\r\n      >\r\n        A new version is available!\r\n      </Alert>\r\n    </Snackbar>\r\n  );\r\n};\r\n\r\nexport default ServiceWorkerWrapper;\r\n","import {\n  Backdrop,\n  Divider,\n  Fab,\n  FormControlLabel,\n  FormControlLabelProps,\n  FormGroup,\n  Grid,\n  makeStyles,\n  Popover,\n  Typography,\n} from '@material-ui/core';\nimport Button from '@material-ui/core/Button';\nimport InfoIcon from '@material-ui/icons/Info';\nimport MyLocationIcon from '@material-ui/icons/MyLocation';\nimport SettingsIcon from '@material-ui/icons/Settings';\nimport React, { useState } from 'react';\nimport { SettingsMenuProps } from '../../common/settings';\nimport { SettingsContext } from './SettingsContext';\nimport { getSettingsWidgetsGrouping } from './SettingsDefinitions';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    position: 'absolute',\n    bottom: theme.spacing(2),\n    right: theme.spacing(2),\n    display: 'flex',\n    flexDirection: 'column',\n    zIndex: 2,\n  },\n  button: {\n    padding: '6px 12px',\n    marginTop: 10,\n  },\n  sliderControl: {\n    width: 30,\n  },\n}));\n\nconst GroupDivider = () => <Divider style={{ marginTop: 10, marginBottom: 4 }} />;\nconst GroupTitle = (props: { title: string }) => (\n  <Typography variant=\"overline\" style={{ fontSize: 14, marginBottom: 4 }}>\n    {props.title}\n  </Typography>\n);\n\nexport default function SettingsMenu(props: SettingsMenuProps): JSX.Element {\n  const classes = useStyles();\n\n  const [anchorEl, setAnchorEl] = useState<EventTarget & HTMLButtonElement>();\n\n  // interface BottomButtonProps extends {\n  //   icon: JSX.Element;\n  //   text: string;\n  //   color: 'inherit' | 'default' | 'primary' | 'secondary' | undefined;\n  //   onClick: () => void;\n  // }\n  // const BottomButton = (props: BottomButtonProps) => (\n  //   <Button\n  //     variant=\"outlined\"\n  //     color={props.color}\n  //     aria-controls={props.text.toLowerCase()}\n  //     onClick={() => props.onClick()}\n  //     className={classes.button}\n  //     startIcon={<MyLocationIcon />}\n  //   >\n  //     Reset\n  //   </Button>\n  // );\n\n  const ResetButton = () => (\n    <Button\n      startIcon={<MyLocationIcon />}\n      color=\"secondary\"\n      aria-controls=\"reset\"\n      onClick={() => {\n        props.reset();\n      }}\n      className={classes.button}\n    >\n      Reset\n    </Button>\n  );\n  const AboutButton = () => (\n    <Button\n      startIcon={<InfoIcon />}\n      color=\"primary\"\n      aria-controls=\"about\"\n      onClick={() => {\n        props.toggleInfo();\n        setAnchorEl(undefined);\n      }}\n      className={classes.button}\n    >\n      About\n    </Button>\n  );\n\n  return (\n    <div className={classes.root}>\n      <Fab\n        aria-controls=\"menu\"\n        aria-haspopup=\"true\"\n        aria-label=\"settings\"\n        size=\"small\"\n        onClick={(e) => setAnchorEl(e.currentTarget)}\n        // className={classes.button}\n      >\n        <SettingsIcon />\n      </Fab>\n      <Backdrop open={Boolean(anchorEl)}>\n        <Popover\n          id=\"menu\"\n          anchorEl={anchorEl}\n          keepMounted\n          open={Boolean(anchorEl)}\n          onClose={() => setAnchorEl(undefined)}\n          anchorOrigin={{\n            horizontal: 'right',\n            vertical: 'bottom',\n          }}\n          transformOrigin={{\n            vertical: 'bottom',\n            horizontal: 'right',\n          }}\n        >\n          <Grid\n            container\n            direction=\"column\"\n            style={{\n              paddingLeft: '1.5em',\n              paddingRight: '1.5em',\n              paddingTop: '1em',\n              paddingBottom: '1em',\n            }}\n          >\n            <Grid item container alignItems=\"center\" justify=\"space-around\">\n              <Grid item>\n                <Typography variant=\"h1\" style={{ fontSize: 20, padding: 10 }}>\n                  Configuration\n                </Typography>\n              </Grid>\n              {/* <Divider orientation=\"vertical\" flexItem /> */}\n              {/* <Grid item>\n                <IconButton\n                  aria-label=\"info\"\n                  size=\"medium\"\n                  onClick={() => {\n                    // open info panel\n                    props.toggleInfo();\n                    // close popover\n                    setAnchorEl(undefined);\n                  }}\n                >\n                  <InfoIcon fontSize=\"inherit\" />\n                </IconButton>\n              </Grid> */}\n            </Grid>\n            <SettingsContext.Consumer>\n              {({ setSettings, settingsWidgets }) =>\n                getSettingsWidgetsGrouping(settingsWidgets).map((g) => (\n                  <Grid item key={g.name}>\n                    <GroupDivider />\n                    <GroupTitle title={g.name} />\n                    <FormGroup>\n                      {Object.entries(g.widgets).map(([k, widget]) => (\n                        <FormControlLabel\n                          key={`${k}-control`}\n                          style={{ userSelect: 'none' }}\n                          {...(widget as FormControlLabelProps)}\n                          onChange={(e, val) => {\n                            console.log(`${k} -> ${val}`);\n                            setSettings((prevState) => ({\n                              ...prevState,\n                              [k]: val,\n                            }));\n                          }}\n                        />\n                      ))}\n                    </FormGroup>\n                  </Grid>\n                ))\n              }\n            </SettingsContext.Consumer>\n\n            <GroupDivider />\n\n            <Grid container direction=\"row\" justify=\"space-between\" alignItems=\"stretch\">\n              <Grid item>\n                <ResetButton />\n              </Grid>\n              <Grid item style={{ width: '0.5rem' }} />\n              <Grid item>\n                <AboutButton />\n              </Grid>\n            </Grid>\n\n            {/* <Button\n              aria-controls=\"reset\"\n              onClick={() => props.reset()}\n              className={classes.button}\n              startIcon={<MyLocationIcon />}\n            >\n              Reset\n            </Button> */}\n            {/* <Grid item xs>\n                <Button\n                  aria-controls=\"reset\"\n                  onClick={() => props.reset()}\n                  className={classes.button}\n                  startIcon={<MyLocationIcon />}\n                >\n                  Reset\n                </Button>\n              </Grid>\n              <Grid item xs>\n                <Button\n                  aria-label=\"info\"\n                  size=\"medium\"\n                  onClick={() => {\n                    // open info panel\n                    props.toggleInfo();\n                    // close popover\n                    setAnchorEl(undefined);\n                  }}\n                  className={classes.button}\n                  startIcon={<InfoIcon />}\n                >\n                  About\n                </Button>\n              </Grid> */}\n          </Grid>\n        </Popover>\n      </Backdrop>\n    </div>\n  );\n}\n","import { Grid, ThemeProvider } from '@material-ui/core';\nimport React, { useCallback, useEffect, useMemo, useState } from 'react';\nimport { useSpring } from 'react-spring';\nimport './App.css';\nimport {\n  currentLocation,\n  useHashLocation,\n  useHashNavigator,\n  ViewerURLManager,\n} from './common/routing';\nimport {\n  ViewerControlSprings,\n  ViewerLocation,\n  ViewerRotationControl,\n  ViewerXYControl,\n  ViewerZoomControl,\n} from './common/types';\nimport { useWindowSize, warpToPoint } from './common/utils';\nimport { springsConfigs, viewerOrigin } from './common/values';\nimport CoordinateInterface from './components/info/CoordinateInterface';\nimport InfoDialog from './components/info/InfoDialog';\nimport JuliaRenderer from './components/render/JuliaRenderer';\n// import 'typeface-roboto';\nimport MandelbrotRenderer from './components/render/MandelbrotRenderer';\nimport ServiceWorkerWrapper from './components/ServiceWorkerWrapper';\nimport SettingsProvider, { SettingsContext } from './components/settings/SettingsContext';\nimport SettingsMenu from './components/settings/SettingsMenu';\nimport theme from './theme/theme';\n\nfunction App(): JSX.Element {\n  const size = useWindowSize();\n\n  // if app is started with a hash location, assume\n  // it should be the starting position\n  // detects hash updates\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  const [loc, navigate] = useHashLocation();\n\n  // non-reloading hash update\n  const updateBrowserHash = useHashNavigator();\n\n  const urlManager = useMemo(() => new ViewerURLManager(), []);\n\n  // generic callback\n  const updateHash = useCallback(\n    (name: string, v: Partial<ViewerLocation>) => {\n      urlManager.updateViewer(name, v);\n      const u = urlManager.asFullHashURL();\n      // console.debug(`Updated # for ${name} => ${u}`);\n      updateBrowserHash(u);\n    },\n    [updateBrowserHash, urlManager],\n  );\n\n  // callbacks for springs to update url when animation stops\n  const updateM = (v: Partial<ViewerLocation>) => updateHash('m', v);\n  const updateJ = (v: Partial<ViewerLocation>) => updateHash('j', v);\n\n  const mandelbrotControls: ViewerControlSprings = {\n    xyCtrl: useSpring<ViewerXYControl>(() => ({\n      xy: viewerOrigin.xy,\n      config: springsConfigs.default.xy,\n      onRest: updateM,\n    })),\n\n    zoomCtrl: useSpring<ViewerZoomControl>(() => ({\n      z: viewerOrigin.z,\n      minZoom: 0.5,\n      maxZoom: 100000,\n      config: springsConfigs.default.zoom,\n      onRest: updateM,\n    })),\n\n    rotCtrl: useSpring<ViewerRotationControl>(() => ({\n      theta: viewerOrigin.theta, // all angles in rad\n      config: springsConfigs.default.rot,\n      onRest: updateM,\n    })),\n  };\n\n  const juliaControls: ViewerControlSprings = {\n    xyCtrl: useSpring<ViewerXYControl>(() => ({\n      xy: viewerOrigin.xy,\n      config: springsConfigs.default.xy,\n      onRest: updateJ,\n    })),\n\n    zoomCtrl: useSpring<ViewerZoomControl>(() => ({\n      z: viewerOrigin.z,\n      minZoom: 0.5,\n      maxZoom: 2000,\n      config: springsConfigs.default.zoom,\n      onRest: updateJ,\n    })),\n\n    rotCtrl: useSpring<ViewerRotationControl>(() => ({\n      theta: viewerOrigin.theta, // all angles in rad\n      config: springsConfigs.default.rot,\n      onRest: updateJ,\n    })),\n  };\n\n  useEffect(() => {\n    // viewer should update if user goes back / forward on the page\n    // parse current location after user change\n    urlManager.updateFromURL();\n    console.log(`Warping to requested url => ${currentLocation()}`);\n\n    // warp to the newly parsed locations\n    warpToPoint(mandelbrotControls, urlManager.vs['m'].v);\n    warpToPoint(juliaControls, urlManager.vs['j'].v);\n    // this update process should only trigger when the hash location changes\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [loc]);\n\n  const reset = () => {\n    warpToPoint(mandelbrotControls, viewerOrigin);\n    warpToPoint(juliaControls, viewerOrigin);\n  };\n\n  const [showInfo, setShowInfo] = useState(false);\n\n  const toggleInfo = () => setShowInfo(!showInfo);\n\n  return (\n    <ThemeProvider theme={theme}>\n      <ServiceWorkerWrapper />\n      <SettingsProvider>\n        <Grid container>\n          <SettingsContext.Consumer>\n            {({ settings }) => (\n              <Grid\n                item\n                container\n                direction={\n                  (size.width || 1) < (size.height || 0) ? 'column-reverse' : 'row'\n                }\n                justify=\"center\"\n                className=\"fullSize\"\n                style={{\n                  position: 'absolute',\n                }}\n              >\n                <CoordinateInterface\n                  show={settings.showCoordinates}\n                  mandelbrot={mandelbrotControls}\n                />\n                <Grid item xs className=\"renderer\">\n                  <MandelbrotRenderer controls={mandelbrotControls} {...settings} />\n                </Grid>\n                <Grid item xs className=\"renderer\">\n                  <JuliaRenderer\n                    c={mandelbrotControls.xyCtrl[0].xy}\n                    controls={juliaControls}\n                    {...settings}\n                  />\n                </Grid>\n              </Grid>\n            )}\n          </SettingsContext.Consumer>\n\n          <SettingsMenu reset={() => reset()} toggleInfo={() => toggleInfo()} />\n\n          <InfoDialog ctrl={[showInfo, setShowInfo]} />\n        </Grid>\n      </SettingsProvider>\n    </ThemeProvider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n// import * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// The default service worker is not used: it's overridden instead\n// by the ServiceWorkerWrapper (ServiceWorkerWrapper.tsx)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n// serviceWorker.register();\n"],"sourceRoot":""}