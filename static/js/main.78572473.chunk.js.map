{"version":3,"sources":["common/values.ts","common/utils.ts","components/info/ChangeCoordinatesCard.tsx","components/info/CoordinatesCard.tsx","components/info/InfoDialog.tsx","dist/clientDetect.js","shaders/newSmoothJuliaShader.js","components/settings/SettingsDefinitions.tsx","components/settings/SettingsContext.tsx","theme/theme.tsx","shaders/fullVertexShader.js","components/render/WebGLCanvas.tsx","components/render/MinimapViewer.tsx","components/render/JuliaRenderer.tsx","shaders/newSmoothMandelbrotShader.ts","components/info/FPSCard.tsx","components/render/MandelbrotRenderer.tsx","serviceWorker.js","components/ServiceWorkerWrapper.tsx","components/settings/SettingsMenu.tsx","App.tsx","index.tsx"],"names":["startPos","viewerOrigin","xy","z","theta","springsConfigs","default","mass","tension","friction","zoom","rot","user","genericTouchBind","domTarget","controls","screenScaleMultiplier","setDragging","xyCtrl","setControlXY","zoomCtrl","minZoom","maxZoom","setControlZoom","rotCtrl","setControlRot","zoomMult","getRealZoom","current","height","handlers","onDragStart","event","preventDefault","onPinchStart","onPinch","vdva","vd","va","down","da","a","first","origin","memo","getValue","t","o","deg","newZ","newZclamp","_","clamp","realZoom","vScale","subV","relMove","addV","vRotate","immediate","config","Math","PI","onWheel","my","movement","active","shiftKey","newT","onDrag","direction","pinching","velocity","cancel","last","vecXY","eventOptions","passive","capture","warpToPoint","undefined","ChangeCoordinatesCard","props","useState","x","setX","y","setY","setZoom","setTheta","Grow","in","show","Card","style","width","zIndex","position","padding","display","flexDirection","flexShrink","Grid","container","alignItems","TextField","size","onChange","e","Number","target","value","type","defaultValue","inputProps","step","label","justify","min","Button","marginTop","onClick","mandelbrot","CoordinatesCard","marginBottom","Typography","align","fontFamily","fontSize","span","interpolate","toFixed","DialogTitle","withStyles","theme","createStyles","root","margin","spacing","image","marginRight","closeButton","marginLeft","color","palette","grey","children","classes","onClose","other","disableTypography","className","src","alt","variant","IconButton","aria-label","DialogContent","MuiDialogContent","DialogActions","MuiDialogActions","Alert","elevation","InfoDialog","ctrl","open","setOpen","snackBarOpen","setSnackBarOpen","handleClose","clientData","window","screenSize","screen","nameOffset","verOffset","ix","nVer","navigator","appVersion","nAgt","userAgent","browser","appName","version","parseFloat","majorVersion","parseInt","indexOf","substring","lastIndexOf","toLowerCase","toUpperCase","isNaN","mobile","test","cookieEnabled","document","cookie","os","clientStrings","s","r","id","cs","osVersion","exec","gl","debugInfo","gpuVendor","renderer","system","device","canvas","createElement","getContext","getExtension","getParameter","UNMASKED_VENDOR_WEBGL","UNMASKED_RENDERER_WEBGL","browserVersion","browserRelease","platform","dpr","devicePixelRatio","gpu","clientDetect","Dialog","aria-labelledby","maxWidth","dividers","gutterBottom","Link","href","Divider","Box","TableContainer","component","Paper","Table","TableHead","TableRow","TableCell","colSpan","TableBody","Object","entries","map","k","v","key","String","data","console","log","clipboard","writeText","prompt","writeToClipboard","JSON","stringify","startIcon","Snackbar","autoHideDuration","severity","surveyLink","rel","textDecoration","autoFocus","newSmoothJuliaShader","maxI","AA","B","settingsWidgets","settings","showMinimap","checked","control","Switch","showCrosshair","showCoordinates","labelPlacement","Slider","max","valueLabelDisplay","marks","useDPR","useAA","showFPS","defaultSettings","SettingsContext","createContext","setSettings","SettingsProvider","Provider","createMuiTheme","MuiSwitch","MuiButton","primary","main","colors","blue","secondary","red","info","fullscreenVertexArray","numComponents","WebGLCanvas","React","forwardRef","refAny","canvasRef","useRef","renderRequestRef","bufferInfo","programInfo","u","setFps","fps","useCallback","mini","currZoom","useEffect","twgl","fragShader","then","frames","elapsedTime","render","time","viewport","uniforms","resolution","u_zoom","u_c","c","u_xy","u_maxI","u_theta","useProgram","program","requestAnimationFrame","cancelAnimationFrame","ref","cursor","dragging","displayName","MinimapViewer","rest","ButtonBase","left","bottom","borderRadius","boxShadow","overflow","JuliaRenderer","miniCanvasRef","miniFragShader","gtb","useGesture","Consumer","makeCrosshair","stroke","radius","standardCrosshair","miniCrosshair","newSmoothMandelbrotShader","crosshairShape","FPSCard","top","userSelect","div","MandelbrotRenderer","isLocalhost","Boolean","location","hostname","match","register","URL","process","addEventListener","swUrl","fetch","response","contentType","headers","get","status","serviceWorker","ready","registration","unregister","reload","registerValidSW","catch","checkValidServiceWorker","onupdatefound","installingWorker","installing","onstatechange","state","controller","onUpdate","onSuccess","error","ServiceWorkerWrapper","showReload","setShowReload","waitingWorker","setWaitingWorker","onSWUpdate","waiting","anchorOrigin","vertical","horizontal","action","postMessage","useStyles","makeStyles","right","button","sliderControl","GroupDivider","GroupTitle","title","SettingsMenu","anchorEl","setAnchorEl","ResetButton","aria-controls","reset","AboutButton","toggleInfo","Fab","aria-haspopup","currentTarget","Backdrop","Popover","keepMounted","transformOrigin","paddingLeft","paddingRight","paddingTop","paddingBottom","item","name","widgets","getSettingsWidgetsGrouping","g","FormGroup","widget","FormControlLabel","val","prevState","App","isClient","getSize","innerWidth","innerHeight","windowSize","setWindowSize","handleResize","removeEventListener","useWindowSize","mandelbrotControls","useSpring","juliaControls","showInfo","setShowInfo","ThemeProvider","xs","ReactDOM","getElementById"],"mappings":"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","file":"static/js/main.78572473.chunk.js","sourcesContent":["import { ViewerLocation } from './types';\r\n\r\nexport const startPos: [number, number] = [-0.7746931, 0.1242266];\r\nexport const startZoom = 85.0;\r\nexport const startTheta = 0.6;\r\nexport const screenScaleMultiplier = 1e-7;\r\n\r\nexport const viewerOrigin: ViewerLocation = {\r\n  xy: [0, 0],\r\n  z: 1,\r\n  theta: 0,\r\n};\r\n\r\nexport const springsConfigs = {\r\n  default: {\r\n    /** used when the values are animated to a point, includes decay */\r\n    xy: { mass: 1, tension: 500, friction: 75 },\r\n    zoom: { mass: 1, tension: 300, friction: 40 },\r\n    rot: { mass: 1, tension: 400, friction: 75 },\r\n  },\r\n  user: {\r\n    /** used when a user is interacting with the view */\r\n    xy: { mass: 1, tension: 2000, friction: 100 },\r\n    zoom: { mass: 1, tension: 700, friction: 60 },\r\n    rot: { mass: 1, tension: 400, friction: 75 },\r\n  },\r\n  // default and decay are merged to give them single \"non-user\" values\r\n  // decay: {\r\n  //   /** used after the user has let go of the view, decaying */\r\n  //   xy: { mass: 1, tension: 500, friction: 75 },\r\n  //   zoom: { mass: 1, tension: 300, friction: 50 },\r\n  //   rot: { mass: 1, tension: 400, friction: 75 },\r\n  // },\r\n};\r\n\r\n// export const defaultSpringConfig = { mass: 1, tension: 100, friction: 200 };\r\n\r\n// export const xyCtrlSpringConfig = { mass: 1, tension: 2000, friction: 100 };\r\n// export const xyCtrlSpringDecayConfig = { mass: 1, tension: 500, friction: 75 };\r\n","import _ from 'lodash';\nimport { RefObject, useCallback, useEffect, useState } from 'react';\nimport { addV, subV } from 'react-use-gesture';\nimport {\n  FullGestureState,\n  Handlers,\n  StateKey,\n  UseGestureConfig,\n  Vector2,\n} from 'react-use-gesture/dist/types';\nimport { Vector, vRotate, vScale } from 'vec-la-fp';\nimport { ViewerControlSprings, ViewerLocation } from './types';\nimport { screenScaleMultiplier, springsConfigs } from './values';\n\n// https://usehooks.com/useWindowSize/\nexport function useWindowSize(): { width?: number; height?: number } {\n  const isClient = typeof window === 'object';\n\n  const getSize = useCallback(\n    () => ({\n      width: isClient ? window.innerWidth : undefined,\n      height: isClient ? window.innerHeight : undefined,\n    }),\n    [isClient],\n  );\n\n  const [windowSize, setWindowSize] = useState(getSize);\n\n  useEffect(() => {\n    if (!isClient) {\n      // return false;\n      return () => {\n        // do nothing\n      };\n    }\n\n    function handleResize() {\n      setWindowSize(getSize());\n    }\n\n    window.addEventListener('resize', handleResize);\n    return () => window.removeEventListener('resize', handleResize);\n  }, [getSize, isClient]); // Empty array ensures that effect is only run on mount and unmount\n\n  return windowSize;\n}\n\nexport interface GenericTouchBindParams {\n  domTarget: RefObject<HTMLCanvasElement>;\n  controls: ViewerControlSprings;\n  screenScaleMultiplier: number;\n  // gl: any,\n  setDragging: React.Dispatch<React.SetStateAction<boolean>>;\n}\n\nexport interface GenericTouchBindReturn {\n  handlers: Handlers;\n  config: UseGestureConfig;\n}\n\n// --------------------------------------------------------------------------\n// https://gist.github.com/evdokimovm/0e7163faf7c8fe24e41e6b68461e4feb\n// Convert from degrees to radians.\nconst degToRad = (deg: number): number => (deg * Math.PI) / 180;\n// Math.radians(90); // 1.5707963267948966\n\n// Convert from radians to degrees.\n// eslint-disable-next-line\nconst radToDeg = (rad: number): number => (rad * 180) / Math.PI;\n// Math.degrees(3.141592653589793); // 180\n// --------------------------------------------------------------------------\n\n// a touchbind for re-using across renderers\nexport function genericTouchBind({\n  domTarget,\n  controls,\n  screenScaleMultiplier,\n  setDragging,\n}: GenericTouchBindParams): GenericTouchBindReturn {\n  const [{ xy }, setControlXY] = controls.xyCtrl;\n  const [{ z, minZoom, maxZoom }, setControlZoom] = controls.zoomCtrl;\n  const [{ theta }, setControlRot] = controls.rotCtrl;\n\n  const zoomMult = { in: 3e-3, out: 1e-3 };\n\n  const getRealZoom = (z: number) =>\n    (domTarget.current?.height || 100) * z * screenScaleMultiplier;\n\n  return {\n    handlers: {\n      // prevent some browser events such as swipe-based navigation or\n      // pinch-based zoom and instead redirect them to this handler\n      onDragStart: ({ event }: FullGestureState<StateKey<'drag'>>) =>\n        event?.preventDefault(),\n      onPinchStart: ({ event }: FullGestureState<StateKey<'pinch'>>) =>\n        event?.preventDefault(),\n\n      onPinch: ({\n        vdva: [vd, va],\n        down,\n        da: [d, a],\n        // delta: [dd, da],\n        first,\n        origin,\n        // movement, //: [mx, my],\n        memo = {\n          xy: xy.getValue(),\n          z: z.getValue(),\n          t: theta.getValue(),\n          a: 0,\n          o: [0, 0] as Vector2,\n        },\n      }: FullGestureState<StateKey<'pinch'>>) => {\n        if (first) {\n          // remember the angle, location at which the pinch gesture starts\n          memo.a = a;\n          memo.o = origin;\n        }\n\n        const newZ = z.getValue() * (1 + 1e-1 * vd);\n        const newZclamp = _.clamp(newZ, minZoom.getValue(), maxZoom.getValue());\n\n        const realZoom = getRealZoom(newZclamp);\n\n        const [px, py]: Vector2 = vScale(-2 / realZoom, subV(origin, memo.o));\n        const relMove: Vector2 = [px, -py];\n\n        setControlXY({\n          xy: addV(memo.xy, vRotate(theta.getValue(), relMove)),\n        });\n\n        setControlZoom({\n          z: newZclamp,\n          immediate: down,\n          config: down ? springsConfigs.user.zoom : springsConfigs.default.zoom,\n        });\n\n        setControlRot({\n          theta: memo.t + degToRad(a - memo.a + 1e1 * va),\n          immediate: down, // fixes issues with wrapping around from (0) to (-2pi)\n          config: down ? springsConfigs.user.rot : springsConfigs.default.rot,\n        });\n\n        return memo;\n      },\n\n      onWheel: ({\n        movement: [, my],\n        active,\n        shiftKey,\n        memo = { zoom: z.getValue(), t: theta.getValue() },\n      }: FullGestureState<StateKey<'wheel'>>) => {\n        if (shiftKey) {\n          // if shift is pressed, rotate instead of zoom\n          const newT = memo.t + my * 1.5e-3;\n\n          setControlRot({\n            theta: newT,\n            config: active ? springsConfigs.user.rot : springsConfigs.default.rot,\n          });\n        } else {\n          // set different multipliers based on zoom direction\n          // mouse movement negative = move up the page = zoom in\n          //                                   zoom        in           out\n          const newZ = memo.zoom * (1 - my * (my < 0 ? zoomMult.in : zoomMult.out));\n\n          setControlZoom({\n            z: _.clamp(newZ, minZoom.getValue(), maxZoom.getValue()),\n            config: active ? springsConfigs.user.zoom : springsConfigs.default.zoom,\n          });\n        }\n        return memo;\n      },\n\n      onDrag: ({\n        down,\n        movement,\n        direction: [dx, dy],\n        velocity,\n        pinching,\n        last,\n        cancel,\n        memo = { xy: xy.getValue(), theta: theta.getValue() },\n      }: FullGestureState<StateKey<'drag'>>) => {\n        // let pinch handle movement\n        if (pinching) cancel && cancel();\n        // change according to this formula:\n        // move (x, y) in the opposite direction of drag (pan with cursor)\n        // divide by canvas size to scale appropriately\n        // multiply by 2 to correct scaling on viewport (?)\n        // use screen multiplier for more granularity\n        const realZoom = getRealZoom(z.getValue());\n\n        const [px, py]: Vector = vScale(-2 / realZoom, movement);\n        // const relMove: Vector = vScale(2 / realZoom, movement);\n\n        const relMove: Vector = [px, -py];\n        // const relDir: Vector = [dx, -dy];\n\n        const t = theta.getValue();\n\n        const vecXY = addV(memo.xy, vRotate(t, relMove)); // add the displacement to the starting position\n        // const velXY = vScale(velocity, vNorm(vecXY))\n\n        setControlXY({\n          // add to the current position the relative displacement (relMove), rotated by theta,\n          // to maintain the correct displacement direction (without this it would move as if theta=0)\n          xy: vecXY,\n          // immediate: down, // immediately apply if the gesture is active\n          config: down ? springsConfigs.user.xy : springsConfigs.default.xy,\n          //  {\n          //   // velocity also needs to be rotated according to theta\n          //   // -@ts-expect-error - velocity should be `[number, number]`, but only `number` allowed\n          //   // velocity: vScale(-velocity / realZoom, vRotate(t, relDir)), // set the velocity (gesture momentum)\n          //   // velocity: vMag(vScale(-velocity / realZoom, vRotate(t, relDir))), // set the velocity (gesture momentum)\n          //   // velocity: velocity / screenScaleMultiplier, // set the velocity (gesture momentum)\n          //   // mass: down ? 1 : 5,\n          //   ...xyCtrlSpringConfig,\n          //   tension: down ? xyCtrlSpringConfig.tension : xyCtrlSpringConfig.tension / 2,\n          //   // -@ts-expect-error - decay is undocumented?\n          //   // decay: true,\n          // },\n        });\n\n        // tell the renderer that it's being dragged on\n        setDragging(down);\n\n        return memo;\n      },\n    },\n    config: {\n      eventOptions: { passive: false, capture: false },\n      domTarget: domTarget,\n      // The config object passed to useGesture has drag, wheel, scroll, pinch and move keys\n      // for specific gesture options. See here for more details.\n      // drag: {\n      //   bounds,\n      //   rubberband: true,\n      // }\n    },\n  };\n}\n\n/**\n * Warps the given controller to a desired viewer location.\n * @param controls The controller to be animated\n * @param location The (partial) viewer location to warp to: xy, zoom, theta\n * @param immediate Should the update happen immediately? (Useful for testing)\n */\nexport function warpToPoint(\n  controls: ViewerControlSprings,\n  { xy, z, theta }: Partial<ViewerLocation>,\n  immediate = false,\n): void {\n  // can't do a simple \"if (x)\" check since values could be zero (evaluates to \"false\")\n  if (xy !== undefined) {\n    controls.xyCtrl[1]({\n      // use screen scale multiplier for a simpler API\n      xy: vScale(1 / screenScaleMultiplier, xy),\n      config: springsConfigs.default.xy,\n      immediate: immediate,\n    });\n  }\n  if (z !== undefined) {\n    controls.zoomCtrl[1]({\n      z: z,\n      config: springsConfigs.default.zoom,\n      immediate: immediate,\n    });\n  }\n  if (theta !== undefined) {\n    controls.rotCtrl[1]({\n      theta: theta,\n      config: springsConfigs.default.rot,\n      immediate: immediate,\n    });\n  }\n}\n","import { Button, Card, Grid, Grow, TextField } from '@material-ui/core';\r\nimport React, { useState } from 'react';\r\nimport { ChangeCoordinatesCardProps } from '../../common/info';\r\nimport { startPos, startTheta, startZoom } from '../../common/values';\r\nimport { warpToPoint } from '../../common/utils';\r\n\r\nconst ChangeCoordinatesCard = (props: ChangeCoordinatesCardProps): JSX.Element => {\r\n  const [x, setX] = useState(startPos[0]);\r\n  const [y, setY] = useState(startPos[1]);\r\n  const [zoom, setZoom] = useState(startZoom);\r\n  const [theta, setTheta] = useState(startTheta);\r\n\r\n  return (\r\n    <Grow in={props.show}>\r\n      <Card\r\n        style={{\r\n          width: 'auto',\r\n          zIndex: 1300,\r\n          position: 'relative',\r\n          padding: 8,\r\n          display: 'flex',\r\n          flexDirection: 'column',\r\n          flexShrink: 1,\r\n          // display: props.show ? 'block' : 'none',\r\n          // borderRadius: 100,\r\n        }}\r\n      >\r\n        <Grid container direction=\"column\" alignItems=\"center\">\r\n          <TextField\r\n            size=\"small\"\r\n            style={{ width: '12ch' }}\r\n            onChange={(e) => setX(Number(e.target.value))}\r\n            type=\"number\"\r\n            defaultValue={x}\r\n            inputProps={{ step: 0.01 }}\r\n            label=\"x\"\r\n          />\r\n          <TextField\r\n            size=\"small\"\r\n            style={{ width: '12ch' }}\r\n            onChange={(e) => setY(Number(e.target.value))}\r\n            type=\"number\"\r\n            defaultValue={y}\r\n            inputProps={{ step: 0.01 }}\r\n            label=\"y\"\r\n          />\r\n          <Grid container direction=\"row\" justify=\"space-around\">\r\n            <TextField\r\n              size=\"small\"\r\n              style={{ width: '5ch' }}\r\n              onChange={(e) => setZoom(Number(e.target.value))}\r\n              type=\"number\"\r\n              defaultValue={zoom}\r\n              inputProps={{ min: 0 }}\r\n              label=\"zoom\"\r\n            />\r\n            <TextField\r\n              size=\"small\"\r\n              style={{ width: '5ch' }}\r\n              onChange={(e) => setTheta(Number(e.target.value))}\r\n              type=\"number\"\r\n              defaultValue={theta}\r\n              inputProps={{ step: 0.1 }}\r\n              label=\"theta\"\r\n            />\r\n          </Grid>\r\n          <Button\r\n            style={{ marginTop: 12 }}\r\n            onClick={() =>\r\n              warpToPoint(props.mandelbrot, { xy: [x, y], z: zoom, theta: theta })\r\n            }\r\n          >\r\n            Go\r\n          </Button>\r\n        </Grid>\r\n      </Card>\r\n    </Grow>\r\n  );\r\n};\r\n\r\nexport default ChangeCoordinatesCard;\r\n","import { Card, Grow, Typography } from '@material-ui/core';\r\nimport React from 'react';\r\nimport { animated } from 'react-spring';\r\nimport { CoordinatesCardProps } from '../../common/info';\r\nimport { screenScaleMultiplier } from '../../common/values';\r\n\r\nconst CoordinatesCard = (props: CoordinatesCardProps): JSX.Element => {\r\n  return (\r\n    <Grow in={props.show}>\r\n      <Card\r\n        style={{\r\n          width: 'auto',\r\n          zIndex: 1300,\r\n          position: 'relative',\r\n          padding: '6px 12px',\r\n          marginBottom: 8,\r\n          // display: props.show ? 'block' : 'none',\r\n          // borderRadius: 100,\r\n        }}\r\n      >\r\n        <Typography align=\"right\" style={{ fontFamily: 'monospace', fontSize: '1.2rem' }}>\r\n          {/* https://www.typescriptlang.org/docs/handbook/basic-types.html#tuple */}\r\n          {/* https://www.typescriptlang.org/docs/handbook/2/objects.html#tuple-types */}\r\n          <animated.span>\r\n            {props.mandelbrot.xy.interpolate(\r\n              // @ts-expect-error: Function call broken in TS, waiting till react-spring v9 to fix\r\n              (x, y) => `${(x * screenScaleMultiplier).toFixed(7)} : x`,\r\n            )}\r\n          </animated.span>\r\n          <br />\r\n          <animated.span>\r\n            {props.mandelbrot.xy.interpolate(\r\n              // @ts-expect-error: Function call broken in TS, waiting till react-spring v9 to fix\r\n              (x, y) => `${(y * screenScaleMultiplier).toFixed(7)} : y`,\r\n            )}\r\n          </animated.span>\r\n          <br />\r\n          <animated.span>\r\n            {props.mandelbrot.zoom.interpolate((z) => `${z.toFixed(2)} : z`)}\r\n          </animated.span>\r\n          <br />\r\n          <animated.span>\r\n            {props.mandelbrot.theta.interpolate((t) => `${t.toFixed(3)} : t`)}\r\n          </animated.span>\r\n        </Typography>\r\n      </Card>\r\n    </Grow>\r\n  );\r\n};\r\n\r\nexport default CoordinatesCard;\r\n\r\n// <Card\r\n//   style={{\r\n//     width: 'auto',\r\n//     position: 'absolute',\r\n//     zIndex: 2,\r\n//     right: 0,\r\n//     top: 0,\r\n//     margin: 20,\r\n//     padding: 8,\r\n//     display: settings.coords[0] ? 'block' : 'none',\r\n//     // borderRadius: 100,\r\n//   }}\r\n// >\r\n//   <Typography align=\"right\">\r\n//     {/* https://www.typescriptlang.org/docs/handbook/basic-types.html#tuple */}\r\n//     {/* https://www.typescriptlang.org/docs/handbook/2/objects.html#tuple-types */}\r\n//     <animated.span>\r\n//       {mandelbrotControls.xyCtrl[0].xy.interpolate(\r\n//         // @ts-expect-error: Function call broken in TS, waiting till react-spring v9 to fix\r\n//         (x, y) => `${(x * screenScaleMultiplier).toFixed(7)} : x`,\r\n//       )}\r\n//     </animated.span>\r\n//     <br />\r\n//     <animated.span>\r\n//       {mandelbrotControls.xyCtrl[0].xy.interpolate(\r\n//         // @ts-expect-error: Function call broken in TS, waiting till react-spring v9 to fix\r\n//         (x, y) => `${(y * screenScaleMultiplier).toFixed(7)} : y`,\r\n//       )}\r\n//     </animated.span>\r\n//   </Typography>\r\n// </Card>;\r\n","import React, { PropsWithChildren, useState } from 'react';\r\nimport { createStyles, Theme, WithStyles, withStyles } from '@material-ui/core/styles';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport MuiDialogTitle from '@material-ui/core/DialogTitle';\r\nimport MuiDialogContent from '@material-ui/core/DialogContent';\r\nimport MuiDialogActions from '@material-ui/core/DialogActions';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport {\r\n  Link,\r\n  TableContainer,\r\n  Table,\r\n  Paper,\r\n  TableRow,\r\n  TableCell,\r\n  TableHead,\r\n  TableBody,\r\n  Box,\r\n  Divider,\r\n  Snackbar,\r\n} from '@material-ui/core';\r\nimport LaunchIcon from '@material-ui/icons/Launch';\r\nimport FileCopyIcon from '@material-ui/icons/FileCopy';\r\nimport MuiAlert, { AlertProps } from '@material-ui/lab/Alert';\r\nimport { surveyLink } from '../surveyLink.json';\r\n\r\n// for evaluating build time\r\nimport preval from 'preval.macro';\r\nimport clientDetect from '../../dist/clientDetect';\r\n\r\nconst dateTimeStamp = preval`module.exports = new Date();`;\r\n\r\nconst styles = (theme: Theme) =>\r\n  createStyles({\r\n    root: {\r\n      margin: 0,\r\n      padding: theme.spacing(2),\r\n      display: 'flex',\r\n      flexDirection: 'row',\r\n      // align: \"middle\",\r\n    },\r\n    image: {\r\n      marginTop: 'auto',\r\n      marginBottom: 'auto',\r\n      marginRight: 8,\r\n      height: 50,\r\n    },\r\n    closeButton: {\r\n      // position: 'absolute',\r\n      // right: theme.spacing(1),\r\n      // top: theme.spacing(1),\r\n      marginLeft: 'auto',\r\n      color: theme.palette.grey[500],\r\n    },\r\n  });\r\n\r\nexport interface DialogTitleProps extends PropsWithChildren<WithStyles<typeof styles>> {\r\n  onClose: () => void;\r\n  id: string;\r\n}\r\n\r\n// https://material-ui.com/guides/typescript/#usage-of-withstyles\r\nconst DialogTitle = withStyles(styles)(\r\n  ({ children, classes, onClose, ...other }: DialogTitleProps) => {\r\n    return (\r\n      <MuiDialogTitle disableTypography className={classes.root} {...other}>\r\n        <img src=\"logo-512.png\" alt=\"Mandelbrot Maps logo\" className={classes.image} />\r\n        <Typography\r\n          variant=\"h1\"\r\n          style={{ fontSize: 24, marginTop: 'auto', marginBottom: 'auto' }}\r\n        >\r\n          {children}\r\n        </Typography>\r\n        {onClose ? (\r\n          <IconButton\r\n            aria-label=\"close\"\r\n            className={classes.closeButton}\r\n            onClick={onClose}\r\n          >\r\n            <CloseIcon />\r\n          </IconButton>\r\n        ) : null}\r\n      </MuiDialogTitle>\r\n    );\r\n  },\r\n);\r\n\r\nconst DialogContent = withStyles((theme) => ({\r\n  root: {\r\n    padding: theme.spacing(3),\r\n  },\r\n}))(MuiDialogContent);\r\n\r\nconst DialogActions = withStyles((theme) => ({\r\n  root: {\r\n    margin: 0,\r\n    padding: theme.spacing(1),\r\n  },\r\n}))(MuiDialogActions);\r\n\r\nfunction Alert(props: AlertProps) {\r\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\r\n}\r\n\r\nexport default function InfoDialog(props: any) {\r\n  const [open, setOpen] = props.ctrl;\r\n  const [snackBarOpen, setSnackBarOpen] = useState(false);\r\n\r\n  const handleClose = () => setOpen(false);\r\n  // const showSnackBar = () => {\r\n  // new Promise(() => {\r\n  // setSnackBarOpen(false);\r\n  // }).then(() => {\r\n  // setSnackBarOpen(true);\r\n  // });\r\n  // };\r\n\r\n  // guard against null / undefined window\r\n  const clientData = clientDetect(window);\r\n  // const clientData = window.jscd || {};\r\n\r\n  const writeToClipboard = (data: string) => {\r\n    console.log(snackBarOpen);\r\n    try {\r\n      navigator.clipboard.writeText(data);\r\n      setSnackBarOpen(true);\r\n    } catch (e) {\r\n      window.prompt('Auto copy to clipboard failed, copy manually from below:', data);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Dialog\r\n      onClose={handleClose}\r\n      aria-labelledby=\"customized-dialog-title\"\r\n      open={open}\r\n      maxWidth=\"md\"\r\n    >\r\n      {/* <div style={{ maxWidth: 700 }}> */}\r\n      <DialogTitle id=\"customized-dialog-title\" onClose={handleClose}>\r\n        Mandelbrot Maps\r\n      </DialogTitle>\r\n      <DialogContent dividers style={{ maxWidth: 700 }}>\r\n        <Typography gutterBottom>\r\n          Mandelbrot Maps is an interactive fractal explorer built using React and WebGL.\r\n        </Typography>\r\n        <Typography gutterBottom>\r\n          Developed by{' '}\r\n          <Link href=\"https://jmaio.github.io/\" target=\"_blank\">\r\n            Joao Maio\r\n          </Link>{' '}\r\n          in 2019/2020 as part of an Honours Project at The University of Edinburgh, under\r\n          the supervision of Philip Wadler.\r\n        </Typography>\r\n        <Typography gutterBottom>\r\n          The project was simultaneously undertaken by Freddie Bawden, also under the\r\n          supervision of Philip Wadler. Freddie's version of the project is available at:{' '}\r\n          <Link href=\"http://mmaps.freddiejbawden.com/\" target=\"_blank\">\r\n            mmaps.freddiejbawden.com\r\n          </Link>\r\n        </Typography>\r\n        <Typography gutterBottom>\r\n          The{' '}\r\n          <Link\r\n            href=\"https://homepages.inf.ed.ac.uk/wadler/mandelbrot-maps/index.html\"\r\n            target=\"_blank\"\r\n          >\r\n            original Mandelbrot Maps project\r\n          </Link>{' '}\r\n          was developed by Iain Parris in 2008 as a Java Applet.\r\n        </Typography>\r\n        <Typography gutterBottom>\r\n          Mandelbrot set shader code adapted from{' '}\r\n          <Link href=\"https://www.shadertoy.com/view/4df3Rn\">Mandelbrot - smooth</Link> by{' '}\r\n          <Link href=\"http://iquilezles.org/\" target=\"_blank\">\r\n            Inigo Quilez\r\n          </Link>\r\n          .\r\n        </Typography>\r\n        {/* <Typography>\r\n            &copy; Joao Maio 2020\r\n          </Typography> */}\r\n\r\n        <Divider style={{ marginTop: 30, marginBottom: 30 }} />\r\n\r\n        <Box style={{ display: 'flex' }}>\r\n          <TableContainer\r\n            component={Paper}\r\n            style={{ width: 'auto', margin: 'auto', maxWidth: 460 }}\r\n          >\r\n            <Table size=\"small\" aria-label=\"a dense table\">\r\n              <TableHead>\r\n                <TableRow>\r\n                  <TableCell align=\"center\" colSpan={2} variant=\"head\">\r\n                    Device properties\r\n                  </TableCell>\r\n                </TableRow>\r\n              </TableHead>\r\n              <TableBody>\r\n                {Object.entries(clientData).map(([k, v]) => (\r\n                  <TableRow key={k}>\r\n                    <TableCell>{k}</TableCell>\r\n                    <TableCell align=\"right\" style={{ fontFamily: 'monospace' }}>\r\n                      {String(v)}\r\n                    </TableCell>\r\n                  </TableRow>\r\n                ))}\r\n              </TableBody>\r\n            </Table>\r\n          </TableContainer>\r\n        </Box>\r\n\r\n        <Divider style={{ marginTop: 30, marginBottom: 30 }} />\r\n\r\n        <Box style={{ display: 'flex' }}>\r\n          <Typography variant=\"overline\" align=\"center\" style={{ margin: 'auto' }}>\r\n            Build:\r\n            <Typography style={{ fontFamily: 'monospace' }}>{dateTimeStamp}</Typography>\r\n            {/* {console.log(new Date(dateTimeStamp).toLocaleString('en-GB', { timeZone: 'UTC' }))} */}\r\n          </Typography>\r\n        </Box>\r\n      </DialogContent>\r\n\r\n      <DialogActions>\r\n        <Button\r\n          onClick={() => {\r\n            writeToClipboard(JSON.stringify(clientData));\r\n          }}\r\n          color=\"primary\"\r\n          variant=\"outlined\"\r\n          startIcon={<FileCopyIcon />}\r\n        >\r\n          Copy\r\n        </Button>\r\n        <Snackbar\r\n          open={snackBarOpen}\r\n          autoHideDuration={5000}\r\n          // onClose={() => setSnackBarOpen(false)}\r\n        >\r\n          <Alert onClose={() => setSnackBarOpen(false)} severity=\"info\">\r\n            Device properties copied!\r\n          </Alert>\r\n        </Snackbar>\r\n        <Link\r\n          href={surveyLink}\r\n          target=\"_blank\"\r\n          rel=\"noopener\"\r\n          style={{ textDecoration: 'none' }}\r\n        >\r\n          <Button autoFocus color=\"primary\" variant=\"outlined\" startIcon={<LaunchIcon />}>\r\n            Feedback\r\n          </Button>\r\n        </Link>\r\n      </DialogActions>\r\n      {/* </div> */}\r\n    </Dialog>\r\n  );\r\n}\r\n","/* eslint-disable */\r\n/**\r\n * JavaScript Client Detection\r\n * (C) viazenetti GmbH (Christian Ludwig)\r\n */\r\nexport default function clientDetect(window) {\r\n  var unknown = '-';\r\n\r\n  // screen\r\n  var screenSize = '';\r\n  if (window.screen.width) {\r\n    var width = window.screen.width ? window.screen.width : '';\r\n    var height = window.screen.height ? window.screen.height : '';\r\n    screenSize += '' + width + ' x ' + height;\r\n  }\r\n\r\n  // browser\r\n  var nVer = navigator.appVersion;\r\n  var nAgt = navigator.userAgent;\r\n  var browser = navigator.appName;\r\n  var version = '' + parseFloat(navigator.appVersion);\r\n  var majorVersion = parseInt(navigator.appVersion, 10);\r\n  var nameOffset, verOffset, ix;\r\n\r\n  // Opera\r\n  if ((verOffset = nAgt.indexOf('Opera')) != -1) {\r\n    browser = 'Opera';\r\n    version = nAgt.substring(verOffset + 6);\r\n    if ((verOffset = nAgt.indexOf('Version')) != -1) {\r\n      version = nAgt.substring(verOffset + 8);\r\n    }\r\n  }\r\n  // Opera Next\r\n  if ((verOffset = nAgt.indexOf('OPR')) != -1) {\r\n    browser = 'Opera';\r\n    version = nAgt.substring(verOffset + 4);\r\n  }\r\n  // Edge\r\n  else if ((verOffset = nAgt.indexOf('Edge')) != -1) {\r\n    browser = 'Microsoft Edge';\r\n    version = nAgt.substring(verOffset + 5);\r\n  }\r\n  // MSIE\r\n  else if ((verOffset = nAgt.indexOf('MSIE')) != -1) {\r\n    browser = 'Microsoft Internet Explorer';\r\n    version = nAgt.substring(verOffset + 5);\r\n  }\r\n  // Chrome\r\n  else if ((verOffset = nAgt.indexOf('Chrome')) != -1) {\r\n    browser = 'Chrome';\r\n    version = nAgt.substring(verOffset + 7);\r\n  }\r\n  // Safari\r\n  else if ((verOffset = nAgt.indexOf('Safari')) != -1) {\r\n    browser = 'Safari';\r\n    version = nAgt.substring(verOffset + 7);\r\n    if ((verOffset = nAgt.indexOf('Version')) != -1) {\r\n      version = nAgt.substring(verOffset + 8);\r\n    }\r\n  }\r\n  // Firefox\r\n  else if ((verOffset = nAgt.indexOf('Firefox')) != -1) {\r\n    browser = 'Firefox';\r\n    version = nAgt.substring(verOffset + 8);\r\n  }\r\n  // MSIE 11+\r\n  else if (nAgt.indexOf('Trident/') != -1) {\r\n    browser = 'Microsoft Internet Explorer';\r\n    version = nAgt.substring(nAgt.indexOf('rv:') + 3);\r\n  }\r\n  // Other browsers\r\n  else if (\r\n    (nameOffset = nAgt.lastIndexOf(' ') + 1) < (verOffset = nAgt.lastIndexOf('/'))\r\n  ) {\r\n    browser = nAgt.substring(nameOffset, verOffset);\r\n    version = nAgt.substring(verOffset + 1);\r\n    if (browser.toLowerCase() == browser.toUpperCase()) {\r\n      browser = navigator.appName;\r\n    }\r\n  }\r\n  // trim the version string\r\n  if ((ix = version.indexOf(';')) != -1) version = version.substring(0, ix);\r\n  if ((ix = version.indexOf(' ')) != -1) version = version.substring(0, ix);\r\n  if ((ix = version.indexOf(')')) != -1) version = version.substring(0, ix);\r\n\r\n  majorVersion = parseInt('' + version, 10);\r\n  if (isNaN(majorVersion)) {\r\n    version = '' + parseFloat(navigator.appVersion);\r\n    majorVersion = parseInt(navigator.appVersion, 10);\r\n  }\r\n\r\n  // mobile version\r\n  var mobile = /Mobile|mini|Fennec|Android|iP(ad|od|hone)/.test(nVer);\r\n\r\n  // cookie\r\n  var cookieEnabled = navigator.cookieEnabled ? true : false;\r\n\r\n  if (typeof navigator.cookieEnabled == 'undefined' && !cookieEnabled) {\r\n    document.cookie = 'testcookie';\r\n    cookieEnabled = document.cookie.indexOf('testcookie') != -1 ? true : false;\r\n  }\r\n\r\n  // system\r\n  var os = unknown;\r\n  var clientStrings = [\r\n    { s: 'Windows 10', r: /(Windows 10.0|Windows NT 10.0)/ },\r\n    { s: 'Windows 8.1', r: /(Windows 8.1|Windows NT 6.3)/ },\r\n    { s: 'Windows 8', r: /(Windows 8|Windows NT 6.2)/ },\r\n    { s: 'Windows 7', r: /(Windows 7|Windows NT 6.1)/ },\r\n    { s: 'Windows Vista', r: /Windows NT 6.0/ },\r\n    { s: 'Windows Server 2003', r: /Windows NT 5.2/ },\r\n    { s: 'Windows XP', r: /(Windows NT 5.1|Windows XP)/ },\r\n    { s: 'Windows 2000', r: /(Windows NT 5.0|Windows 2000)/ },\r\n    { s: 'Windows ME', r: /(Win 9x 4.90|Windows ME)/ },\r\n    { s: 'Windows 98', r: /(Windows 98|Win98)/ },\r\n    { s: 'Windows 95', r: /(Windows 95|Win95|Windows_95)/ },\r\n    { s: 'Windows NT 4.0', r: /(Windows NT 4.0|WinNT4.0|WinNT|Windows NT)/ },\r\n    { s: 'Windows CE', r: /Windows CE/ },\r\n    { s: 'Windows 3.11', r: /Win16/ },\r\n    { s: 'Android', r: /Android/ },\r\n    { s: 'Open BSD', r: /OpenBSD/ },\r\n    { s: 'Sun OS', r: /SunOS/ },\r\n    { s: 'Chrome OS', r: /CrOS/ },\r\n    { s: 'Linux', r: /(Linux|X11(?!.*CrOS))/ },\r\n    { s: 'iOS', r: /(iPhone|iPad|iPod)/ },\r\n    { s: 'Mac OS X', r: /Mac OS X/ },\r\n    { s: 'Mac OS', r: /(MacPPC|MacIntel|Mac_PowerPC|Macintosh)/ },\r\n    { s: 'QNX', r: /QNX/ },\r\n    { s: 'UNIX', r: /UNIX/ },\r\n    { s: 'BeOS', r: /BeOS/ },\r\n    { s: 'OS/2', r: /OS\\/2/ },\r\n    {\r\n      s: 'Search Bot',\r\n      r: /(nuhk|Googlebot|Yammybot|Openbot|Slurp|MSNBot|Ask Jeeves\\/Teoma|ia_archiver)/,\r\n    },\r\n  ];\r\n  for (var id in clientStrings) {\r\n    var cs = clientStrings[id];\r\n    if (cs.r.test(nAgt)) {\r\n      os = cs.s;\r\n      break;\r\n    }\r\n  }\r\n\r\n  var osVersion = unknown;\r\n\r\n  if (/Windows/.test(os)) {\r\n    osVersion = /Windows (.*)/.exec(os)[1];\r\n    os = 'Windows';\r\n  }\r\n\r\n  switch (os) {\r\n    case 'Mac OS X':\r\n      osVersion = /Mac OS X (10[\\.\\_\\d]+)/.exec(nAgt)[1];\r\n      break;\r\n\r\n    case 'Android':\r\n      osVersion = /Android ([\\.\\_\\d]+)/.exec(nAgt)[1];\r\n      break;\r\n\r\n    case 'iOS':\r\n      osVersion = /OS (\\d+)_(\\d+)_?(\\d+)?/.exec(nVer);\r\n      osVersion = osVersion[1] + '.' + osVersion[2] + '.' + (osVersion[3] | 0);\r\n      break;\r\n\r\n    default:\r\n      break;\r\n  }\r\n\r\n  // user agent string manipulation to obtain device model\r\n  var system = nAgt.substring(nAgt.indexOf('(') + 1, nAgt.indexOf(')'));\r\n  var device = system.substring(system.lastIndexOf(';') + 1);\r\n\r\n  // use JavaScript to detect GPU used from within your browser - by cvan\r\n  // https://gist.github.com/cvan/042b2448fcecefafbb6a91469484cdf8\r\n  var canvas = document.createElement('canvas');\r\n  var gl;\r\n  var debugInfo;\r\n  var gpuVendor;\r\n  var renderer;\r\n\r\n  try {\r\n    gl = canvas.getContext('webgl') || canvas.getContext('experimental-webgl');\r\n    // move block here if webgl not available\r\n    // if (gl) {\r\n    debugInfo = gl.getExtension('WEBGL_debug_renderer_info');\r\n    gpuVendor = gl.getParameter(debugInfo.UNMASKED_VENDOR_WEBGL);\r\n    renderer = gl.getParameter(debugInfo.UNMASKED_RENDERER_WEBGL);\r\n    // }\r\n  } catch (e) {\r\n    //   do nothing\r\n  }\r\n  // ----------------------------------------------------------------\r\n\r\n  //   window.jscd = {\r\n  return {\r\n    browser: browser,\r\n    browserVersion: majorVersion,\r\n    browserRelease: version,\r\n    // vendor: navigator.vendor,\r\n    device: device,\r\n    os: os,\r\n    osVersion: osVersion,\r\n    mobile: mobile,\r\n    platform: navigator.platform,\r\n    screen: screenSize,\r\n    dpr: +window.devicePixelRatio.toFixed(3),\r\n    gpu: renderer,\r\n    gpuVendor: gpuVendor,\r\n    userAgent: navigator.userAgent,\r\n    // cookies: cookieEnabled,\r\n    // flashVersion: flashVersion\r\n  };\r\n}\r\n// (this)\r\n\r\n// alert(\r\n//     'OS: ' + jscd.os +' '+ jscd.osVersion + '\\n' +\r\n//     'Browser: ' + jscd.browser +' '+ jscd.browserMajorVersion +\r\n//       ' (' + jscd.browserVersion + ')\\n' +\r\n//     'Mobile: ' + jscd.mobile + '\\n' +\r\n//     'Flash: ' + jscd.flashVersion + '\\n' +\r\n//     'Cookies: ' + jscd.cookies + '\\n' +\r\n//     'Screen Size: ' + jscd.screen + '\\n\\n' +\r\n//     'Full User Agent: ' + navigator.userAgent\r\n// );\r\n","// TODO set max iterations as parameter\r\n\r\nconst newSmoothJuliaShader = ({\r\n  maxI = 300,\r\n  AA = 1,\r\n  B = 64,\r\n  // crosshair = {\r\n  //     stroke: 0,\r\n  //     radius: 0\r\n  // },\r\n}) => `\r\n\r\n#define AA ${AA}\r\n#define MAXI ${maxI}\r\n#define B ${B.toFixed(1)}\r\n\r\n// set high float precision (lower than this may break colours on mobile)\r\nprecision highp float;\r\n\r\n// need to know the resolution of the canvas\r\nuniform vec2 resolution;\r\n\r\n// properties should be passed as uniforms\r\nuniform int   u_maxI;\r\nuniform vec2  u_xy;\r\nuniform vec2  u_c;\r\nuniform float u_zoom;\r\nuniform float u_theta;\r\n\r\nfloat julia( vec2 z, vec2 c ) {\r\n\r\n  float l = 0.0;\r\n  for( int i=0; i<MAXI; i++ )\r\n  {\r\n      z = vec2( z.x*z.x - z.y*z.y, 2.0*z.x*z.y ) + c;\r\n      if( dot(z,z)>(B*B) ) break;\r\n      l += 1.0;\r\n  }\r\n\r\n  // maxed out iterations\r\n  if( l>float(MAXI)-1.0 ) return 0.0;\r\n\r\n  // equivalent optimized smooth interation count\r\n  l = l - log2(log2(dot(z,z))) + 4.0;\r\n\r\n  return l;\r\n}\r\n\r\nvoid main() {    \r\n  // set the initial colour to black\r\n  vec3 col = vec3(0.0);\r\n\r\n  // anti-aliasing\r\n  #if AA>1\r\n  for( int m=0; m<AA; m++ )\r\n  for( int n=0; n<AA; n++ )\r\n  {\r\n      vec2 p = (2.0*(gl_FragCoord.xy + vec2(float(m), float(n)) / float(AA) ) - resolution.xy)/resolution.y;\r\n      float w = float(AA*m+n);\r\n  #else    \r\n      // adjust pixels to range from [-1, 1]\r\n      vec2 p = (2.0*gl_FragCoord.xy - resolution.xy)/resolution.y;\r\n  #endif\r\n  \r\n  // constant \"c\" to add, based on mandelbrot position\r\n  vec2 c = u_c;\r\n\r\n  float sinT = sin(u_theta);\r\n  float cosT = cos(u_theta);\r\n\r\n  vec2 xy = vec2( p.x*cosT - p.y*sinT, p.x*sinT + p.y*cosT );\r\n  // c is based on offset and grid position, z_0 = 0\r\n  vec2 z = u_xy + xy/u_zoom;\r\n\r\n  float l = julia(z, c);\r\n  col += 0.5 + 0.5*cos( 3.0 + l*0.15 + vec3(0.0,0.6,1.0));\r\n\r\n  // antialiasing\r\n  #if AA>1\r\n  }\r\n  col /= float(AA*AA);\r\n  #endif\r\n\r\n  // Output to screen\r\n  gl_FragColor = vec4( col, 1.0 );\r\n}\r\n`;\r\n\r\nexport default newSmoothJuliaShader;\r\n","import { Slider, Switch } from '@material-ui/core';\r\nimport React from 'react';\r\nimport {\r\n  settingsDefinitionsType,\r\n  settingsGroupType,\r\n  settingsWidgetType,\r\n} from '../../common/settings';\r\n\r\nexport const defaultSettings = {\r\n  showMinimap: true,\r\n  showCrosshair: true,\r\n  showCoordinates: true,\r\n  maxI: 250,\r\n  showFPS: false,\r\n  useDPR: false,\r\n  useAA: false,\r\n};\r\n\r\nexport const settingsWidgets = (\r\n  settings: settingsDefinitionsType,\r\n): settingsWidgetType => ({\r\n  showMinimap: {\r\n    k: 'showMinimap',\r\n    label: 'Minimap',\r\n    checked: settings.showMinimap,\r\n    control: <Switch />,\r\n  },\r\n  showCrosshair: {\r\n    k: 'showCrosshair',\r\n    label: 'Crosshair',\r\n    checked: settings.showCrosshair,\r\n    control: <Switch />,\r\n  },\r\n  showCoordinates: {\r\n    k: 'showCoordinates',\r\n    label: 'Show coordinates',\r\n    checked: settings.showCoordinates,\r\n    control: <Switch />,\r\n  },\r\n  maxI: {\r\n    k: 'maxI',\r\n    label: 'Iterations',\r\n    value: settings.maxI,\r\n    labelPlacement: 'top',\r\n    style: {\r\n      marginLeft: 0,\r\n      marginRight: 0,\r\n    },\r\n    control: (\r\n      <Slider\r\n        min={10}\r\n        max={1000}\r\n        step={10}\r\n        valueLabelDisplay=\"auto\"\r\n        marks={[\r\n          { value: 10, label: 10 },\r\n          { value: 250, label: 250 },\r\n          { value: 500, label: 500 },\r\n          { value: 750, label: 750 },\r\n          { value: 1000, label: 1000 },\r\n        ]}\r\n      />\r\n    ),\r\n  },\r\n  useDPR: {\r\n    k: 'useDPR',\r\n    // https://stackoverflow.com/a/12830454/9184658\r\n    // // There is a downside that values like 1.5 will give \"1.50\" as the output. A fix suggested by @minitech:\r\n    // var numb = 1.5;\r\n    // numb = +numb.toFixed(2);\r\n    // // Note the plus sign that drops any \"extra\" zeroes at the end.\r\n    // // It changes the result (which is a string) into a number again (think \"0 + foo\"),\r\n    // // which means that it uses only as many digits as necessary.\r\n    label: `Use pixel ratio (${+window.devicePixelRatio.toFixed(3)})`,\r\n    checked: settings.useDPR,\r\n    control: <Switch />,\r\n  },\r\n  useAA: {\r\n    k: 'useAA',\r\n    label: `Anti-aliasing (slow)`,\r\n    checked: settings.useAA,\r\n    control: <Switch />,\r\n  },\r\n  showFPS: {\r\n    k: 'showFPS',\r\n    label: `Show FPS`,\r\n    checked: settings.showFPS,\r\n    control: <Switch />,\r\n  },\r\n});\r\n\r\nexport const getSettingsWidgetsGrouping = (\r\n  settingsWidgets: settingsWidgetType,\r\n): Array<settingsGroupType> => [\r\n  {\r\n    name: 'Interface',\r\n    widgets: [\r\n      settingsWidgets.showMinimap,\r\n      settingsWidgets.showCrosshair,\r\n      settingsWidgets.showCoordinates,\r\n    ],\r\n  },\r\n  {\r\n    name: 'Graphics',\r\n    widgets: [\r\n      settingsWidgets.maxI,\r\n      settingsWidgets.useDPR,\r\n      settingsWidgets.useAA,\r\n      settingsWidgets.showFPS,\r\n    ],\r\n  },\r\n];\r\n\r\nexport default defaultSettings;\r\n","import React, { createContext, ReactNode, useState } from 'react';\r\nimport { SettingsContextType, settingsDefinitionsType } from '../../common/settings';\r\nimport defaultSettings, { settingsWidgets } from './SettingsDefinitions';\r\n\r\nexport const SettingsContext = createContext<SettingsContextType>({\r\n  // provide the context with the default values\r\n  settings: defaultSettings,\r\n  // can't set state until it's initialized\r\n  setSettings: () => {\r\n    return;\r\n  },\r\n  settingsWidgets: settingsWidgets(defaultSettings),\r\n});\r\n\r\n// export const useSettings = (): SettingsContextType => useContext(SettingsContext);\r\n\r\nexport const SettingsProvider = ({ children }: { children: ReactNode }): JSX.Element => {\r\n  // https://reactjs.org/docs/context.html#updating-context-from-a-nested-component\r\n  // no grouping: all settings are accessible\r\n  const [settings, setSettings] = useState<settingsDefinitionsType>(defaultSettings);\r\n\r\n  return (\r\n    <SettingsContext.Provider\r\n      value={{\r\n        settings,\r\n        setSettings,\r\n        settingsWidgets: settingsWidgets(settings),\r\n      }}\r\n    >\r\n      {children}\r\n    </SettingsContext.Provider>\r\n  );\r\n};\r\n\r\nexport default SettingsProvider;\r\n","import { colors, createMuiTheme } from '@material-ui/core';\r\n\r\nconst theme = createMuiTheme({\r\n  props: {\r\n    // Name of the component ⚛️\r\n    MuiSwitch: {\r\n      // The default props to change\r\n      color: 'primary', // x, on the whole application 💣!\r\n    },\r\n    MuiButton: {\r\n      variant: 'outlined',\r\n    },\r\n  },\r\n  palette: {\r\n    primary: {\r\n      main: colors.blue[700],\r\n    },\r\n    secondary: {\r\n      main: colors.red[700],\r\n    },\r\n    info: {\r\n      main: colors.blue[700],\r\n    },\r\n  },\r\n});\r\n\r\nexport const simpleBoxShadow = '0px 2px 10px 1px rgba(0, 0, 0, 0.4)';\r\n\r\nexport default theme;\r\n","export const fullVertexShader = `\r\nattribute vec4 position;\r\n\r\nvoid main() {\r\n  gl_Position = position;\r\n}\r\n`;\r\n\r\n// This \"position\" array specifies the vertex positions of the element\r\n// to be displayed by the vertex shader. It represents two triangles,\r\n// each filling half of the screen diagonally, and together filling the\r\n// full canvas space to allow the fragment shader to act on the full canvas.\r\nexport const fullscreenVertexArray = {\r\n  position: {\r\n    numComponents: 3,\r\n    data: [-1, -1, 0, 1, -1, 0, -1, 1, 0, -1, 1, 0, 1, -1, 0, 1, 1, 0],\r\n  },\r\n};\r\n","import React, { useCallback, useEffect, useRef } from 'react';\nimport { animated } from 'react-spring';\nimport * as twgl from 'twgl.js';\nimport { vScale } from 'vec-la-fp';\nimport { WebGLCanvasProps } from '../../common/render';\nimport { screenScaleMultiplier } from '../../common/values';\nimport { fullscreenVertexArray, fullVertexShader } from '../../shaders/fullVertexShader';\n\n// https://mariusschulz.com/blog/typing-destructured-object-parameters-in-typescript\n// https://stackoverflow.com/a/50294843/9184658\nconst WebGLCanvas = React.forwardRef<\n  HTMLCanvasElement,\n  WebGLCanvasProps & { mini?: boolean }\n>((props, refAny) => {\n  // const { mini = false, ...rest } = props;\n  // props:\n  // id\n  // fragShader\n  // -- uniforms:\n  //    u_zoom\n  //    u_pos\n  //    u_maxI\n  // ref\n  // glRef\n\n  const canvasRef = refAny as React.MutableRefObject<HTMLCanvasElement>;\n\n  const gl = useRef<WebGLRenderingContext | null>();\n  const renderRequestRef = useRef<number>();\n  const bufferInfo = useRef<twgl.BufferInfo>();\n  const programInfo = useRef<twgl.ProgramInfo>();\n\n  const u = props.u;\n  const setFps = props.fps;\n\n  // have a zoom callback\n  const zoom = useCallback(() => (props.mini ? 1.0 : props.u.zoom.getValue()), [\n    props.mini,\n    props.u.zoom,\n  ]);\n  const currZoom = useRef(zoom());\n\n  const dpr = props.useDPR ? window.devicePixelRatio : 1;\n\n  // initial context-getter\n  useEffect(() => {\n    // console.log(gl);\n    // console.log(gl.current);\n    gl.current = canvasRef.current.getContext('webgl');\n  }, [canvasRef]);\n\n  useEffect(() => {\n    // console.log(`got canvas context: ${gl.current}`);\n    bufferInfo.current = twgl.createBufferInfoFromArrays(\n      gl.current as WebGLRenderingContext,\n      fullscreenVertexArray,\n    );\n  }, [gl]);\n\n  useEffect(() => {\n    currZoom.current = props.u.zoom.getValue();\n  }, [props.u]);\n\n  // re-compile program if shader changes\n  useEffect(() => {\n    programInfo.current = twgl.createProgramInfo(gl.current as WebGLRenderingContext, [\n      fullVertexShader,\n      props.fragShader,\n    ]);\n  }, [gl, props.fragShader]);\n\n  const then = useRef(0);\n  const frames = useRef(0);\n  const elapsedTime = useRef(0);\n  // fps update interval\n  const interval = 1000;\n  // const mult = 1000 / interval;\n  // the main render function for WebGL\n  const render = useCallback(\n    (time) => {\n      twgl.resizeCanvasToDisplaySize(canvasRef.current, dpr);\n      (gl.current as WebGLRenderingContext).viewport(\n        0,\n        0,\n        canvasRef.current.width,\n        canvasRef.current.height,\n      );\n\n      const uniforms = {\n        resolution: [canvasRef.current.width, canvasRef.current.height],\n        u_zoom: zoom(),\n        u_c: u.c === undefined ? 0 : vScale(screenScaleMultiplier, u.c.getValue()),\n        u_xy: vScale(screenScaleMultiplier, u.xy.getValue()),\n        u_maxI: u.maxI,\n        u_theta: u.theta.getValue(),\n      };\n\n      (gl.current as WebGLRenderingContext).useProgram(\n        (programInfo.current as twgl.ProgramInfo).program,\n      );\n      twgl.setBuffersAndAttributes(\n        gl.current as WebGLRenderingContext,\n        programInfo.current as twgl.ProgramInfo,\n        bufferInfo.current as twgl.BufferInfo,\n      );\n      twgl.setUniforms(programInfo.current as twgl.ProgramInfo, uniforms);\n      twgl.drawBufferInfo(\n        gl.current as WebGLRenderingContext,\n        bufferInfo.current as twgl.BufferInfo,\n      );\n\n      // calculate fps\n      if (setFps !== undefined) {\n        frames.current++;\n        elapsedTime.current += time - then.current;\n        then.current = time;\n\n        // console.log(elapsedTime.current);\n        if (elapsedTime.current >= interval) {\n          //multiply with (1000 / elapsed) for accuracy\n          setFps((frames.current * (interval / elapsedTime.current)).toFixed(1));\n          frames.current = 0;\n          elapsedTime.current -= interval;\n\n          // document.getElementById('test').innerHTML = fps;\n        }\n        // time *= 0.001;                      // convert to seconds\n        // const deltaTime = time - then.current; // compute time since last frame\n        // then.current = time;                // remember time for next frame\n        // const fs = 1 / deltaTime;           // compute frames per second\n        // console.log(fs);\n        // (fs.toFixed(1));  // update fps display\n      }\n\n      // The 'state' will always be the initial value here\n      renderRequestRef.current = requestAnimationFrame(render);\n    },\n    [gl, u, zoom, dpr, setFps, interval, canvasRef],\n  );\n\n  //\n  useEffect(() => {\n    renderRequestRef.current = requestAnimationFrame(render);\n    return () => cancelAnimationFrame(renderRequestRef.current as number);\n  }, [render]);\n\n  return (\n    <animated.canvas\n      className=\"renderer\"\n      ref={refAny}\n      style={{\n        // cursor should show whether the viewer is being grabbed\n        cursor: props.dragging ? 'grabbing' : 'grab',\n        // adding style allows direct style override\n        ...props.style,\n      }}\n    />\n  );\n});\n\nWebGLCanvas.displayName = 'WebGLCanvas';\n\nexport default WebGLCanvas;\n","import { ButtonBase, Grow } from '@material-ui/core';\r\nimport React from 'react';\r\nimport { MinimapViewerProps } from '../../common/render';\r\nimport { simpleBoxShadow } from '../../theme/theme';\r\nimport WebGLCanvas from './WebGLCanvas';\r\n\r\nconst miniSize = 100;\r\n// TODO: make square with rounded corners?\r\nconst borderRadius = 8;\r\n\r\nconst MinimapViewer = (props: MinimapViewerProps): JSX.Element => {\r\n  const { canvasRef, onClick, show, ...rest } = props;\r\n  return (\r\n    <Grow in={show}>\r\n      <ButtonBase\r\n        style={{\r\n          position: 'absolute',\r\n          // make minimap stick out through backdrop\r\n          zIndex: 1300,\r\n          margin: '0.5rem',\r\n          left: 0,\r\n          bottom: 0,\r\n          // cursor: 'pointer',\r\n          height: miniSize,\r\n          width: miniSize,\r\n          borderRadius: borderRadius,\r\n          // border: \"1px solid #000\",\r\n          boxShadow: simpleBoxShadow,\r\n          overflow: 'hidden',\r\n          // opacity: zoom.interpolate((z) => _.clamp(z - 1, 0, 1)),\r\n          // display: zoom.interpolate((z) => (_.clamp(z - 1, 0, 1) === 0 ? 'none' : 'block')),\r\n        }}\r\n        onClick={onClick}\r\n      >\r\n        {/* <animated.div */}\r\n        {/* // \r\n      // > */}\r\n        <WebGLCanvas\r\n          mini={true}\r\n          ref={canvasRef}\r\n          {...rest}\r\n          // setting border radius here stops the canvas clickable area from overflowing\r\n          // outside the div circle, which would make the clickable area a rectangle\r\n          style={{\r\n            borderRadius: borderRadius,\r\n            // cursor should be \"pointer\" (looks clickable) if this is a minimap,\r\n            cursor: 'pointer',\r\n          }}\r\n        />\r\n        {/* </animated.div> */}\r\n      </ButtonBase>\r\n    </Grow>\r\n  );\r\n};\r\nexport default MinimapViewer;\r\n","import React, { useRef, useState } from 'react';\nimport { useGesture } from 'react-use-gesture';\nimport { JuliaRendererProps } from '../../common/render';\nimport { MandelbrotMapsWebGLUniforms } from '../../common/types';\nimport { genericTouchBind } from '../../common/utils';\nimport { screenScaleMultiplier } from '../../common/values';\nimport newSmoothJuliaShader from '../../shaders/newSmoothJuliaShader';\nimport { SettingsContext } from '../settings/SettingsContext';\nimport MinimapViewer from './MinimapViewer';\nimport WebGLCanvas from './WebGLCanvas';\nexport default function JuliaRenderer(props: JuliaRendererProps): JSX.Element {\n  // variables to hold canvas and webgl information\n  const canvasRef = useRef<HTMLCanvasElement>(null);\n  const miniCanvasRef = useRef<HTMLCanvasElement>(null);\n\n  const [{ xy }] = props.controls.xyCtrl;\n  const [{ z }, setControlZoom] = props.controls.zoomCtrl;\n  const [{ theta }] = props.controls.rotCtrl;\n  const maxI = props.maxI; // -> global\n  const AA = props.useAA ? 2 : 1;\n\n  const fragShader = newSmoothJuliaShader({\n    maxI: maxI,\n    AA: AA,\n  });\n\n  const miniFragShader = newSmoothJuliaShader({\n    maxI: maxI,\n    AA: 2,\n  });\n\n  const u: MandelbrotMapsWebGLUniforms = {\n    zoom: z,\n    xy: xy,\n    c: props.c,\n    theta: theta,\n    maxI: maxI,\n  };\n\n  const [dragging, setDragging] = useState(false);\n\n  const gtb = genericTouchBind({\n    domTarget: canvasRef,\n    controls: props.controls,\n    screenScaleMultiplier:\n      screenScaleMultiplier / (props.useDPR ? window.devicePixelRatio : 1),\n    setDragging: setDragging,\n  });\n\n  useGesture(gtb.handlers, gtb.config);\n\n  return (\n    <SettingsContext.Consumer>\n      {({ settings }) => (\n        <div\n          className=\"renderer\"\n          style={{\n            position: 'relative',\n          }}\n        >\n          <WebGLCanvas\n            id=\"julia\"\n            fragShader={fragShader}\n            useDPR={props.useDPR}\n            u={u}\n            ref={canvasRef}\n            dragging={dragging}\n          />\n          <MinimapViewer\n            fragShader={miniFragShader}\n            useDPR={settings.useDPR}\n            u={u}\n            canvasRef={miniCanvasRef}\n            onClick={() => setControlZoom({ z: 1 })}\n            show={settings.showMinimap}\n          />\n        </div>\n      )}\n    </SettingsContext.Consumer>\n  );\n}\n","// TODO set max iterations as parameter, crosshair as parameter\r\n\r\nconst makeCrosshair = (stroke: number, radius: number) => ({\r\n  stroke,\r\n  radius,\r\n});\r\n\r\nexport const standardCrosshair = makeCrosshair(2, 100);\r\nexport const miniCrosshair = makeCrosshair(1, 30);\r\n\r\nexport interface MandelbrotShaderParams {\r\n  maxI: number;\r\n  /** Radial boundary */\r\n  B: number;\r\n  /** Anti-aliasing samples */\r\n  AA: number;\r\n}\r\n\r\nconst newSmoothMandelbrotShader = (\r\n  { maxI = 300, AA = 1, B = 64 },\r\n  showCrosshair = true,\r\n  crosshairShape = {\r\n    stroke: 2,\r\n    radius: 100,\r\n  },\r\n): string => {\r\n  return `\r\n// Adapted by Joao Maio/2019, based on work by inigo quilez - iq/2013\r\n// License Creative Commons Attribution-NonCommercial-ShareAlike 3.0 Unported License.\r\n\r\n// See here for more information on smooth iteration count:\r\n// http://iquilezles.org/www/articles/mset_smooth/mset_smooth.htm\r\n\r\n#define false 0\r\n#define true 1\r\n\r\n// render parameters\r\n#define AA ${AA}\r\n#define MAXI ${maxI}\r\n#define B ${B.toFixed(1)}\r\n\r\n// crosshair parameters\r\n#define show_crosshair ${showCrosshair}\r\n#define cross_stroke ${crosshairShape.stroke.toFixed(1)}\r\n#define cross_radius ${crosshairShape.radius.toFixed(1)}\r\n\r\n// set high float precision (lower than this may break colours on mobile)\r\nprecision highp float;\r\n\r\n// need to know the resolution of the canvas\r\nuniform vec2 resolution;\r\n\r\n// properties should be passed as uniforms\r\nuniform int   u_maxI;  \r\nuniform vec2  u_xy;\r\nuniform float u_zoom;\r\nuniform float u_theta;\r\n\r\nbool crosshair( float x, float y ) {\r\n  float abs_x = abs(2.0*x - resolution.x);\r\n  float abs_y = abs(2.0*y - resolution.y);\r\n\r\n  return \r\n  // crosshair in centre of screen\r\n  (abs_x <= cross_stroke || abs_y <= cross_stroke) &&\r\n  // crosshair size / \"radius\"\r\n  (abs_x <= cross_radius && abs_y <= cross_radius);\r\n}\r\n\r\nfloat mandelbrot( in vec2 c ) {\r\n    {\r\n        float c2 = dot(c, c);\r\n        // skip computation inside M1 - http://iquilezles.org/www/articles/mset_1bulb/mset1bulb.htm\r\n        if( 256.0*c2*c2 - 96.0*c2 + 32.0*c.x - 3.0 < 0.0 ) return 0.0;\r\n        // skip computation inside M2 - http://iquilezles.org/www/articles/mset_2bulb/mset2bulb.htm\r\n        if( 16.0*(c2+2.0*c.x+1.0) - 1.0 < 0.0 ) return 0.0;\r\n    }\r\n\r\n    float l = 0.0;\r\n    vec2 z  = vec2(0.0);\r\n    for( int i=0; i<MAXI; i++ )\r\n    {\r\n        z = vec2( z.x*z.x - z.y*z.y, 2.0*z.x*z.y ) + c;\r\n        if( dot(z,z)>(B*B) ) break;\r\n        l += 1.0;\r\n    }\r\n\r\n    // maxed out iterations\r\n    if( l>float(MAXI)-1.0 ) return 0.0;\r\n    \r\n    // optimized smooth interation count\r\n    l = l - log2(log2(dot(z,z))) + 4.0;\r\n\r\n    return l;\r\n}\r\n\r\nvoid main() {    \r\n    // set the initial colour to black\r\n    vec3 col = vec3(0.0);\r\n\r\n    // anti-aliasing\r\n    #if AA>1\r\n    for( int m=0; m<AA; m++ )\r\n    for( int n=0; n<AA; n++ )\r\n    {\r\n        // vec2 p = (-iResolution.xy + 2.0*(fragCoord.xy+vec2(float(m),float(n))/float(AA)))/iResolution.y;\r\n        vec2 p = (2.0*(gl_FragCoord.xy + vec2(float(m), float(n)) / float(AA) ) - resolution.xy)/resolution.y;\r\n        float w = float(AA*m+n);\r\n    #else    \r\n        // adjust pixels to range from [-1, 1]\r\n        vec2 p = (2.0*gl_FragCoord.xy - resolution.xy)/resolution.y;\r\n    #endif\r\n\r\n    float sinT = sin(u_theta);\r\n    float cosT = cos(u_theta);\r\n\r\n    vec2 xy = vec2( p.x*cosT - p.y*sinT, p.x*sinT + p.y*cosT );\r\n    // c is based on offset and grid position, z_0 = 0\r\n    vec2 c = u_xy + xy/u_zoom;\r\n    \r\n    float l = mandelbrot(c);\r\n    col += 0.5 + 0.5*cos( 3.0 + l*0.15 + vec3(0.0,0.6,1.0));\r\n\r\n    // antialiasing\r\n    #if AA>1\r\n    }\r\n    col /= float(AA*AA);\r\n    #endif\r\n\r\n    #if show_crosshair\r\n    if (crosshair(gl_FragCoord.x, gl_FragCoord.y)) {\r\n        col = 1. - col;\r\n    }\r\n    #endif\r\n\r\n    // Output to screen\r\n    gl_FragColor = vec4( col, 1.0 );\r\n}\r\n    `;\r\n};\r\n\r\nexport default newSmoothMandelbrotShader;\r\n","import { Card, Grow } from '@material-ui/core';\r\nimport React from 'react';\r\nimport { animated } from 'react-spring';\r\nimport { FPSCardProps } from '../../common/info';\r\n\r\nconst FPSCard = (props: FPSCardProps): JSX.Element => (\r\n  <Grow in={props.show}>\r\n    <Card\r\n      style={{\r\n        position: 'fixed',\r\n        top: 0,\r\n        left: 0,\r\n        padding: '4px 12px',\r\n        margin: 6,\r\n        fontFamily: 'monospace',\r\n        borderRadius: 100,\r\n        fontSize: '1.8rem',\r\n        zIndex: 1300,\r\n        userSelect: 'none',\r\n      }}\r\n    >\r\n      <animated.div>{props.fps}</animated.div>\r\n    </Card>\r\n  </Grow>\r\n);\r\n\r\nexport default FPSCard;\r\n","import React, { useRef, useState } from 'react';\nimport { useGesture } from 'react-use-gesture';\nimport { MandelbrotRendererProps } from '../../common/render';\nimport { genericTouchBind } from '../../common/utils';\nimport { screenScaleMultiplier } from '../../common/values';\nimport newSmoothMandelbrotShader, {\n  miniCrosshair,\n  standardCrosshair,\n} from '../../shaders/newSmoothMandelbrotShader';\nimport FPSCard from '../info/FPSCard';\nimport { SettingsContext } from '../settings/SettingsContext';\nimport MinimapViewer from './MinimapViewer';\nimport WebGLCanvas from './WebGLCanvas';\n\nexport default function MandelbrotRenderer(props: MandelbrotRendererProps): JSX.Element {\n  // variables to hold canvas and webgl information\n  const canvasRef = useRef<HTMLCanvasElement>(null);\n  const miniCanvasRef = useRef<HTMLCanvasElement>(null);\n\n  // const gl = useRef<WebGLRenderingContext>(null);\n  // const miniGl = useRef<WebGLRenderingContext>(null);\n\n  // this multiplier subdivides the screen space into smaller increments\n  // to allow for velocity calculations to not immediately decay, due to the\n  // otherwise small scale that is being mapped to the screen.\n  // const screenScaleMultiplier = props.screenScaleMultiplier; // -> global\n\n  // temporary bounds to prevent excessive panning\n  // eslint-disable-next-line\n  const radialBound = 1;\n  // const relativeRadialBound = radialBound;// / -screenScaleMultiplier;\n\n  // read incoming props\n  const [{ xy }] = props.controls.xyCtrl;\n  // const [{ theta, last_pointer_angle }, setControlRot] = props.controls.rot;\n  const [{ z }, setControlZoom] = props.controls.zoomCtrl;\n  const [{ theta }] = props.controls.rotCtrl;\n  const maxI = props.maxI; // -> global\n  const AA = props.useAA ? 2 : 1; // -> global\n\n  const fragShader = newSmoothMandelbrotShader(\n    {\n      maxI: maxI,\n      AA: AA,\n    },\n    props.showCrosshair,\n    standardCrosshair,\n  );\n  const miniFragShader = newSmoothMandelbrotShader(\n    {\n      maxI: maxI,\n      AA: 2,\n    },\n    props.showCrosshair,\n    miniCrosshair,\n  );\n\n  const [dragging, setDragging] = useState(false);\n\n  const gtb = genericTouchBind({\n    domTarget: canvasRef,\n    controls: props.controls,\n    screenScaleMultiplier:\n      screenScaleMultiplier / (props.useDPR ? window.devicePixelRatio : 1), // -> global\n    // gl: gl,\n    setDragging: setDragging,\n  });\n\n  // https://use-gesture.netlify.app/docs/changelog/#breaking\n  // When adding events directly to the dom element using `domTarget`\n  // you no longer need to clean the effect yourself.\n  // const touchBind =\n  useGesture(gtb.handlers, gtb.config);\n\n  // useEffect(() => {\n  //   touchBind();\n  // }, [touchBind]);\n\n  const [fps, setFps] = useState('');\n\n  return (\n    <SettingsContext.Consumer>\n      {({ settings }) => (\n        <div\n          className=\"renderer\"\n          style={{\n            position: 'relative',\n          }}\n        >\n          <FPSCard fps={fps} show={settings.showFPS} />\n\n          <WebGLCanvas\n            id=\"mandelbrot\"\n            fragShader={fragShader}\n            useDPR={settings.useDPR}\n            // touchBind={touchBind}\n            u={{\n              zoom: z,\n              xy: xy,\n              theta: theta,\n              maxI: maxI,\n              // screenScaleMultiplier: screenScaleMultiplier,\n            }}\n            ref={canvasRef}\n            // glRef={gl}\n            fps={setFps}\n            dragging={dragging}\n          />\n\n          <MinimapViewer\n            fragShader={miniFragShader}\n            useDPR={settings.useDPR}\n            u={{\n              zoom: z,\n              xy: xy,\n              theta: theta,\n              maxI: maxI,\n              // screenScaleMultiplier: screenScaleMultiplier,\n            }}\n            canvasRef={miniCanvasRef}\n            // glRef={miniGl}\n            show={settings.showMinimap}\n            onClick={() => setControlZoom({ z: 1 })}\n          />\n        </div>\n      )}\n    </SettingsContext.Consumer>\n  );\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","// https://felixgerschau.com/create-a-pwa-update-notification-with-create-react-app/\r\n\r\nimport { Button, Snackbar } from '@material-ui/core';\r\nimport Alert from '@material-ui/lab/Alert';\r\nimport React, { FC, useEffect } from 'react';\r\nimport * as serviceWorker from '../serviceWorker';\r\n\r\nconst ServiceWorkerWrapper: FC = () => {\r\n  const [showReload, setShowReload] = React.useState(false);\r\n  const [waitingWorker, setWaitingWorker] = React.useState<ServiceWorker | null>(null);\r\n\r\n  const onSWUpdate = (registration: ServiceWorkerRegistration) => {\r\n    console.log('Out of date version detected! Triggering snackbar.');\r\n    setShowReload(true);\r\n    setWaitingWorker(registration.waiting);\r\n  };\r\n\r\n  useEffect(() => {\r\n    console.log('Registering Service Worker for update detection...');\r\n    serviceWorker.register({ onUpdate: onSWUpdate });\r\n  }, []);\r\n\r\n  const reloadPage = () => {\r\n    // optional chaining was not working here...\r\n    // https://www.typescriptlang.org/docs/handbook/release-notes/typescript-3-7.html\r\n    waitingWorker && waitingWorker.postMessage({ type: 'SKIP_WAITING' });\r\n    setShowReload(false);\r\n    // reload(b: Boolean) is deprecated\r\n    window.location.reload();\r\n  };\r\n\r\n  return (\r\n    <Snackbar open={showReload} anchorOrigin={{ vertical: 'top', horizontal: 'center' }}>\r\n      <Alert\r\n        severity=\"info\"\r\n        action={\r\n          <Button color=\"inherit\" variant=\"outlined\" size=\"small\" onClick={reloadPage}>\r\n            Update\r\n          </Button>\r\n        }\r\n      >\r\n        A new version is available!\r\n      </Alert>\r\n    </Snackbar>\r\n  );\r\n};\r\n\r\nexport default ServiceWorkerWrapper;\r\n","import {\r\n  Backdrop,\r\n  Divider,\r\n  Fab,\r\n  FormControlLabel,\r\n  FormGroup,\r\n  Grid,\r\n  makeStyles,\r\n  Popover,\r\n  Typography,\r\n} from '@material-ui/core';\r\nimport Button from '@material-ui/core/Button';\r\nimport InfoIcon from '@material-ui/icons/Info';\r\nimport MyLocationIcon from '@material-ui/icons/MyLocation';\r\nimport SettingsIcon from '@material-ui/icons/Settings';\r\nimport React, { useState } from 'react';\r\nimport { SettingsMenuProps } from '../../common/settings';\r\nimport { SettingsContext } from './SettingsContext';\r\nimport { getSettingsWidgetsGrouping } from './SettingsDefinitions';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    position: 'absolute',\r\n    bottom: theme.spacing(2),\r\n    right: theme.spacing(2),\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    zIndex: 2,\r\n  },\r\n  button: {\r\n    padding: '6px 12px',\r\n    marginTop: 10,\r\n  },\r\n  sliderControl: {\r\n    width: 30,\r\n  },\r\n}));\r\n\r\nconst GroupDivider = () => <Divider style={{ marginTop: 10, marginBottom: 4 }} />;\r\nconst GroupTitle = (props: { title: string }) => (\r\n  <Typography variant=\"overline\" style={{ fontSize: 14, marginBottom: 4 }}>\r\n    {props.title}\r\n  </Typography>\r\n);\r\n\r\nexport default function SettingsMenu(props: SettingsMenuProps): JSX.Element {\r\n  const classes = useStyles();\r\n\r\n  const [anchorEl, setAnchorEl] = useState<EventTarget & HTMLButtonElement>();\r\n\r\n  // interface BottomButtonProps extends {\r\n  //   icon: JSX.Element;\r\n  //   text: string;\r\n  //   color: 'inherit' | 'default' | 'primary' | 'secondary' | undefined;\r\n  //   onClick: () => void;\r\n  // }\r\n  // const BottomButton = (props: BottomButtonProps) => (\r\n  //   <Button\r\n  //     variant=\"outlined\"\r\n  //     color={props.color}\r\n  //     aria-controls={props.text.toLowerCase()}\r\n  //     onClick={() => props.onClick()}\r\n  //     className={classes.button}\r\n  //     startIcon={<MyLocationIcon />}\r\n  //   >\r\n  //     Reset\r\n  //   </Button>\r\n  // );\r\n\r\n  const ResetButton = () => (\r\n    <Button\r\n      startIcon={<MyLocationIcon />}\r\n      color=\"secondary\"\r\n      aria-controls=\"reset\"\r\n      onClick={() => {\r\n        props.reset();\r\n      }}\r\n      className={classes.button}\r\n    >\r\n      Reset\r\n    </Button>\r\n  );\r\n  const AboutButton = () => (\r\n    <Button\r\n      startIcon={<InfoIcon />}\r\n      color=\"primary\"\r\n      aria-controls=\"about\"\r\n      onClick={() => {\r\n        props.toggleInfo();\r\n        setAnchorEl(undefined);\r\n      }}\r\n      className={classes.button}\r\n    >\r\n      About\r\n    </Button>\r\n  );\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Fab\r\n        aria-controls=\"menu\"\r\n        aria-haspopup=\"true\"\r\n        aria-label=\"settings\"\r\n        size=\"small\"\r\n        onClick={(e) => setAnchorEl(e.currentTarget)}\r\n        // className={classes.button}\r\n      >\r\n        <SettingsIcon />\r\n      </Fab>\r\n      <Backdrop open={Boolean(anchorEl)}>\r\n        <Popover\r\n          id=\"menu\"\r\n          anchorEl={anchorEl}\r\n          keepMounted\r\n          open={Boolean(anchorEl)}\r\n          onClose={() => setAnchorEl(undefined)}\r\n          anchorOrigin={{\r\n            horizontal: 'right',\r\n            vertical: 'bottom',\r\n          }}\r\n          transformOrigin={{\r\n            vertical: 'bottom',\r\n            horizontal: 'right',\r\n          }}\r\n        >\r\n          <Grid\r\n            container\r\n            direction=\"column\"\r\n            style={{\r\n              paddingLeft: '1.5em',\r\n              paddingRight: '1.5em',\r\n              paddingTop: '1em',\r\n              paddingBottom: '1em',\r\n            }}\r\n          >\r\n            <Grid item container alignItems=\"center\" justify=\"space-around\">\r\n              <Grid item>\r\n                <Typography variant=\"h1\" style={{ fontSize: 20, padding: 10 }}>\r\n                  Configuration\r\n                </Typography>\r\n              </Grid>\r\n              {/* <Divider orientation=\"vertical\" flexItem /> */}\r\n              {/* <Grid item>\r\n                <IconButton\r\n                  aria-label=\"info\"\r\n                  size=\"medium\"\r\n                  onClick={() => {\r\n                    // open info panel\r\n                    props.toggleInfo();\r\n                    // close popover\r\n                    setAnchorEl(undefined);\r\n                  }}\r\n                >\r\n                  <InfoIcon fontSize=\"inherit\" />\r\n                </IconButton>\r\n              </Grid> */}\r\n            </Grid>\r\n            <SettingsContext.Consumer>\r\n              {({ setSettings, settingsWidgets }) =>\r\n                getSettingsWidgetsGrouping(settingsWidgets).map((g) => (\r\n                  <Grid item key={g.name}>\r\n                    <GroupDivider />\r\n                    <GroupTitle title={g.name} />\r\n                    <FormGroup>\r\n                      {g.widgets.map((widget) => (\r\n                        <FormControlLabel\r\n                          key={`${widget.label}-control`}\r\n                          style={{ userSelect: 'none' }}\r\n                          {...widget}\r\n                          onChange={(e, val) => {\r\n                            console.log(`${widget.k} -> ${val}`);\r\n                            setSettings((prevState) => ({\r\n                              ...prevState,\r\n                              [widget.k]: val,\r\n                            }));\r\n                          }}\r\n                        />\r\n                      ))}\r\n                    </FormGroup>\r\n                  </Grid>\r\n                ))\r\n              }\r\n            </SettingsContext.Consumer>\r\n\r\n            <GroupDivider />\r\n\r\n            <Grid container direction=\"row\" justify=\"space-between\" alignItems=\"stretch\">\r\n              <Grid item>\r\n                <ResetButton />\r\n              </Grid>\r\n              <Grid item style={{ width: '0.5rem' }} />\r\n              <Grid item>\r\n                <AboutButton />\r\n              </Grid>\r\n            </Grid>\r\n\r\n            {/* <Button\r\n              aria-controls=\"reset\"\r\n              onClick={() => props.reset()}\r\n              className={classes.button}\r\n              startIcon={<MyLocationIcon />}\r\n            >\r\n              Reset\r\n            </Button> */}\r\n            {/* <Grid item xs>\r\n                <Button\r\n                  aria-controls=\"reset\"\r\n                  onClick={() => props.reset()}\r\n                  className={classes.button}\r\n                  startIcon={<MyLocationIcon />}\r\n                >\r\n                  Reset\r\n                </Button>\r\n              </Grid>\r\n              <Grid item xs>\r\n                <Button\r\n                  aria-label=\"info\"\r\n                  size=\"medium\"\r\n                  onClick={() => {\r\n                    // open info panel\r\n                    props.toggleInfo();\r\n                    // close popover\r\n                    setAnchorEl(undefined);\r\n                  }}\r\n                  className={classes.button}\r\n                  startIcon={<InfoIcon />}\r\n                >\r\n                  About\r\n                </Button>\r\n              </Grid> */}\r\n          </Grid>\r\n        </Popover>\r\n      </Backdrop>\r\n    </div>\r\n  );\r\n}\r\n","import { Grid, ThemeProvider } from '@material-ui/core';\nimport React, { useState } from 'react';\nimport { OpaqueInterpolation, useSpring } from 'react-spring';\nimport { vScale } from 'vec-la-fp';\nimport './App.css';\nimport {\n  ViewerRotationControl,\n  ViewerXYControl,\n  ViewerZoomControl,\n  ZoomType,\n} from './common/types';\nimport { useWindowSize, warpToPoint } from './common/utils';\nimport {\n  screenScaleMultiplier,\n  springsConfigs,\n  startPos,\n  startTheta,\n  startZoom,\n  viewerOrigin,\n} from './common/values';\nimport ChangeCoordinatesCard from './components/info/ChangeCoordinatesCard';\nimport CoordinatesCard from './components/info/CoordinatesCard';\nimport InfoDialog from './components/info/InfoDialog';\nimport JuliaRenderer from './components/render/JuliaRenderer';\n// import 'typeface-roboto';\nimport MandelbrotRenderer from './components/render/MandelbrotRenderer';\nimport ServiceWorkerWrapper from './components/ServiceWorkerWrapper';\nimport SettingsProvider, { SettingsContext } from './components/settings/SettingsContext';\nimport SettingsMenu from './components/settings/SettingsMenu';\nimport theme from './theme/theme';\n\nfunction App(): JSX.Element {\n  const size = useWindowSize();\n\n  // this multiplier subdivides the screen space into smaller increments\n  // to allow for velocity calculations to not immediately decay, due to the\n  // otherwise small scale that is being mapped to the screen.\n\n  const mandelbrotControls = {\n    xyCtrl: useSpring<ViewerXYControl>(() => ({\n      xy: vScale(1 / screenScaleMultiplier, startPos),\n      config: springsConfigs.default.xy,\n    })),\n\n    zoomCtrl: useSpring<ViewerZoomControl>(() => ({\n      z: startZoom,\n      minZoom: 0.5,\n      maxZoom: 100000,\n      config: springsConfigs.default.zoom,\n    })),\n\n    rotCtrl: useSpring<ViewerRotationControl>(() => ({\n      theta: startTheta, // should this be rad or deg? rad\n      config: springsConfigs.default.rot,\n    })),\n  };\n\n  const juliaControls = {\n    xyCtrl: useSpring<ViewerXYControl>(() => ({\n      xy: [0, 0] as [number, number],\n      config: springsConfigs.default.xy,\n    })),\n\n    zoomCtrl: useSpring<ViewerZoomControl>(() => ({\n      z: 0.5 as number,\n      minZoom: 0.5,\n      maxZoom: 2000,\n      config: springsConfigs.default.zoom,\n    })),\n\n    rotCtrl: useSpring<ViewerRotationControl>(() => ({\n      theta: 0, // should this be rad or deg? rad\n      config: springsConfigs.default.rot,\n    })),\n  };\n\n  const reset = () => {\n    warpToPoint(mandelbrotControls, viewerOrigin);\n    warpToPoint(juliaControls, viewerOrigin);\n  };\n\n  const [showInfo, setShowInfo] = useState(false);\n\n  const toggleInfo = () => setShowInfo(!showInfo);\n\n  // const { settings } = useSettings();\n\n  return (\n    <ThemeProvider theme={theme}>\n      <ServiceWorkerWrapper />\n      <SettingsProvider>\n        <Grid container>\n          <SettingsContext.Consumer>\n            {({ settings }) => (\n              <Grid\n                item\n                container\n                direction={\n                  (size.width || 1) < (size.height || 0) ? 'column-reverse' : 'row'\n                }\n                justify=\"center\"\n                className=\"fullSize\"\n                style={{\n                  position: 'absolute',\n                }}\n              >\n                <div\n                  style={{\n                    position: 'absolute',\n                    right: 0,\n                    top: 0,\n                    margin: 20,\n                    width: 'auto',\n                  }}\n                >\n                  <CoordinatesCard\n                    show={settings.showCoordinates}\n                    mandelbrot={{\n                      xy: mandelbrotControls.xyCtrl[0].xy,\n                      zoom: mandelbrotControls.zoomCtrl[0].z as OpaqueInterpolation<\n                        ZoomType\n                      >,\n                      theta: mandelbrotControls.rotCtrl[0].theta,\n                    }}\n                  />\n                  <ChangeCoordinatesCard\n                    show={settings.showCoordinates}\n                    mandelbrot={mandelbrotControls}\n                  />\n                </div>\n                <Grid item xs className=\"renderer\">\n                  <MandelbrotRenderer controls={mandelbrotControls} {...settings} />\n                </Grid>\n                <Grid item xs className=\"renderer\">\n                  <JuliaRenderer\n                    c={mandelbrotControls.xyCtrl[0].xy}\n                    controls={juliaControls}\n                    {...settings}\n                  />\n                </Grid>\n              </Grid>\n            )}\n          </SettingsContext.Consumer>\n\n          <SettingsMenu reset={() => reset()} toggleInfo={() => toggleInfo()} />\n\n          <InfoDialog ctrl={[showInfo, setShowInfo]} />\n        </Grid>\n      </SettingsProvider>\n    </ThemeProvider>\n  );\n}\n\nexport default App;\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n// import * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\n// serviceWorker.register();\r\n"],"sourceRoot":""}