{"version":3,"sources":["common/values.ts","common/routing.ts","common/utils.ts","components/info/ChangeCoordinatesCard.tsx","components/info/CoordinatesCard.tsx","components/info/CoordinateInterface.tsx","img/logo-192.png","components/info/InfoDialog.tsx","dist/clientDetect.js","shaders/newSmoothJuliaShader.ts","common/settings.ts","components/settings/SettingsDefinitions.tsx","components/settings/SettingsContext.tsx","theme/theme.tsx","shaders/fullVertexShader.js","components/render/WebGLCanvas.tsx","components/render/MinimapViewer.tsx","components/render/JuliaRenderer.tsx","shaders/newSmoothMandelbrotShader.ts","components/info/FPSCard.tsx","components/render/MandelbrotRenderer.tsx","serviceWorker.js","components/ServiceWorkerWrapper.tsx","components/settings/SettingsMenu.tsx","App.tsx","index.tsx"],"names":["viewerOrigin","xy","z","theta","defaultMandelbrotStart","defaultJuliaStart","defaultViewerStart","m","j","springsConfigs","default","mass","tension","friction","precision","zoom","rot","user","toFloatDisplay","n","p","toFixed","toFloatDisplayShort","NamedHashURLViewer","name","v","this","ViewerURLManager","vs","updateFromURL","asHashURL","params","currentViewerState","newV","undefined","map","toFloatDisplayDefault","updateViewer","currentLocation","window","location","hash","replace","l","viewerParams","split","filter","length","forEach","s","parsedVals","Number","some","isNaN","x","y","t","error","console","log","genericTouchBind","domTarget","controls","setDragging","xyCtrl","setControlXY","zoomCtrl","minZoom","maxZoom","setControlZoom","rotCtrl","setControlRot","zoomMult","getRealZoom","current","height","handlers","onPinch","event","da","vdva","down","movement","md","ma","delta","first","origin","memo","getValue","a","o","preventDefault","newZ","_","clamp","deg","newZclamp","realZoom","vScale","subV","relMove","addV","vRotate","immediate","config","Math","PI","onWheel","my","active","shiftKey","newT","onDrag","direction","pinching","velocity","cancel","last","vecXY","eventOptions","passive","capture","warpToPoint","Rgb255ColourToFloat","c","r","g","b","e","ChangeCoordinatesCard","props","useState","setXY","setZoom","setTheta","Card","style","width","zIndex","position","padding","display","flexDirection","flexShrink","Grid","container","alignItems","TextField","size","onChange","target","value","type","defaultValue","inputProps","step","label","justify","min","Button","marginTop","onClick","mandelbrot","CoordinatesCard","marginBottom","Typography","align","fontFamily","fontSize","span","interpolate","CoordinateInterface","Grow","in","show","right","top","margin","DialogTitle","withStyles","theme","createStyles","root","spacing","image","marginRight","closeButton","marginLeft","color","palette","grey","children","classes","onClose","other","disableTypography","className","src","MandelbrotMapsLogo","alt","variant","IconButton","aria-label","DialogContent","MuiDialogContent","DialogActions","MuiDialogActions","Alert","elevation","InfoDialog","ctrl","open","setOpen","snackBarOpen","setSnackBarOpen","handleClose","clientData","useMemo","screenSize","screen","nameOffset","verOffset","ix","nVer","navigator","appVersion","nAgt","userAgent","browser","appName","version","parseFloat","majorVersion","parseInt","indexOf","substring","lastIndexOf","toLowerCase","toUpperCase","mobile","test","cookieEnabled","document","cookie","os","clientStrings","id","cs","osVersion","exec","gl","debugInfo","gpuVendor","renderer","system","device","canvas","createElement","getContext","getExtension","getParameter","UNMASKED_VENDOR_WEBGL","UNMASKED_RENDERER_WEBGL","browserVersion","browserRelease","platform","dpr","devicePixelRatio","gpu","clientDetect","Dialog","aria-labelledby","maxWidth","dividers","gutterBottom","Link","href","Divider","Box","TableContainer","component","Paper","Table","TableHead","TableRow","TableCell","colSpan","TableBody","Object","entries","k","String","process","data","clipboard","writeText","prompt","writeToClipboard","JSON","stringify","startIcon","Snackbar","autoHideDuration","severity","survey","link","rel","textDecoration","autoFocus","newSmoothJuliaShader","maxI","AA","B","defaultSettings","showMinimap","showCrosshair","showCoordinates","showFPS","useDPR","useAA","colour","settingsWidgets","settings","checked","control","Switch","labelPlacement","Slider","max","valueLabelDisplay","marks","SettingsContext","createContext","setSettings","SettingsProvider","Provider","createMuiTheme","MuiSwitch","MuiButton","borderRadius","primary","main","colors","blue","secondary","red","info","shape","contrastBoxShadow","fullscreenVertexArray","numComponents","WebGLCanvas","React","forwardRef","refAny","canvasRef","useRef","renderRequestRef","bufferInfo","programInfo","u","setFps","fps","useCallback","mini","setupCanvas","debug","useEffect","addEventListener","compileShader","ctx","twgl","fragShader","then","frames","elapsedTime","interval","render","time","prog","buff","viewport","uniforms","resolution","u_zoom","u_c","u_xy","u_maxI","u_theta","u_colour","useProgram","program","requestAnimationFrame","cancelAnimationFrame","ref","cursor","dragging","displayName","useStyles","makeStyles","MinimapViewer","rest","ButtonBase","left","bottom","boxShadow","overflow","JuliaRenderer","miniCanvasRef","miniFragShader","gtb","useGesture","Consumer","makeCrosshair","stroke","radius","standardCrosshair","miniCrosshair","newSmoothMandelbrotShader","crosshairShape","FPSCard","userSelect","div","MandelbrotRenderer","isLocalhost","Boolean","hostname","match","register","URL","swUrl","fetch","response","contentType","headers","get","status","serviceWorker","ready","registration","unregister","reload","registerValidSW","catch","checkValidServiceWorker","onupdatefound","installingWorker","installing","onstatechange","state","controller","onUpdate","onSuccess","ServiceWorkerWrapper","showReload","setShowReload","waitingWorker","setWaitingWorker","onSWUpdate","waiting","anchorOrigin","vertical","horizontal","action","postMessage","settingsButton","popoverCardGrid","paddingTop","paddingBottom","paddingRight","paddingLeft","sliderControl","GroupDivider","GroupTitle","item","icon","title","SettingsMenu","anchorEl","setAnchorEl","ResetButton","aria-controls","reset","AboutButton","toggleInfo","Fab","aria-haspopup","currentTarget","Backdrop","Popover","keepMounted","transformOrigin","ExtensionIcon","widgets","PhotoIcon","getSettingsWidgetsGrouping","FormGroup","widget","FormControlLabel","slice","val","prevState","App","isClient","getSize","innerWidth","innerHeight","windowSize","setWindowSize","handleResize","removeEventListener","useWindowSize","loc","setLoc","handler","to","useHashLocation","updateBrowserHash","history","replaceState","urlManager","updateHash","asFullHashURL","updateM","updateJ","mandelbrotControls","useSpring","onRest","juliaControls","showInfo","setShowInfo","ThemeProvider","xs","ReactDOM","StrictMode","getElementById"],"mappings":"kZAYaA,EAA+B,CAC1CC,GAAI,CAAC,EAAG,GACRC,EAAG,EACHC,MAAO,GAGIC,EAAyC,CACpDH,GAAI,CAAC,SAAW,UAChBC,EAAG,EACHC,MAAO,IAEIE,EAAoC,CAC/CJ,GAAI,CAAC,UAAY,UACjBC,EAAG,EACHC,MAAO,MAGIG,EAAsD,CACjEC,EAAGH,EACHI,EAAGH,GAGQI,EAAiB,CAE5BC,QAAS,CACPT,GAAI,CAAEU,KAAM,EAAGC,QAAS,IAAKC,SAAU,GAAIC,UA3Bf,MA4B5BC,KAAM,CAAEJ,KAAM,EAAGC,QAAS,IAAKC,SAAU,IACzCG,IAAK,CAAEL,KAAM,EAAGC,QAAS,IAAKC,SAAU,KAG1CI,KAAM,CACJhB,GAAI,CAAEU,KAAM,EAAGC,QAAS,IAAMC,SAAU,GAAIC,UAjChB,MAkC5BC,KAAM,CAAEJ,KAAM,EAAGC,QAAS,KAAMC,SAAU,IAC1CG,IAAK,CAAEL,KAAM,EAAGC,QAAS,KAAMC,SAAU,MAsBhCK,EAAiB,SAACC,EAAWC,GAAZ,OAAmCD,EAAEE,QAAQD,IAK9DE,EAAsB,SAACH,GAAD,OACjCD,EAAeC,EARuB,ICvD3BI,EAAb,WAIE,WAAYC,EAAcC,GAAoB,yBAH9CD,UAG6C,OAF7CC,OAE6C,EAC3CC,KAAKF,KAAOA,EACZE,KAAKD,EAAIA,EANb,wDAauB,IAAD,EACOC,KAAKD,EAAtBxB,EADU,EACVA,GAAIC,EADM,EACNA,EAAGC,EADG,EACHA,MACf,MAAM,IAAN,OAAWuB,KAAKF,KAAhB,YAAwBvB,EAAG,GAA3B,YAAiCA,EAAG,GAApC,YAA0CC,EAA1C,YAA+CC,OAfnD,KAmBawB,EAAb,WAKE,aAAe,yBAJfC,QAIc,EACZF,KAAKE,GAAK,GACVF,KAAKG,gBAPT,4DAWI,MAAM,IAAN,OAAWH,KAAKE,GAAL,EAAaE,aAAxB,OAAsCJ,KAAKE,GAAL,EAAaE,eAXvD,sCAeI,IAAMC,EAASC,IACfN,KAAKE,GAAL,EAAe,IAAIL,EACjB,IACAQ,EAAM,GAAN,eAAoB3B,IAEtBsB,KAAKE,GAAL,EAAe,IAAIL,EAAmB,IAAKQ,EAAM,GAAN,eAAoB1B,MApBnE,mCAuBemB,EAAcC,GAAkC,IAEnDxB,EAAiBwB,EAAjBxB,GAAIC,EAAauB,EAAbvB,EAAGC,EAAUsB,EAAVtB,MAGT8B,EAAOP,KAAKE,GAAGJ,GAAMC,OAChBS,IAAPjC,IAAkBgC,EAAKhC,GAAKA,EAAGkC,KAAI,SAAChB,GAAD,ODWN,SAACA,GAAD,OACnCD,EAAeC,EANyB,GCNQiB,CAAsBjB,YAC1De,IAANhC,IAAiB+B,EAAK/B,EAAIoB,EAAoBpB,SACpCgC,IAAV/B,IAAqB8B,EAAK9B,MAAQmB,EAAoBnB,IAE1DuB,KAAKE,GAAGJ,GAAMC,EAAIQ,IAjCtB,uCAoCmB1B,EAA4BC,GAC3CkB,KAAKW,aAAa,IAAK9B,GACvBmB,KAAKW,aAAa,IAAK7B,OAtC3B,KA4Ca8B,EAAkB,WAG7B,OADUC,OAAOC,SAASC,KAAKC,QAAQ,IAAK,KAAO,IAIxCV,EAAqB,WAChC,IAAMW,EAAIL,IAEJM,EAAgD,GAEtD,IAGaD,EAAEE,MAAM,KAAKC,QAAO,SAACrB,GAAD,OAAOA,EAAEsB,OAAS,KAC9CC,SAAQ,SAACC,GAAM,MAGIA,EAAEJ,MAAM,KAHZ,mBAGTpB,EAHS,KAIVyB,EAJU,KAIUL,MAAM,KAAKV,IAAIgB,QAEzC,GAAID,EAAWE,KAAKC,OAElBT,EAAanB,GAAKnB,EAAmBmB,OAChC,CAAC,IAAD,cACgByB,EADhB,GACEI,EADF,KACKC,EADL,KACQrD,EADR,KACWsD,EADX,KAELZ,EAAanB,GAAK,CAAExB,GAAI,CAACqD,EAAGC,GAAcrD,EAAGA,EAAGC,MAAOqD,OAG3D,MAAOC,GAEPC,QAAQC,IAAIF,GAEd,OAAOb,G,iCChCF,SAASgB,EAAT,GAI6C,IAHlDC,EAGiD,EAHjDA,UACAC,EAEiD,EAFjDA,SACAC,EACiD,EADjDA,YACiD,cAClBD,EAASE,OADS,GACxC/D,EADwC,KACxCA,GAAMgE,EADkC,mBAECH,EAASI,SAFV,UAExChE,EAFwC,EAExCA,EAAGiE,EAFqC,EAErCA,QAASC,EAF4B,EAE5BA,QAAWC,EAFiB,mBAGdP,EAASQ,QAHK,GAGxCnE,EAHwC,KAGxCA,MAASoE,EAH+B,KAK3CC,EAAiB,KAAjBA,EAA4B,KAG5BC,EAAc,SAACvE,GAAD,cAAgB,UAAA2D,EAAUa,eAAV,eAAmBC,SAAU,KAAOzE,GAGxE,MAAO,CACL0E,SAAU,CAURC,QAAS,YAmBmC,IAlB1CC,EAkByC,EAlBzCA,MAkByC,gBAjBzCC,GAiByC,8BAhBzCC,KAgByC,IAfzCC,GAeyC,YAfzCA,MAeyC,gBAbzCC,SAayC,GAb9BC,EAa8B,KAb1BC,EAa0B,qBAZzCC,MAYyC,GAXzCC,GAWyC,YAXzCA,OAEAC,EASyC,EATzCA,OASyC,IAPzCC,YAOyC,MAPlC,CACLvF,GAAIA,EAAGwF,WACPvF,EAAGA,EAAEuF,WACLjC,EAAGrD,EAAMsF,WACTC,EAAG,EACHC,EAAG,CAAC,EAAG,IAEgC,EAEzCb,GAASA,EAAMc,iBAEXN,IAGFE,EAAKG,EAAIJ,GAkBX,IAAMM,EAAI,SAAGC,IAAEC,MAAMP,EAAKtF,EAAS,IAALiF,EAAW,GAAK,KAAa,EAAS,KAALA,GAK/DzB,QAAQC,IAAIkC,GACZ,IAtFUG,EAsFJC,EAAYH,IAAEC,MAAMF,EAAM1B,EAAQsB,WAAYrB,EAAQqB,YAEtDS,EAAWzB,EAAYwB,GAjCY,EAoCfE,kBAAQ,EAAID,EAAUE,YAAKb,EAAQC,EAAKG,IApCzB,mBAqCnCU,EAAmB,CArCgB,YAyDzC,OAlBApC,EAAa,CACXhE,GAAIqG,YAAKd,EAAKvF,GAAIsG,kBAAQpG,EAAMsF,WAAYY,IAC5CG,WAAW,IAGbnC,EAAe,CACbnE,EAAG+F,EACHO,WAAW,EACXC,OAAQxB,EAAOxE,EAAeQ,KAAKF,KAAON,EAAeC,QAAQK,OAGnEwD,EAAc,CACZpE,MAAOqF,EAAKhC,GA1GJwC,EA0GiBZ,EA1GQY,EAAMU,KAAKC,GAAM,KA4GlDH,WAAW,EACXC,OAAQxB,EAAOxE,EAAeQ,KAAKD,IAAMP,EAAeC,QAAQM,MAG3DwE,GAGToB,QAAS,YAMmC,IAL1C9B,EAKyC,EALzCA,MACa+B,EAI4B,cAJzC3B,SAIyC,MAHzC4B,EAGyC,EAHzCA,OACAC,EAEyC,EAFzCA,SAEyC,IADzCvB,YACyC,MADlC,CAAEzE,KAAMb,EAAEuF,WAAYjC,EAAGrD,EAAMsF,YACG,EAIzC,GAFAX,GAASA,EAAMc,iBAEXmB,EAAU,CAEZ,IAAMC,EAAOxB,EAAKhC,EAAS,MAALqD,EAEtBtC,EAAc,CACZpE,MAAO6G,EACPP,OAAQK,EAASrG,EAAeQ,KAAKD,IAAMP,EAAeC,QAAQM,IAClEwF,WAAW,QAER,CAIL,IAAMX,EAAOL,EAAKzE,MAAQ,EAAI8F,GAAMA,EAAK,EAAIrC,EAAcA,IAE3DH,EAAe,CACbnE,EAAG4F,IAAEC,MAAMF,EAAM1B,EAAQsB,WAAYrB,EAAQqB,YAC7CgB,OAAQK,EAASrG,EAAeQ,KAAKF,KAAON,EAAeC,QAAQK,KAEnEyF,WAAW,IAGf,OAAOhB,GAGTyB,OAAQ,YAUmC,IATzCnC,EASwC,EATxCA,MACAG,EAQwC,EARxCA,KACAC,EAOwC,EAPxCA,SAOwC,gBANxCgC,UAMwC,GAJxCC,GAIwC,YALxCC,SAKwC,EAJxCD,UAEAE,GAEwC,EAHxCC,KAGwC,EAFxCD,QAEwC,IADxC7B,YACwC,MADjC,CAAEvF,GAAIA,EAAGwF,WAAYtF,MAAOA,EAAMsF,YACD,EAExCX,GAASA,EAAMc,iBAGXuB,GAAUE,GAAUA,IAMxB,IAAMnB,EAAWzB,EAAYvE,EAAEuF,YAXS,EAafU,kBAAQ,EAAID,EAAUhB,GAbP,mBAgBlCmB,EAAkB,CAhBgB,YAmBlC7C,EAAIrD,EAAMsF,WAEV8B,EAAQjB,YAAKd,EAAKvF,GAAIsG,kBAAQ/C,EAAG6C,IA4BvC,OAzBApC,EAAa,CAGXhE,GAAIsH,EAEJd,OAAQxB,EAAOxE,EAAeQ,KAAKhB,GAAKQ,EAAeC,QAAQT,GAE/DuG,WAAW,IAgBbzC,EAAYkB,GAELO,IAGXiB,OAAQ,CACNe,aAAc,CAAEC,SAAS,EAAOC,SAAS,GACzC7D,UAAWA,IAiBV,IAAM8D,EAAc,SACzB7D,EADyB,GAIf,IAFR7D,EAEO,EAFPA,GAAIC,EAEG,EAFHA,EAAGC,EAEA,EAFAA,MACTqG,EACS,6DAEEtE,IAAPjC,GACF6D,EAASE,OAAO,GAAG,CAEjB/D,GAAIA,EACJwG,OAAQhG,EAAeC,QAAQT,GAC/BuG,UAAWA,SAGLtE,IAANhC,GACF4D,EAASI,SAAS,GAAG,CACnBhE,EAAGA,EACHuG,OAAQhG,EAAeC,QAAQK,KAC/ByF,UAAWA,SAGDtE,IAAV/B,GACF2D,EAASQ,QAAQ,GAAG,CAClBnE,MAAOA,EACPsG,OAAQhG,EAAeC,QAAQM,IAC/BwF,UAAWA,KASJoB,EAAsB,SAACC,GAAD,MACjC,CAACA,EAAEC,EAAGD,EAAEE,EAAGF,EAAEG,GAAG7F,KAAI,SAAC8F,GAAD,OAAOA,EAAI,Q,oCC/PlBC,EArEe,SAACC,GAAoD,IAAD,EAC5DC,mBAAShI,EAAuBH,IAD4B,mBACzEA,EADyE,KACrEoI,EADqE,mBAEjEpI,EAFiE,GAEzEqD,EAFyE,KAEtEC,EAFsE,OAGxD6E,mBAAShI,EAAuBF,GAHwB,mBAGzEa,EAHyE,KAGnEuH,EAHmE,OAItDF,mBAAShI,EAAuBD,OAJsB,mBAIzEA,EAJyE,KAIlEoI,EAJkE,KAMhF,OACE,cAACC,EAAA,EAAD,CACEC,MAAO,CACLC,MAAO,OACPC,OAAQ,KACRC,SAAU,WACVC,QAAS,EACTC,QAAS,OACTC,cAAe,SACfC,WAAY,GARhB,SAYE,eAACC,EAAA,EAAD,CAAMC,WAAS,EAAChC,UAAU,SAASiC,WAAW,SAA9C,UACE,cAACC,EAAA,EAAD,CACEC,KAAK,QACLZ,MAAO,CAAEC,MAAO,QAChBY,SAAU,SAACrB,GAAD,OAAOI,GAAM,mCAAK9E,GAAL,iBAAY,CAACJ,OAAO8E,EAAEsB,OAAOC,OAAQjG,OAC5DkG,KAAK,SACLC,aAAcpG,EACdqG,WAAY,CAAEC,KAAM,KACpBC,MAAM,MAER,cAACT,EAAA,EAAD,CACEC,KAAK,QACLZ,MAAO,CAAEC,MAAO,QAChBY,SAAU,SAACrB,GAAD,OAAOI,GAAM,mCAAE/E,EAAF,gBAAY,CAACA,EAAGH,OAAO8E,EAAEsB,OAAOC,YACvDC,KAAK,SACLC,aAAcnG,EACdoG,WAAY,CAAEC,KAAM,KACpBC,MAAM,MAER,eAACZ,EAAA,EAAD,CAAMC,WAAS,EAAChC,UAAU,MAAM4C,QAAQ,eAAxC,UACE,cAACV,EAAA,EAAD,CACEC,KAAK,QACLZ,MAAO,CAAEC,MAAO,OAChBY,SAAU,SAACrB,GAAD,OAAOK,EAAQnF,OAAO8E,EAAEsB,OAAOC,SACzCC,KAAK,SACLC,aAAc3I,EACd4I,WAAY,CAAEI,IAAK,GACnBF,MAAM,SAER,cAACT,EAAA,EAAD,CACEC,KAAK,QACLZ,MAAO,CAAEC,MAAO,OAChBY,SAAU,SAACrB,GAAD,OAAOM,EAASpF,OAAO8E,EAAEsB,OAAOC,SAC1CC,KAAK,SACLC,aAAcvJ,EACdwJ,WAAY,CAAEC,KAAM,IACpBC,MAAM,aAGV,cAACG,EAAA,EAAD,CACEvB,MAAO,CAAEwB,UAAW,IACpBC,QAAS,kBAAMvC,EAAYQ,EAAMgC,WAAY,CAAElK,GAAIA,EAAIC,EAAGa,EAAMZ,MAAOA,KAFzE,sB,SCVOiK,EA7CS,SAACjC,GACvB,OACE,cAACK,EAAA,EAAD,CACEC,MAAO,CACLC,MAAO,OACPC,OAAQ,KACRC,SAAU,WACVC,QAAS,WACTwB,aAAc,GANlB,SAUE,eAACC,EAAA,EAAD,CAAYC,MAAM,QAAQ9B,MAAO,CAAE+B,WAAY,YAAaC,SAAU,UAAtE,UAGE,cAAC,IAASC,KAAV,UACGvC,EAAMgC,WAAWlK,GAAG0K,aAEnB,SAACrH,EAAGC,GAAJ,gBAAaD,EAAEjC,QJqCe,GIrC9B,aAGJ,uBACA,cAAC,IAASqJ,KAAV,UACGvC,EAAMgC,WAAWlK,GAAG0K,aAEnB,SAACrH,EAAGC,GAAJ,gBAAaA,EAAElC,QJ8Be,GI9B9B,aAGJ,uBACA,cAAC,IAASqJ,KAAV,UACGvC,EAAMgC,WAAWpJ,KAAK4J,aACrB,SAACzK,GAAD,gBAAUA,EAAEmB,QJyBgB,GIzB5B,aAGJ,uBACA,cAAC,IAASqJ,KAAV,UACGvC,EAAMgC,WAAWhK,MAAMwK,aACtB,SAACnH,GAAD,gBAAUA,EAAEnC,QJmBgB,GInB5B,mBCVGuJ,EA9BoB,SAACzC,GAIlC,OACE,cAAC0C,EAAA,EAAD,CACEC,GAAI3C,EAAM4C,KACVtC,MAAO,CACLG,SAAU,WACVoC,MAAO,EACPC,IAAK,EACLC,OAAQ,GACRxC,MAAO,OACPC,OAAQ,GARZ,SAWE,gCACE,cAAC,EAAD,CACEwB,WAAY,CACVlK,GAAIkI,EAAMgC,WAAWnG,OAAO,GAAG/D,GAC/Bc,KAAMoH,EAAMgC,WAAWjG,SAAS,GAAGhE,EACnCC,MAAOgI,EAAMgC,WAAW7F,QAAQ,GAAGnE,SAGvC,cAAC,EAAD,CAAuBgK,WAAYhC,EAAMgC,mB,+PC9BlC,OAA0B,qCCkCzC,IAgCMgB,GAAcC,aA9BL,SAACC,GAAD,OACbC,YAAa,CACXC,KAAM,CACJL,OAAQ,EACRrC,QAASwC,EAAMG,QAAQ,GACvB1C,QAAS,OACTC,cAAe,OAGjB0C,MAAO,CACLxB,UAAW,OACXI,aAAc,OACdqB,YAAa,EACb/G,OAAQ,IAEVgH,YAAa,CAIXC,WAAY,OACZC,MAAOR,EAAMS,QAAQC,KAAK,UAUZX,EAClB,YAAiE,IAA9DY,EAA6D,EAA7DA,SAAUC,EAAmD,EAAnDA,QAASC,EAA0C,EAA1CA,QAAYC,EAA8B,gDAC9D,OACE,eAAC,IAAD,yBAAgBC,mBAAiB,EAACC,UAAWJ,EAAQV,MAAUY,GAA/D,cACE,qBACEG,IAAKC,GACLC,IAAI,uBACJH,UAAWJ,EAAQR,QAErB,cAACnB,EAAA,EAAD,CACEmC,QAAQ,KACRhE,MAAO,CAAEgC,SAAU,GAAIR,UAAW,OAAQI,aAAc,QAF1D,SAIG2B,IAEFE,EACC,cAACQ,EAAA,EAAD,CACEC,aAAW,QACXN,UAAWJ,EAAQN,YACnBzB,QAASgC,EAHX,SAKE,cAAC,IAAD,MAEA,YAMNU,GAAgBxB,aAAW,SAACC,GAAD,MAAY,CAC3CE,KAAM,CACJ1C,QAASwC,EAAMG,QAAQ,OAFLJ,CAIlByB,KAEEC,GAAgB1B,aAAW,SAACC,GAAD,MAAY,CAC3CE,KAAM,CACJL,OAAQ,EACRrC,QAASwC,EAAMG,QAAQ,OAHLJ,CAKlB2B,KAEJ,SAASC,GAAM7E,GACb,OAAO,cAAC,KAAD,aAAU8E,UAAW,EAAGR,QAAQ,UAAatE,IAGvC,SAAS+E,GAAW/E,GAAsC,IAAD,cAC9CA,EAAMgF,KADwC,GAC/DC,EAD+D,KACzDC,EADyD,OAE9BjF,oBAAS,GAFqB,mBAE/DkF,EAF+D,KAEjDC,EAFiD,KAIhEC,EAAc,kBAAMH,GAAQ,IAU5BI,EAAaC,mBAAQ,kBCzHd,SAAsBnL,GACnC,IAGIoL,EAAa,GACbpL,EAAOqL,OAAOlF,QAGhBiF,IAFYpL,EAAOqL,OAAOlF,MAAQnG,EAAOqL,OAAOlF,MAAQ,IAE7B,OADdnG,EAAOqL,OAAOjJ,OAASpC,EAAOqL,OAAOjJ,OAAS,KAK7D,IAKIkJ,EAAYC,EAAWC,EALvBC,EAAOC,UAAUC,WACjBC,EAAOF,UAAUG,UACjBC,EAAUJ,UAAUK,QACpBC,EAAU,GAAKC,WAAWP,UAAUC,YACpCO,EAAeC,SAAST,UAAUC,WAAY,KAIN,IAAvCJ,EAAYK,EAAKQ,QAAQ,YAC5BN,EAAU,QACVE,EAAUJ,EAAKS,UAAUd,EAAY,IACS,IAAzCA,EAAYK,EAAKQ,QAAQ,cAC5BJ,EAAUJ,EAAKS,UAAUd,EAAY,MAIC,IAArCA,EAAYK,EAAKQ,QAAQ,SAC5BN,EAAU,QACVE,EAAUJ,EAAKS,UAAUd,EAAY,KAGS,IAAtCA,EAAYK,EAAKQ,QAAQ,UACjCN,EAAU,iBACVE,EAAUJ,EAAKS,UAAUd,EAAY,KAGS,IAAtCA,EAAYK,EAAKQ,QAAQ,UACjCN,EAAU,8BACVE,EAAUJ,EAAKS,UAAUd,EAAY,KAGW,IAAxCA,EAAYK,EAAKQ,QAAQ,YACjCN,EAAU,SACVE,EAAUJ,EAAKS,UAAUd,EAAY,KAGW,IAAxCA,EAAYK,EAAKQ,QAAQ,YACjCN,EAAU,SACVE,EAAUJ,EAAKS,UAAUd,EAAY,IACS,IAAzCA,EAAYK,EAAKQ,QAAQ,cAC5BJ,EAAUJ,EAAKS,UAAUd,EAAY,MAIU,IAAzCA,EAAYK,EAAKQ,QAAQ,aACjCN,EAAU,UACVE,EAAUJ,EAAKS,UAAUd,EAAY,KAGD,GAA7BK,EAAKQ,QAAQ,aACpBN,EAAU,8BACVE,EAAUJ,EAAKS,UAAUT,EAAKQ,QAAQ,OAAS,KAI9Cd,EAAaM,EAAKU,YAAY,KAAO,IAAMf,EAAYK,EAAKU,YAAY,QAEzER,EAAUF,EAAKS,UAAUf,EAAYC,GACrCS,EAAUJ,EAAKS,UAAUd,EAAY,GACjCO,EAAQS,eAAiBT,EAAQU,gBACnCV,EAAUJ,UAAUK,WAIY,IAA/BP,EAAKQ,EAAQI,QAAQ,QAAaJ,EAAUA,EAAQK,UAAU,EAAGb,KAClC,IAA/BA,EAAKQ,EAAQI,QAAQ,QAAaJ,EAAUA,EAAQK,UAAU,EAAGb,KAClC,IAA/BA,EAAKQ,EAAQI,QAAQ,QAAaJ,EAAUA,EAAQK,UAAU,EAAGb,IAEtEU,EAAeC,SAAS,GAAKH,EAAS,IAClClL,MAAMoL,KACRF,EAAU,GAAKC,WAAWP,UAAUC,YACpCO,EAAeC,SAAST,UAAUC,WAAY,KAIhD,IAAIc,EAAS,4CAA4CC,KAAKjB,GAG1DkB,IAAgBjB,UAAUiB,cAEQ,oBAA3BjB,UAAUiB,eAAiCA,IACpDC,SAASC,OAAS,aAClBF,GAA0D,GAA1CC,SAASC,OAAOT,QAAQ,eAI1C,IAAIU,EAjGU,IAkGVC,EAAgB,CAClB,CAAErM,EAAG,aAAc6E,EAAG,kCACtB,CAAE7E,EAAG,cAAe6E,EAAG,gCACvB,CAAE7E,EAAG,YAAa6E,EAAG,8BACrB,CAAE7E,EAAG,YAAa6E,EAAG,8BACrB,CAAE7E,EAAG,gBAAiB6E,EAAG,kBACzB,CAAE7E,EAAG,sBAAuB6E,EAAG,kBAC/B,CAAE7E,EAAG,aAAc6E,EAAG,+BACtB,CAAE7E,EAAG,eAAgB6E,EAAG,iCACxB,CAAE7E,EAAG,aAAc6E,EAAG,4BACtB,CAAE7E,EAAG,aAAc6E,EAAG,sBACtB,CAAE7E,EAAG,aAAc6E,EAAG,iCACtB,CAAE7E,EAAG,iBAAkB6E,EAAG,8CAC1B,CAAE7E,EAAG,aAAc6E,EAAG,cACtB,CAAE7E,EAAG,eAAgB6E,EAAG,SACxB,CAAE7E,EAAG,UAAW6E,EAAG,WACnB,CAAE7E,EAAG,WAAY6E,EAAG,WACpB,CAAE7E,EAAG,SAAU6E,EAAG,SAClB,CAAE7E,EAAG,YAAa6E,EAAG,QACrB,CAAE7E,EAAG,QAAS6E,EAAG,yBACjB,CAAE7E,EAAG,MAAO6E,EAAG,sBACf,CAAE7E,EAAG,WAAY6E,EAAG,YACpB,CAAE7E,EAAG,SAAU6E,EAAG,2CAClB,CAAE7E,EAAG,MAAO6E,EAAG,OACf,CAAE7E,EAAG,OAAQ6E,EAAG,QAChB,CAAE7E,EAAG,OAAQ6E,EAAG,QAChB,CAAE7E,EAAG,OAAQ6E,EAAG,SAChB,CACE7E,EAAG,aACH6E,EAAG,iFAGP,IAAK,IAAIyH,KAAMD,EAAe,CAC5B,IAAIE,EAAKF,EAAcC,GACvB,GAAIC,EAAG1H,EAAEmH,KAAKd,GAAO,CACnBkB,EAAKG,EAAGvM,EACR,OAIJ,IAAIwM,EA1IU,IAiJd,OALI,UAAUR,KAAKI,KACjBI,EAAY,eAAeC,KAAKL,GAAI,GACpCA,EAAK,WAGCA,GACN,IAAK,WACHI,EAAY,yBAAyBC,KAAKvB,GAAM,GAChD,MAEF,IAAK,UACHsB,EAAY,sBAAsBC,KAAKvB,GAAM,GAC7C,MAEF,IAAK,MAEHsB,GADAA,EAAY,yBAAyBC,KAAK1B,IACpB,GAAK,IAAMyB,EAAU,GAAK,KAAsB,EAAfA,EAAU,IAQrE,IAMIE,EACAC,EACAC,EACAC,EATAC,EAAS5B,EAAKS,UAAUT,EAAKQ,QAAQ,KAAO,EAAGR,EAAKQ,QAAQ,MAC5DqB,EAASD,EAAOnB,UAAUmB,EAAOlB,YAAY,KAAO,GAIpDoB,EAASd,SAASe,cAAc,UAMpC,IAIEN,GAHAD,EAAKM,EAAOE,WAAW,UAAYF,EAAOE,WAAW,uBAGtCC,aAAa,6BAC5BP,EAAYF,EAAGU,aAAaT,EAAUU,uBACtCR,EAAWH,EAAGU,aAAaT,EAAUW,yBAErC,MAAOtI,IAMT,MAAO,CACLoG,QAASA,EACTmC,eAAgB/B,EAChBgC,eAAgBlC,EAEhByB,OAAQA,EACRX,GAAIA,EACJI,UAAWA,EACXT,OAAQA,EACR0B,SAAUzC,UAAUyC,SACpB9C,OAAQD,EACRgD,KAAMpO,EAAOqO,iBAAiBvP,QAAQ,GACtCwP,IAAKf,EACLD,UAAWA,EACXzB,UAAWH,UAAUG,WDnFU0C,CAAavO,UAAS,IAavD,OACE,eAACwO,EAAA,EAAD,CACE7E,QAASsB,EACTwD,kBAAgB,0BAChB5D,KAAMA,EACN6D,SAAS,KAJX,UAOE,cAAC,GAAD,CAAa1B,GAAG,0BAA0BrD,QAASsB,EAAnD,6BAGA,eAAC,GAAD,CAAe0D,UAAQ,EAACzI,MAAO,CAAEwI,SAAU,KAA3C,UACE,cAAC3G,EAAA,EAAD,CAAY6G,cAAY,EAAxB,6FAGA,eAAC7G,EAAA,EAAD,CAAY6G,cAAY,EAAxB,yBACe,IACb,cAACC,EAAA,EAAD,CAAMC,KAAK,2BAA2B9H,OAAO,SAA7C,uBAEQ,IAJV,oJAQA,eAACe,EAAA,EAAD,CAAY6G,cAAY,EAAxB,oMAG+B,IAC7B,cAACC,EAAA,EAAD,CAAMC,KAAK,mCAAmC9H,OAAO,SAArD,yCAIF,eAACe,EAAA,EAAD,CAAY6G,cAAY,EAAxB,oMAG+B,IAC7B,cAACC,EAAA,EAAD,CAAMC,KAAK,mCAAmC9H,OAAO,SAArD,yCAIF,eAACe,EAAA,EAAD,CAAY6G,cAAY,EAAxB,gBACM,IACJ,cAACC,EAAA,EAAD,CACEC,KAAK,mEACL9H,OAAO,SAFT,8CAKQ,IAPV,4DAUA,eAACe,EAAA,EAAD,CAAY6G,cAAY,EAAxB,oDAC0C,IACxC,cAACC,EAAA,EAAD,CAAMC,KAAK,wCAAX,iCAFF,MAEmF,IACjF,cAACD,EAAA,EAAD,CAAMC,KAAK,yBAAyB9H,OAAO,SAA3C,0BAHF,OAYA,cAAC+H,EAAA,EAAD,CAAS7I,MAAO,CAAEwB,UAAW,GAAII,aAAc,MAE/C,cAACkH,EAAA,EAAD,CAAK9I,MAAO,CAAEK,QAAS,QAAvB,SACE,cAAC0I,GAAA,EAAD,CACEC,UAAWC,KACXjJ,MAAO,CAAEC,MAAO,OAAQwC,OAAQ,OAAQ+F,SAAU,KAFpD,SAIE,eAACU,GAAA,EAAD,CAAOtI,KAAK,QAAQsD,aAAW,gBAA/B,UACE,cAACiF,GAAA,EAAD,UACE,cAACC,GAAA,EAAD,UACE,cAACC,GAAA,EAAD,CAAWvH,MAAM,SAASwH,QAAS,EAAGtF,QAAQ,OAA9C,mCAKJ,cAACuF,GAAA,EAAD,UACGC,OAAOC,QAAQzE,GAAYtL,KAAI,mCAAEgQ,EAAF,KAAK1Q,EAAL,YAC9B,eAACoQ,GAAA,EAAD,WACE,cAACC,GAAA,EAAD,UAAYK,IACZ,cAACL,GAAA,EAAD,CAAWvH,MAAM,QAAQ9B,MAAO,CAAE+B,WAAY,aAA9C,SACG4H,OAAO3Q,OAHG0Q,eAYzB,cAACb,EAAA,EAAD,CAAS7I,MAAO,CAAEwB,UAAW,GAAII,aAAc,MAE/C,eAACkH,EAAA,EAAD,CAAK9I,MAAO,CAAEK,QAAS,OAAQC,cAAe,SAAUI,WAAY,UAApE,UACE,cAACmB,EAAA,EAAD,CAAYmC,QAAQ,WAAWlC,MAAM,SAAS9B,MAAO,CAAEyC,OAAQ,QAA/D,oBAIA,cAACZ,EAAA,EAAD,CAAY7B,MAAO,CAAE+B,WAAY,aAAjC,SA1MS,6BA2MT,cAACF,EAAA,EAAD,CAAY7B,MAAO,CAAE+B,WAAY,aAAjC,SACG6H,4BAKP,eAAC,GAAD,WACE,cAACrI,EAAA,EAAD,CACEE,QAAS,YApHQ,SAACoI,GACxB5O,QAAQC,IAAI2J,GACZ,IACEW,UAAUsE,UAAUC,UAAUF,GAC9B/E,GAAgB,GAChB,MAAOtF,GACP1F,OAAOkQ,OAAO,2DAA4DH,IA+GpEI,CAAiBC,KAAKC,UAAUnF,KAElC5B,MAAM,UACNY,QAAQ,WACRoG,UAAW,cAAC,KAAD,IANb,kBAUA,cAACC,GAAA,EAAD,CACE1F,KAAME,EACNyF,iBAAkB,IAFpB,SAKE,cAAC,GAAD,CAAO7G,QAAS,kBAAMqB,GAAgB,IAAQyF,SAAS,OAAvD,yCAIF,cAAC5B,EAAA,EAAD,CACEC,KAAM4B,GAAOC,KACb3J,OAAO,SACP4J,IAAI,WACJ1K,MAAO,CAAE2K,eAAgB,QAJ3B,SAME,cAACpJ,EAAA,EAAD,CAAQqJ,WAAS,EAACxH,MAAM,UAAUY,QAAQ,WAAWoG,UAAW,cAAC,KAAD,IAAhE,8BEzQV,IAqFeS,GArFc,SAAC,GAAD,QAC3BC,YAD2B,MACpB,IADoB,MAE3BC,UAF2B,MAEtB,EAFsB,MAG3BC,SAH2B,MAGvB,GAHuB,iCAMhBD,EANgB,0BAOdD,EAPc,uBAQjBE,EAAEpS,QAAQ,GARO,6uDCahBqS,GAAkB,CAC7BC,aAAa,EACbC,eAAe,EACfC,iBAAiB,EACjBN,KAAM,IACNO,SAAS,EACTC,QAAQ,EACRC,OAAO,EACPC,OV+B4C,CAAEnM,EAAG,EAAGC,EAAG,IAAKC,EAAG,M,wEW7CpDkM,GAAkB,SAC7BC,GAD6B,MAEL,CACxBR,YAAa,CACX9J,MAAO,UACPuK,QAASD,EAASR,YAClBU,QAAS,cAACC,GAAA,EAAD,KAEXV,cAAe,CACb/J,MAAO,YACPuK,QAASD,EAASP,cAClBS,QAAS,cAACC,GAAA,EAAD,KAEXT,gBAAiB,CACfhK,MAAO,mBACPuK,QAASD,EAASN,gBAClBQ,QAAS,cAACC,GAAA,EAAD,KAEXf,KAAM,CACJ1J,MAAO,aACPL,MAAO2K,EAASZ,KAChBgB,eAAgB,MAChB9L,MAAO,CACLmD,WAAY,EACZF,YAAa,GAEf2I,QACE,cAACG,GAAA,EAAD,CACEzK,IAAK,GACL0K,IAAK,IACL7K,KAAM,GACN8K,kBAAkB,OAClBC,MAAO,CACL,CAAEnL,MAAO,GAAIK,MAAO,IACpB,CAAEL,MAAO,IAAKK,MAAO,KACrB,CAAEL,MAAO,IAAKK,MAAO,KACrB,CAAEL,MAAO,IAAKK,MAAO,KACrB,CAAEL,MAAO,IAAMK,MAAO,SAK9BkK,OAAQ,CAQNlK,MAAM,oBAAD,QAAuBtH,OAAOqO,iBAAiBvP,QAAQ,GAAvD,KACL+S,QAASD,EAASJ,OAClBM,QAAS,cAACC,GAAA,EAAD,KAEXN,MAAO,CACLnK,MAAM,uBACNuK,QAASD,EAASH,MAClBK,QAAS,cAACC,GAAA,EAAD,KAEXR,QAAS,CACPjK,MAAM,WACNuK,QAASD,EAASL,QAClBO,QAAS,cAACC,GAAA,EAAD,KAEXL,OAAQ,CACNpK,MAAO,KACPpB,MAAO,CACLwB,UAAW,GACXI,aAAc,GACduB,WAAY,EACZF,YAAa,GAEf2I,QACE,cAAC,KAAD,CAEExI,MAAOsI,EAASF,YC9EXW,GAAkBC,wBAAmC,CAEhEV,SAAUT,GAEVoB,YAAa,aAGbZ,gBAAiBA,GAAgBR,MAuBpBqB,GAlBiB,SAAC,GAAwD,IAAtD/I,EAAqD,EAArDA,SAAqD,EAGtD5D,mBAAkCsL,IAHoB,mBAG/ES,EAH+E,KAGrEW,EAHqE,KAKtF,OACE,cAACF,GAAgBI,SAAjB,CACExL,MAAO,CACL2K,WACAW,cACAZ,gBAAiBA,GAAgBC,IAJrC,SAOGnI,K,uCC/BDX,GAAQ4J,aAAe,CAC3B9M,MAAO,CAEL+M,UAAW,CAETrJ,MAAO,WAETsJ,UAAW,CACT1I,QAAS,WACThE,MAAO,CACL2M,aAAc,MAIpBtJ,QAAS,CACPuJ,QAAS,CACPC,KAAMC,KAAOC,KAAK,MAEpBC,UAAW,CACTH,KAAMC,KAAOG,IAAI,MAEnBC,KAAM,CACJL,KAAMC,KAAOC,KAAK,OAGtBI,MAAO,CACLR,aAAc,MAaLS,GAAiB,UARA,4CAQA,aAPD,uCASdxK,M,SC/BFyK,GAAwB,CACnClN,SAAU,CACRmN,cAAe,EACfzD,KAAM,EAAE,GAAI,EAAG,EAAG,GAAI,EAAG,GAAI,EAAG,EAAG,GAAI,EAAG,EAAG,EAAG,GAAI,EAAG,EAAG,EAAG,EAAG,KCP9D0D,GAAcC,IAAMC,YACxB,SAAC/N,EAAyBgO,GAYxB,IAAMC,EAAYD,EAEZxG,EAAK0G,mBACLC,EAAmBD,mBACnBE,EAAaF,mBACbG,EAAcH,mBAEdI,EAAItO,EAAMsO,EACVC,EAASvO,EAAMwO,IAIf5V,EAAO6V,uBAAY,kBAAOzO,EAAM0O,KAAO,EAAM1O,EAAMsO,EAAE1V,KAAK0E,aAAa,CAC3E0C,EAAM0O,KACN1O,EAAMsO,EAAE1V,OAGJ4P,EAAMxI,EAAM4L,OAASxR,OAAOqO,iBAAmB,EAG/CkG,EAAcF,uBAAY,WAC9BjH,EAAGjL,QAAU0R,EAAU1R,QAAQyL,WAAW,SAC1CzM,QAAQqT,MAAR,kCACC,CAACpH,EAAIyG,IAERY,qBAAU,WACRF,IAGAV,EAAU1R,QAAQuS,iBAChB,oBACA,SAACnS,GACCpB,QAAQD,MAAM,uBACdqB,EAAMc,oBAGR,GAEFwQ,EAAU1R,QAAQuS,iBAChB,wBACA,SAACnS,GACCpB,QAAQD,MAAM,yCACdqT,OAEF,KAKD,CAACV,EAAWU,IAEf,IAAMI,EAAgBN,uBAAY,WAChC,IAAMO,EAAMxH,EAAGjL,QACf6R,EAAW7R,QAAU0S,KAAgCD,EAAKrB,IAC1DU,EAAY9R,QAAU0S,KAAuBD,EAAK,CD3E3B,8EC6ErBhP,EAAMkP,aAER3T,QAAQqT,MAAR,8BACC,CAACpH,EAAIxH,EAAMkP,aAGdL,oBAAUE,EAAe,CAACA,IAE1B,IAAMI,EAAOjB,iBAAO,GACdkB,EAASlB,iBAAO,GAChBmB,EAAcnB,iBAAO,GAErBoB,EAAW,IAGXC,EAASd,uBACb,SAACe,GACC,IAAMR,EAAMxH,EAAGjL,QACTkT,EAAOpB,EAAY9R,QACnBmT,EAAOtB,EAAW7R,QAExB0S,KAA+BhB,EAAU1R,QAASiM,GAElDwG,EAAIW,SAAS,EAAG,EAAG1B,EAAU1R,QAAQgE,MAAO0N,EAAU1R,QAAQC,QAE9D,IAAMoT,EAAW,CACfC,WAAY,CAAC5B,EAAU1R,QAAQgE,MAAO0N,EAAU1R,QAAQC,QACxDsT,OAAQlX,IACRmX,SAAahW,IAARuU,EAAE5O,EAAkB,EAAI4O,EAAE5O,EAAEpC,WACjC0S,KAAM1B,EAAExW,GAAGwF,WACX2S,OAAQ3B,EAAElD,KACV8E,QAAS5B,EAAEtW,MAAMsF,WACjB6S,SAAU7B,EAAExC,QAGdkD,EAAIoB,WAAWX,EAAKY,SACpBpB,KAA6BD,EAAKS,EAAMC,GACxCT,KAAiBQ,EAAMG,GACvBX,KAAoBD,EAAKU,QAGV3V,IAAXwU,IACFa,EAAO7S,UACP8S,EAAY9S,SAAWiT,EAAOL,EAAK5S,QACnC4S,EAAK5S,QAAUiT,EAGXH,EAAY9S,SAAW+S,IAEzBf,GAAQa,EAAO7S,SAAW+S,EAAWD,EAAY9S,UAAUrD,QAAQ,IACnEkW,EAAO7S,QAAU,EACjB8S,EAAY9S,SAAW+S,IAO3BnB,EAAiB5R,QAAU+T,sBAAsBf,KAEnD,CAAC/H,EAAI8G,EAAG1V,EAAM4P,EAAK+F,EAAQe,EAAUrB,IAQvC,OALAY,qBAAU,WAER,OADAV,EAAiB5R,QAAU+T,sBAAsBf,GAC1C,kBAAMgB,qBAAqBpC,EAAiB5R,YAClD,CAACgT,IAGF,cAAC,IAASzH,OAAV,CACE5D,UAAU,WACVsM,IAAKxC,EACL5G,GAAIpH,EAAMoH,GACV9G,MAAK,aAEHmQ,OAAQzQ,EAAM0Q,SAAW,WAAa,QAEnC1Q,EAAMM,YAOnBuN,GAAY8C,YAAc,cAEX9C,UC5JT+C,GAAYC,cAAW,SAAC3N,GAAD,MAAY,CACvCE,KAAM,CACJ6J,aAAc/J,EAAMuK,MAAMR,kBAoDf6D,GAhDO,SAAC9Q,GAA4C,IACzDiO,EAAsCjO,EAAtCiO,UAAWlM,EAA2B/B,EAA3B+B,QAASa,EAAkB5C,EAAlB4C,KAASmO,EAD2B,YAClB/Q,EADkB,gCAE1D8D,EAAU8M,KAEhB,OACE,cAAClO,EAAA,EAAD,CAAMC,GAAIC,EAAV,SACE,cAACoO,GAAA,EAAD,CACE1Q,MAAO,CACLG,SAAU,WAEVD,OAAQ,KACRuC,OAAQ,SACRkO,KAAM,EACNC,OAAQ,EAER1U,OAtBO,IAuBP+D,MAvBO,IA0BP4Q,UHAqB,sCGCrBC,SAAU,UAIZrP,QAASA,EACTmC,UAAWJ,EAAQV,KAnBrB,SAwBE,cAAC,GAAD,yBACEgE,GAAIpH,EAAMoH,GACVsH,MAAM,EACN8B,IAAKvC,GACD8C,GAJN,IAOEzQ,MAAO,CAGLmQ,OAAQ,mBC5CL,SAASY,GAAcrR,GAEpC,IAAMiO,EAAYC,iBAA0B,MACtCoD,EAAgBpD,iBAA0B,MAEvCpW,EALmE,YAK3DkI,EAAMrE,SAASE,OAL4C,MAKnE/D,GALmE,cAM5CkI,EAAMrE,SAASI,SAN6B,GAMnEhE,EANmE,KAMnEA,EAAKmE,EAN8D,KAOnElE,EAPmE,YAOxDgI,EAAMrE,SAASQ,QAPyC,MAOnEnE,MACHoT,EAAOpL,EAAMoL,KACbC,EAAKrL,EAAM6L,MAAQ,EAAI,EAEvBqD,EAAa/D,GAAqB,CACtCC,KAAMA,EACNC,GAAIA,IAGAkG,EAAiBpG,GAAqB,CAC1CC,KAAMA,EACNC,GAAI,IAGAiD,EAAiC,CACrC1V,KAAMb,EACND,GAAIA,EACJ4H,EAAGM,EAAMN,EACT1H,MAAOA,EACPoT,KAAMA,EACNU,OAAQrM,EAAoBO,EAAM8L,SA3BwC,EA8B5C7L,oBAAS,GA9BmC,mBA8BrEyQ,EA9BqE,KA8B3D9U,EA9B2D,KAgCtE4V,EAAM/V,EAAiB,CAC3BC,UAAWuS,EACXtS,SAAUqE,EAAMrE,SAChBC,YAAaA,IAKf,OAFA6V,YAAWD,EAAI/U,SAAU+U,EAAIlT,QAG3B,cAACmO,GAAgBiF,SAAjB,UACG,gBAAG1F,EAAH,EAAGA,SAAH,OACC,sBACE9H,UAAU,WACV5D,MAAO,CACLG,SAAU,YAHd,UAME,cAAC,GAAD,CACE2G,GAAG,eACH8H,WAAYA,EACZtD,OAAQ5L,EAAM4L,OACd0C,EAAGA,EACHkC,IAAKvC,EACLyC,SAAUA,IAEZ,cAAC,GAAD,CACEtJ,GAAG,uBACH8H,WAAYqC,EACZ3F,OAAQI,EAASJ,OACjB0C,EAAGA,EACHL,UAAWqD,EACXvP,QAAS,kBAAM7F,EAAe,CAAEnE,EAAG,KACnC6K,KAAMoJ,EAASR,oBCrE3B,IAAMmG,GAAgB,SAACC,EAAgBC,GAAjB,MAAqC,CACzDD,SACAC,WAGWC,GAAoBH,GAAc,EAAG,KACrCI,GAAgBJ,GAAc,EAAG,IAuI/BK,GA7HmB,SAAC,GAOrB,IAAD,IANT5G,YAMS,MANF,IAME,MANGC,UAMH,MANQ,EAMR,MANWC,SAMX,MANe,GAMf,EALXG,IAKW,yDAJXwG,EAIW,uDAJM,CACfL,OAAQ,EACRC,OAAQ,KAGV,MAAM,4WAAN,OAWWxG,EAXX,0BAYaD,EAZb,uBAaUE,EAAEpS,QAAQ,GAbpB,+DAgBuBuS,EAhBvB,kCAiBqBwG,EAAeL,OAAO1Y,QAAQ,GAjBnD,kCAkBqB+Y,EAAeJ,OAAO3Y,QAAQ,GAlBnD,8pFCFagZ,GArBC,SAAClS,GAAD,OACd,cAAC0C,EAAA,EAAD,CAAMC,GAAI3C,EAAM4C,KAAhB,SACE,cAACvC,EAAA,EAAD,CACEC,MAAO,CACLG,SAAU,QACVqC,IAAK,EACLmO,KAAM,EACNvQ,QAAS,WACTqC,OAAQ,EACRV,WAAY,YACZ4K,aAAc,IACd3K,SAAU,SACV9B,OAAQ,KACR2R,WAAY,QAXhB,SAcE,cAAC,IAASC,IAAV,UAAepS,EAAMwO,WCPZ,SAAS6D,GAAmBrS,GAEzC,IAAMiO,EAAYC,iBAA0B,MACtCoD,EAAgBpD,iBAA0B,MAgBvCpW,EAnB6E,YAmBrEkI,EAAMrE,SAASE,OAnBsD,MAmB7E/D,GAnB6E,cAqBtDkI,EAAMrE,SAASI,SArBuC,GAqB7EhE,EArB6E,KAqB7EA,EAAKmE,EArBwE,KAsB7ElE,EAtB6E,YAsBlEgI,EAAMrE,SAASQ,QAtBmD,MAsB7EnE,MACHoT,EAAOpL,EAAMoL,KACbC,EAAKrL,EAAM6L,MAAQ,EAAI,EAEvBqD,EAAa8C,GACjB,CACE5G,KAAMA,EACNC,GAAIA,GAENrL,EAAMyL,cACNqG,IAEIP,EAAiBS,GACrB,CACE5G,KAAMA,EACNC,GAAI,GAENrL,EAAMyL,cACNsG,IAGIzD,EAAiC,CACrC1V,KAAMb,EACND,GAAIA,EACJE,MAAOA,EACPoT,KAAMA,EACNU,OAAQrM,EAAoBO,EAAM8L,SAhDkD,EAoDtD7L,oBAAS,GApD6C,mBAoD/EyQ,EApD+E,KAoDrE9U,EApDqE,KAsDhF4V,EAAM/V,EAAiB,CAC3BC,UAAWuS,EACXtS,SAAUqE,EAAMrE,SAEhBC,YAAaA,IAOf6V,YAAWD,EAAI/U,SAAU+U,EAAIlT,QAjEyD,MAuEhE2B,mBAAS,IAvEuD,mBAuE/EuO,EAvE+E,KAuE1ED,EAvE0E,KAyEtF,OACE,cAAC9B,GAAgBiF,SAAjB,UACG,gBAAG1F,EAAH,EAAGA,SAAH,OACC,sBACE9H,UAAU,WACV5D,MAAO,CACLG,SAAU,YAHd,UAME,cAAC,GAAD,CAAS+N,IAAKA,EAAK5L,KAAMoJ,EAASL,UAClC,cAAC,GAAD,CACEvE,GAAG,oBACH8H,WAAYA,EACZtD,OAAQI,EAASJ,OAEjB0C,EAAGA,EACHkC,IAAKvC,EAELO,IAAKD,EACLmC,SAAUA,IAEZ,cAAC,GAAD,CACEtJ,GAAG,4BACH8H,WAAYqC,EACZ3F,OAAQI,EAASJ,OACjB0C,EAAGA,EACHL,UAAWqD,EAEX1O,KAAMoJ,EAASR,YACfzJ,QAAS,kBAAM7F,EAAe,CAAEnE,EAAG,aCxG/C,IAAMua,GAAcC,QACW,cAA7BnY,OAAOC,SAASmY,UAEe,UAA7BpY,OAAOC,SAASmY,UAEhBpY,OAAOC,SAASmY,SAASC,MACvB,2DAIC,SAASC,GAASpU,GACvB,GAA6C,kBAAmBwH,UAAW,CAGzE,GADkB,IAAI6M,IAAIzI,mBAAwB9P,OAAOC,SAAS6O,MACpD9L,SAAWhD,OAAOC,SAAS+C,OAIvC,OAGFhD,OAAO0U,iBAAiB,QAAQ,WAC9B,IAAM8D,EAAK,UAAM1I,mBAAN,sBAEPoI,KAgEV,SAAiCM,EAAOtU,GAEtCuU,MAAMD,GACHzD,MAAK,SAAA2D,GAEJ,IAAMC,EAAcD,EAASE,QAAQC,IAAI,gBAEnB,MAApBH,EAASI,QACO,MAAfH,IAA8D,IAAvCA,EAAYvM,QAAQ,cAG5CV,UAAUqN,cAAcC,MAAMjE,MAAK,SAAAkE,GACjCA,EAAaC,aAAanE,MAAK,WAC7B/U,OAAOC,SAASkZ,eAKpBC,GAAgBZ,EAAOtU,MAG1BmV,OAAM,WACLlY,QAAQC,IACN,oEArFAkY,CAAwBd,EAAOtU,GAI/BwH,UAAUqN,cAAcC,MAAMjE,MAAK,WACjC5T,QAAQC,IACN,iHAMJgY,GAAgBZ,EAAOtU,OAM/B,SAASkV,GAAgBZ,EAAOtU,GAC9BwH,UAAUqN,cACPT,SAASE,GACTzD,MAAK,SAAAkE,GACJA,EAAaM,cAAgB,WAC3B,IAAMC,EAAmBP,EAAaQ,WACd,MAApBD,IAGJA,EAAiBE,cAAgB,WACA,cAA3BF,EAAiBG,QACfjO,UAAUqN,cAAca,YAI1BzY,QAAQC,IACN,iHAKE8C,GAAUA,EAAO2V,UACnB3V,EAAO2V,SAASZ,KAMlB9X,QAAQC,IAAI,sCAGR8C,GAAUA,EAAO4V,WACnB5V,EAAO4V,UAAUb,WAO5BI,OAAM,SAAAnY,GACLC,QAAQD,MAAM,4CAA6CA,MCzFjE,IAwCe6Y,GAxCkB,WAAO,IAAD,EACDrG,IAAM7N,UAAS,GADd,mBAC9BmU,EAD8B,KAClBC,EADkB,OAEKvG,IAAM7N,SAA+B,MAF1C,mBAE9BqU,EAF8B,KAEfC,EAFe,KAI/BC,EAAa,SAACnB,GAClB9X,QAAQC,IAAI,sDACZ6Y,GAAc,GACdE,EAAiBlB,EAAaoB,UAGhC5F,qBAAU,WACRtT,QAAQC,IAAI,sDACZ2X,GAAuB,CAAEc,SAAUO,MAClC,IAWH,OACE,cAAC7J,GAAA,EAAD,CAAU1F,KAAMmP,EAAYM,aAAc,CAAEC,SAAU,MAAOC,WAAY,UAAzE,SACE,cAAC/P,GAAA,EAAD,CACEgG,SAAS,OACTgK,OACE,cAAChT,EAAA,EAAD,CAAQ6B,MAAM,UAAUY,QAAQ,WAAWpD,KAAK,QAAQa,QAd7C,WAGjBuS,GAAiBA,EAAcQ,YAAY,CAAExT,KAAM,iBACnD+S,GAAc,GAEdja,OAAOC,SAASkZ,UAQV,oBAHJ,4C,0HCPA3C,I,OAAYC,cAAW,SAAC3N,GAAD,MAAY,CACvCE,KAAM,CACJ3C,SAAU,WACVyQ,OAAQhO,EAAMG,QAAQ,GACtBR,MAAOK,EAAMG,QAAQ,GACrB1C,QAAS,OACTC,cAAe,SACfJ,OAAQ,GAEVuU,eAAgB,CACd5D,UAAWzD,IAEbsH,gBAAiB,CACfC,WAAY,GACZC,cAAe,GACfC,aAAc,GACdC,YAAa,IAEfC,cAAe,CACb9U,MAAO,SAIL+U,GAAe,kBAAM,cAACnM,EAAA,EAAD,CAAS7I,MAAO,CAAEwB,UAAW,EAAGI,aAAc,OACnEqT,GAAa,SAACvV,GAAD,OACjB,eAACc,EAAA,EAAD,CAAMC,WAAS,EAACC,WAAW,SAASW,QAAQ,SAAS0B,QAAS,EAA9D,UAEE,cAACvC,EAAA,EAAD,CAAM0U,MAAI,EAAClV,MAAO,CAAEmD,YAAa,IAAjC,SACE,cAACzD,EAAMyV,KAAP,CAAY/R,MAAM,UAAUpB,SAAS,YAEvC,cAACxB,EAAA,EAAD,CAAM0U,MAAI,EAAV,SACE,cAACrT,EAAA,EAAD,CAAYuB,MAAM,UAAUY,QAAQ,SAAShE,MAAO,CAAEgC,SAAU,IAAhE,SACGtC,EAAM0V,cAMA,SAASC,GAAa3V,GACnC,IAAM8D,EAAU8M,KAD0D,EAG1C3Q,qBAH0C,mBAGnE2V,EAHmE,KAGzDC,EAHyD,KAKpEC,EAAc,kBAClB,cAACjU,EAAA,EAAD,CACE6I,UAAW,cAAC,KAAD,IACXhH,MAAM,YACNqS,gBAAc,QACdhU,QAAS,WACP/B,EAAMgW,SALV,oBAWIC,EAAc,kBAClB,cAACpU,EAAA,EAAD,CACE6I,UAAW,cAAC,KAAD,IACXhH,MAAM,UACNqS,gBAAc,QACdhU,QAAS,WACP/B,EAAMkW,aACNL,OAAY9b,IANhB,oBAaF,OACE,sBAAKmK,UAAWJ,EAAQV,KAAxB,UACE,cAAC+S,GAAA,EAAD,CACEJ,gBAAc,OACdK,gBAAc,OACd5R,aAAW,WACXtD,KAAK,QACLa,QAAS,SAACjC,GAAD,OAAO+V,EAAY/V,EAAEuW,gBAI9BnS,UAAWJ,EAAQiR,eATrB,SAWE,cAAC,KAAD,MAEF,cAACuB,GAAA,EAAD,CAAUrR,KAAMsN,QAAQqD,GAAxB,SACE,cAACW,GAAA,EAAD,CACEnP,GAAG,OACHwO,SAAUA,EACVY,aAAW,EACXvR,KAAMsN,QAAQqD,GACd7R,QAAS,kBAAM8R,OAAY9b,IAC3B2a,aAAc,CACZE,WAAY,QACZD,SAAU,UAEZ8B,gBAAiB,CACf9B,SAAU,SACVC,WAAY,SAZhB,SAeE,eAAC9T,EAAA,EAAD,CAAMC,WAAS,EAAChC,UAAU,SAASmF,UAAWJ,EAAQkR,gBAAtD,UACE,cAAClU,EAAA,EAAD,CAAM0U,MAAI,EAACzU,WAAS,EAACC,WAAW,SAASW,QAAQ,eAAjD,SACE,cAACb,EAAA,EAAD,CAAM0U,MAAI,EAAV,SACE,cAACrT,EAAA,EAAD,CAAYmC,QAAQ,KAAKhE,MAAO,CAAEgC,SAAU,IAA5C,+BAKJ,cAACmK,GAAgBiF,SAAjB,UACG,gBAAG/E,EAAH,EAAGA,YAAH,OZ3C2B,SACxCZ,GADwC,MAEX,CAC7B,CACE0J,KAAMiB,KACNrd,KAAM,YACNsd,QAAS,CACPnL,YAAaO,EAAgBP,YAC7BC,cAAeM,EAAgBN,cAC/BC,gBAAiBK,EAAgBL,kBAIrC,CACE+J,KAAMmB,KACNvd,KAAM,WACNsd,QAAS,CACPvL,KAAMW,EAAgBX,KACtBU,OAAQC,EAAgBD,OACxBF,OAAQG,EAAgBH,OACxBC,MAAOE,EAAgBF,MACvBF,QAASI,EAAgBJ,WYuBfkL,CADD,EAAgB9K,iBAC6B/R,KAAI,SAAC4F,GAAD,OAC9C,eAACkB,EAAA,EAAD,CAAM0U,MAAI,EAAV,UACE,cAAC,GAAD,IACA,cAAC,GAAD,CAAYC,KAAM7V,EAAE6V,KAAMC,MAAO9V,EAAEvG,OACnC,cAACyd,GAAA,EAAD,UACGhN,OAAOC,QAAQnK,EAAE+W,SAAS3c,KAAI,mCAAEgQ,EAAF,KAAK+M,EAAL,YAC7B,cAACC,GAAA,EAAD,yBAEE1W,MAAO,CAAE6R,WAAY,SAChB4E,GAHP,IAKE5V,SAAU,WAAW,IAAD,uBAANrB,EAAM,yBAANA,EAAM,sBAMJA,EAAEmX,OAAO,GANL,mBAMXC,EANW,KAOlB3b,QAAQqT,MAAR,UAAiB5E,EAAjB,OAAyBkN,GAGzBvK,GAAY,SAACwK,GAAD,mBAAC,eACRA,GADO,mBAETnN,EAAIkN,UAjBX,UACUlN,EADV,oBALUpK,EAAEvG,YAiCxB,cAAC,GAAD,IAEA,eAACyH,EAAA,EAAD,CACEC,WAAS,EACThC,UAAU,MACV4C,QAAQ,gBACRX,WAAW,UACXqC,QAAS,EALX,UAOE,cAACvC,EAAA,EAAD,CAAM0U,MAAI,EAAV,SACE,cAACM,EAAD,MAEF,cAAChV,EAAA,EAAD,CAAM0U,MAAI,EAAV,SACE,cAACS,EAAD,mBCZDmB,OA9If,WACE,IAAMlW,EtBdD,WACL,IAAMmW,EAA6B,kBAAXjd,OAElBkd,EAAU7I,uBACd,iBAAO,CACLlO,MAAO8W,EAAWjd,OAAOmd,gBAAaxd,EACtCyC,OAAQ6a,EAAWjd,OAAOod,iBAAczd,KAE1C,CAACsd,IARgE,EAW/BpX,mBAASqX,GAXsB,mBAW5DG,EAX4D,KAWhDC,EAXgD,KA6BnE,OAhBA7I,qBAAU,WACR,IAAKwI,EAEH,OAAO,aAKT,SAASM,IACPD,EAAcJ,KAIhB,OADAld,OAAO0U,iBAAiB,SAAU6I,GAC3B,kBAAMvd,OAAOwd,oBAAoB,SAAUD,MACjD,CAACL,EAASD,IAENI,EsBfMI,GADa,EvBqFG,WAAkC,IAAD,EACxC5X,mBAAS9F,KAD+B,mBACvD2d,EADuD,KAClDC,EADkD,KAgB9D,OAbAlJ,qBAAU,WAER,IAAMmJ,EAAU,kBAAMD,EAAO5d,MAI7B,OADAC,OAAO0U,iBAAiB,aAAckJ,GAC/B,kBAAM5d,OAAOwd,oBAAoB,aAAcI,MACrD,IAMI,CAACF,EAFSrJ,uBAAY,SAACwJ,GAAD,OAAS7d,OAAOC,SAASC,KAAO2d,IAAK,KuB5F1CC,GAPE,mBAOnBJ,EAPmB,KAUpBK,GAVoB,KvBkF1B1J,uBAAY,SAACwJ,GAAD,OAAQ7d,OAAOge,QAAQC,aAAa,KAAMrR,SAAS0O,MAAOuC,KAAK,KuBtErEK,EAAa/S,mBAAQ,kBAAM,IAAI/L,IAAoB,IAGnD+e,EAAa9J,uBACjB,SAACpV,EAAcC,GACbgf,EAAWpe,aAAab,EAAMC,GAC9B,IAAMgV,EAAIgK,EAAWE,gBAErBL,EAAkB7J,KAEpB,CAAC6J,EAAmBG,IAIhBG,EAAU,SAACnf,GAAD,OAAgCif,EAAW,IAAKjf,IAC1Dof,EAAU,SAACpf,GAAD,OAAgCif,EAAW,IAAKjf,IAE1Dqf,EAA2C,CAC/C9c,OAAQ+c,aAA2B,iBAAO,CACxC9gB,GAAID,EAAaC,GACjBwG,OAAQhG,EAAeC,QAAQT,GAC/B+gB,OAAQJ,MAGV1c,SAAU6c,aAA6B,iBAAO,CAC5C7gB,EAAGF,EAAaE,EAChBiE,QAAS,GACTC,QAAS,IACTqC,OAAQhG,EAAeC,QAAQK,KAC/BigB,OAAQJ,MAGVtc,QAASyc,aAAiC,iBAAO,CAC/C5gB,MAAOH,EAAaG,MACpBsG,OAAQhG,EAAeC,QAAQM,IAC/BggB,OAAQJ,OAINK,EAAsC,CAC1Cjd,OAAQ+c,aAA2B,iBAAO,CACxC9gB,GAAID,EAAaC,GACjBwG,OAAQhG,EAAeC,QAAQT,GAC/B+gB,OAAQH,MAGV3c,SAAU6c,aAA6B,iBAAO,CAC5C7gB,EAAGF,EAAaE,EAChBiE,QAAS,GACTC,QAAS,IACTqC,OAAQhG,EAAeC,QAAQK,KAC/BigB,OAAQH,MAGVvc,QAASyc,aAAiC,iBAAO,CAC/C5gB,MAAOH,EAAaG,MACpBsG,OAAQhG,EAAeC,QAAQM,IAC/BggB,OAAQH,OAIZ7J,qBAAU,WAGRyJ,EAAW5e,gBACX6B,QAAQC,IAAR,sCAA2CrB,MAG3CqF,EAAYmZ,EAAoBL,EAAW7e,GAAX,EAAmBH,GACnDkG,EAAYsZ,EAAeR,EAAW7e,GAAX,EAAmBH,KAG7C,CAACwe,IAEJ,IAtF0B,EA2FM7X,oBAAS,GA3Ff,mBA2FnB8Y,EA3FmB,KA2FTC,EA3FS,KA+F1B,OACE,eAACC,EAAA,EAAD,CAAe/V,MAAOA,GAAtB,UACE,cAAC,GAAD,IACA,cAAC,GAAD,UACE,eAACpC,EAAA,EAAD,CAAMC,WAAS,EAAf,UACE,cAAC0L,GAAgBiF,SAAjB,UACG,gBAAG1F,EAAH,EAAGA,SAAH,OAEC,cADA,CACClL,EAAA,EAAD,CACE0U,MAAI,EACJzU,WAAS,EACThC,WACGmC,EAAKX,OAAS,IAAMW,EAAK1E,QAAU,GAAK,iBAAmB,MAE9DmF,QAAQ,SACRuC,UAAU,WACV5D,MAAO,CACLG,SAAU,YATd,UAYE,cAAC,EAAD,CACEmC,KAAMoJ,EAASN,gBACf1J,WAAY2W,IAEd,cAAC7X,EAAA,EAAD,CAAM0U,MAAI,EAAC0D,IAAE,EAAChV,UAAU,WAAxB,SACE,cAACmO,GAAD,aAAoB1W,SAAUgd,GAAwB3M,MAExD,cAAClL,EAAA,EAAD,CAAM0U,MAAI,EAAC0D,IAAE,EAAChV,UAAU,WAAxB,SACE,cAACmN,GAAD,aACE3R,EAAGiZ,EAAmB9c,OAAO,GAAG/D,GAChC6D,SAAUmd,GACN9M,YAOd,cAAC2J,GAAD,CAAcK,MAAO,kBA9C3BxW,EAAYmZ,EAAoB9gB,QAChC2H,EAAYsZ,EAAejhB,IA6Ceqe,WAAY,kBAxC/B8C,GAAaD,MA0C9B,cAAChU,GAAD,CAAYC,KAAM,CAAC+T,EAAUC,cC9JvCG,IAAS5J,OACP,cAAC,IAAM6J,WAAP,UACE,cAAC,GAAD,MAEFpS,SAASqS,eAAe,W","file":"static/js/main.15fd99bf.chunk.js","sourcesContent":["import { RgbColor } from 'react-colorful';\r\nimport { ViewerLocation } from './types';\r\n\r\n// this multiplier subdivides the screen space into smaller increments\r\n// to allow for velocity calculations to not immediately decay, due to the\r\n// otherwise small scale that is being mapped to the screen.\r\n// export const screenScaleMultiplier = 1e-7;\r\n// TL;DR this was a workaround - react-spring allows for \"precision\"\r\n//       to be defined in each spring configuration, which is:\r\n//       > The smallest velocity before the animation is considered \"not moving\"\r\nexport const defaultPrecision = 1e-7;\r\n\r\nexport const viewerOrigin: ViewerLocation = {\r\n  xy: [0, 0],\r\n  z: 1,\r\n  theta: 0,\r\n};\r\n\r\nexport const defaultMandelbrotStart: ViewerLocation = {\r\n  xy: [0.2361652, 0.5633767],\r\n  z: 4,\r\n  theta: 0.2,\r\n};\r\nexport const defaultJuliaStart: ViewerLocation = {\r\n  xy: [0.4364131, -0.6468786],\r\n  z: 4,\r\n  theta: 2.12,\r\n};\r\n// indexable viewer start object\r\nexport const defaultViewerStart: { [k: string]: ViewerLocation } = {\r\n  m: defaultMandelbrotStart,\r\n  j: defaultJuliaStart,\r\n};\r\n\r\nexport const springsConfigs = {\r\n  /** used when the values are animated to a point, includes decay */\r\n  default: {\r\n    xy: { mass: 1, tension: 500, friction: 75, precision: defaultPrecision },\r\n    zoom: { mass: 1, tension: 300, friction: 40 },\r\n    rot: { mass: 1, tension: 400, friction: 75 },\r\n  },\r\n  /** used when a user is interacting with the view */\r\n  user: {\r\n    xy: { mass: 1, tension: 2000, friction: 75, precision: defaultPrecision },\r\n    zoom: { mass: 1, tension: 1200, friction: 75 },\r\n    rot: { mass: 1, tension: 1200, friction: 75 },\r\n  },\r\n  // default and decay are merged to give them single \"non-user\" values\r\n  // decay: {\r\n  //   /** used after the user has let go of the view, decaying */\r\n  //   xy: { mass: 1, tension: 500, friction: 75 },\r\n  //   zoom: { mass: 1, tension: 300, friction: 50 },\r\n  //   rot: { mass: 1, tension: 400, friction: 75 },\r\n  // },\r\n};\r\n\r\nexport const defaultShadingColour: RgbColor = { r: 0, g: 180, b: 255 };\r\n\r\n// export const defaultSpringConfig = { mass: 1, tension: 100, friction: 200 };\r\n\r\n// export const xyCtrlSpringConfig = { mass: 1, tension: 2000, friction: 100 };\r\n// export const xyCtrlSpringDecayConfig = { mass: 1, tension: 500, friction: 75 };\r\n\r\n// default number of numbers after the decimal point\r\nexport const defaultFloatFixedPrecision = 7;\r\nexport const shortFloatFixedPrecision = 2;\r\n\r\nexport const toFloatDisplay = (n: number, p: number): number => +n.toFixed(p);\r\n\r\nexport const toFloatDisplayDefault = (n: number): number =>\r\n  toFloatDisplay(n, defaultFloatFixedPrecision);\r\n\r\nexport const toFloatDisplayShort = (n: number): number =>\r\n  toFloatDisplay(n, shortFloatFixedPrecision);\r\n","import { useCallback, useEffect, useState } from 'react';\r\nimport { ReactUseStateType, ViewerLocation, XYType } from './types';\r\nimport {\r\n  defaultJuliaStart,\r\n  defaultMandelbrotStart,\r\n  defaultViewerStart,\r\n  toFloatDisplayDefault,\r\n  toFloatDisplayShort,\r\n} from './values';\r\n\r\nexport class NamedHashURLViewer {\r\n  name: string;\r\n  v: ViewerLocation;\r\n\r\n  constructor(name: string, v: ViewerLocation) {\r\n    this.name = name;\r\n    this.v = v;\r\n  }\r\n\r\n  /**\r\n   * convert a viewer's state into a defined URL representation\r\n   * @param namedViewer the viewer object to be converted\r\n   */\r\n  asHashURL(): string {\r\n    const { xy, z, theta } = this.v;\r\n    return `/${this.name}@${xy[0]},${xy[1]},${z},${theta}`;\r\n  }\r\n}\r\n\r\nexport class ViewerURLManager {\r\n  vs: {\r\n    [k: string]: NamedHashURLViewer;\r\n  };\r\n\r\n  constructor() {\r\n    this.vs = {};\r\n    this.updateFromURL();\r\n  }\r\n\r\n  asFullHashURL(): string {\r\n    return `#${this.vs['m'].asHashURL()}${this.vs['j'].asHashURL()}`;\r\n  }\r\n\r\n  updateFromURL(): void {\r\n    const params = currentViewerState();\r\n    this.vs['m'] = new NamedHashURLViewer(\r\n      'm',\r\n      params['m'] || { ...defaultMandelbrotStart },\r\n    );\r\n    this.vs['j'] = new NamedHashURLViewer('j', params['j'] || { ...defaultJuliaStart });\r\n  }\r\n\r\n  updateViewer(name: string, v: Partial<ViewerLocation>): void {\r\n    // console.log('updateViewer');\r\n    const { xy, z, theta } = v;\r\n    // const [[{ xy }], [{ z }], [{ theta }]] = [xyC]\r\n    // const [xy] = [xyCtrl?.xy];\r\n    const newV = this.vs[name].v;\r\n    if (xy !== undefined) newV.xy = xy.map((n) => toFloatDisplayDefault(n)) as XYType;\r\n    if (z !== undefined) newV.z = toFloatDisplayShort(z);\r\n    if (theta !== undefined) newV.theta = toFloatDisplayShort(theta);\r\n\r\n    this.vs[name].v = newV;\r\n  }\r\n\r\n  updateFromViewer(m: Partial<ViewerLocation>, j: Partial<ViewerLocation>): void {\r\n    this.updateViewer('m', m);\r\n    this.updateViewer('j', j);\r\n  }\r\n}\r\n\r\n// returns the current hash location in a normalized form\r\n// (excluding the leading '#' symbol)\r\nexport const currentLocation = (): string => {\r\n  // console.log(window.location);\r\n  const l = window.location.hash.replace('#', '') || '';\r\n  return l;\r\n};\r\n\r\nexport const currentViewerState = (): { [k: string]: ViewerLocation } => {\r\n  const l = currentLocation();\r\n  // key 'k' used to index which viewer is parsed\r\n  const viewerParams: { [k: string]: ViewerLocation } = {};\r\n  // actually parse the hash\r\n  try {\r\n    // separate each viewer's string, remove the empty string from the start\r\n    // (/abc/123) split => ['', 'abc', '123']\r\n    const qs = l.split('/').filter((v) => v.length > 0);\r\n    qs.forEach((s) => {\r\n      // viewer [name, params] is separated by @ sign\r\n      // assume this first split must succeed for any input to be parseable\r\n      const [v, params] = s.split('@');\r\n      const parsedVals = params.split(',').map(Number);\r\n      // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/some\r\n      if (parsedVals.some(isNaN)) {\r\n        // at least one parsing fail, stop now\r\n        viewerParams[v] = defaultViewerStart[v];\r\n      } else {\r\n        const [x, y, z, t] = parsedVals;\r\n        viewerParams[v] = { xy: [x, y] as XYType, z: z, theta: t };\r\n      }\r\n    });\r\n  } catch (error) {\r\n    // uhhhh, something's wrong\r\n    console.log(error);\r\n  }\r\n  return viewerParams;\r\n};\r\n\r\n// non-reloading hash change\r\nexport const useHashNavigator = (): ((to: string) => void) =>\r\n  useCallback((to) => window.history.replaceState(null, document.title, to), []);\r\n\r\n// https://github.com/molefrog/wouter#customizing-the-location-hook\r\nexport const useHashLocation = (): ReactUseStateType<string> => {\r\n  const [loc, setLoc] = useState(currentLocation());\r\n\r\n  useEffect(() => {\r\n    // this function is called whenever the hash changes\r\n    const handler = () => setLoc(currentLocation());\r\n\r\n    // subscribe to hash changes\r\n    window.addEventListener('hashchange', handler);\r\n    return () => window.removeEventListener('hashchange', handler);\r\n  }, []);\r\n\r\n  // remember to wrap your function with `useCallback` hook\r\n  // a tiny but important optimization\r\n  const navigate = useCallback((to) => (window.location.hash = to), []);\r\n\r\n  return [loc, navigate];\r\n};\r\n","import _ from 'lodash';\r\nimport { RefObject, useCallback, useEffect, useState } from 'react';\r\nimport { RgbColor } from 'react-colorful';\r\nimport { addV, subV } from 'react-use-gesture';\r\nimport {\r\n  FullGestureState,\r\n  Handlers,\r\n  StateKey,\r\n  UseGestureConfig,\r\n  Vector2,\r\n} from 'react-use-gesture/dist/types';\r\nimport { Vector, vRotate, vScale } from 'vec-la-fp';\r\nimport { RgbFloatColour, ViewerControlSprings, ViewerLocation } from './types';\r\nimport { springsConfigs } from './values';\r\n\r\n// https://usehooks.com/useWindowSize/\r\nexport function useWindowSize(): { width?: number; height?: number } {\r\n  const isClient = typeof window === 'object';\r\n\r\n  const getSize = useCallback(\r\n    () => ({\r\n      width: isClient ? window.innerWidth : undefined,\r\n      height: isClient ? window.innerHeight : undefined,\r\n    }),\r\n    [isClient],\r\n  );\r\n\r\n  const [windowSize, setWindowSize] = useState(getSize);\r\n\r\n  useEffect(() => {\r\n    if (!isClient) {\r\n      // return false;\r\n      return () => {\r\n        // do nothing\r\n      };\r\n    }\r\n\r\n    function handleResize() {\r\n      setWindowSize(getSize());\r\n    }\r\n\r\n    window.addEventListener('resize', handleResize);\r\n    return () => window.removeEventListener('resize', handleResize);\r\n  }, [getSize, isClient]); // Empty array ensures that effect is only run on mount and unmount\r\n\r\n  return windowSize;\r\n}\r\n\r\nexport interface GenericTouchBindParams {\r\n  domTarget: RefObject<HTMLCanvasElement>;\r\n  controls: ViewerControlSprings;\r\n  // screenScaleMultiplier: number;\r\n  // gl: any,\r\n  setDragging: React.Dispatch<React.SetStateAction<boolean>>;\r\n}\r\n\r\nexport interface GenericTouchBindReturn {\r\n  handlers: Handlers;\r\n  config: UseGestureConfig;\r\n}\r\n\r\n// --------------------------------------------------------------------------\r\n// https://gist.github.com/evdokimovm/0e7163faf7c8fe24e41e6b68461e4feb\r\n// Convert from degrees to radians.\r\nconst degToRad = (deg: number): number => (deg * Math.PI) / 180;\r\n// Math.radians(90); // 1.5707963267948966\r\n\r\n// Convert from radians to degrees.\r\n// eslint-disable-next-line\r\nconst radToDeg = (rad: number): number => (rad * 180) / Math.PI;\r\n// Math.degrees(3.141592653589793); // 180\r\n// --------------------------------------------------------------------------\r\n\r\n// a touchbind for re-using across renderers\r\nexport function genericTouchBind({\r\n  domTarget,\r\n  controls,\r\n  setDragging,\r\n}: GenericTouchBindParams): GenericTouchBindReturn {\r\n  const [{ xy }, setControlXY] = controls.xyCtrl;\r\n  const [{ z, minZoom, maxZoom }, setControlZoom] = controls.zoomCtrl;\r\n  const [{ theta }, setControlRot] = controls.rotCtrl;\r\n\r\n  const zoomMult = { in: 3e-3, out: 1e-3 };\r\n\r\n  // used to have screenScaleMultiplier here\r\n  const getRealZoom = (z: number) => (domTarget.current?.height || 100) * z;\r\n  // * screenScaleMultiplier;\r\n\r\n  return {\r\n    handlers: {\r\n      // prevent some browser events such as swipe-based navigation or\r\n      // pinch-based zoom and instead redirect them to this handler\r\n      // onDragStart: ({ event }: FullGestureState<StateKey<'drag'>>) =>\r\n      //   event?.preventDefault(),\r\n      // onPinchStart: ({ event }: FullGestureState<StateKey<'pinch'>>) =>\r\n      //   event?.preventDefault(),\r\n      // onWheelStart: ({ event }: FullGestureState<StateKey<'wheel'>>) =>\r\n      //   event?.preventDefault(),\r\n\r\n      onPinch: ({\r\n        event,\r\n        da: [d, a],\r\n        vdva: [vd, va],\r\n        down,\r\n        // delta: [dd, da],\r\n        movement: [md, ma],\r\n        delta: [dd, da],\r\n        first,\r\n        // initial, // initial [d, a]\r\n        origin,\r\n        // movement, //: [mx, my],\r\n        memo = {\r\n          xy: xy.getValue(),\r\n          z: z.getValue(),\r\n          t: theta.getValue(),\r\n          a: 0,\r\n          o: [0, 0] as Vector2,\r\n        },\r\n      }: FullGestureState<StateKey<'pinch'>>) => {\r\n        // disable native browser events\r\n        event && event.preventDefault();\r\n\r\n        if (first) {\r\n          // remember the angle, location at which the pinch gesture starts\r\n          // memo.a = a;\r\n          memo.o = origin;\r\n        }\r\n\r\n        // console.log(subV(origin, initial));\r\n        // console.log(initial);\r\n        // console.log(origin);\r\n        // console.log(md);\r\n        // console.log(ma);\r\n        // const zd = md * 1e-2;\r\n\r\n        // new zoom is the product of initial zoom and a function of the delta since the pinch\r\n        //   (initial zoom) exponentially changed by md, with linear and exponential multipliers\r\n        //     linear multiplier:\r\n        //     exponential multiplier: scale faster as pinch becomes more distant\r\n        //     if decreasing, scale must decrease more slowly\r\n        // const em = 1.33;\r\n        // const newZ =\r\n        //   memo.z * (1 + Math.sign(md) * 1e-2 * Math.abs(md) ** (md <= 0 ? 1 / em : em)); //(1 - zdelta * Math.abs(zdelta));\r\n        const newZ = _.clamp(memo.z + md * 1e-2, 0.5, 100_000) ** (1 + md * 1e-3); //(1 - zdelta * Math.abs(zdelta));\r\n        // console.log(Math.abs(md * 1e-2));\r\n        // console.log(\r\n        //   md.toFixed(2) + ' => ' + 1e-2 * Math.abs(md) ** (md <= 0 ? 0.8 : 1.1),\r\n        // );\r\n        console.log(newZ);\r\n        const newZclamp = _.clamp(newZ, minZoom.getValue(), maxZoom.getValue());\r\n\r\n        const realZoom = getRealZoom(newZclamp);\r\n\r\n        // get movement of pointer origin for panning\r\n        const [px, py]: Vector2 = vScale(-2 / realZoom, subV(origin, memo.o));\r\n        const relMove: Vector2 = [px, -py];\r\n\r\n        setControlXY({\r\n          xy: addV(memo.xy, vRotate(theta.getValue(), relMove)),\r\n          immediate: false,\r\n        });\r\n\r\n        setControlZoom({\r\n          z: newZclamp,\r\n          immediate: false,\r\n          config: down ? springsConfigs.user.zoom : springsConfigs.default.zoom,\r\n        });\r\n\r\n        setControlRot({\r\n          theta: memo.t + degToRad(ma),\r\n          // fixes issues with wrapping around from (0) to (-2pi)\r\n          immediate: false,\r\n          config: down ? springsConfigs.user.rot : springsConfigs.default.rot,\r\n        });\r\n\r\n        return memo;\r\n      },\r\n\r\n      onWheel: ({\r\n        event,\r\n        movement: [, my],\r\n        active,\r\n        shiftKey,\r\n        memo = { zoom: z.getValue(), t: theta.getValue() },\r\n      }: FullGestureState<StateKey<'wheel'>>) => {\r\n        // disable native browser events\r\n        event && event.preventDefault();\r\n\r\n        if (shiftKey) {\r\n          // if shift is pressed, rotate instead of zoom\r\n          const newT = memo.t + my * 1.5e-3;\r\n\r\n          setControlRot({\r\n            theta: newT,\r\n            config: active ? springsConfigs.user.rot : springsConfigs.default.rot,\r\n            immediate: false,\r\n          });\r\n        } else {\r\n          // set different multipliers based on zoom direction\r\n          // mouse movement negative = move up the page = zoom in\r\n          //                                   zoom        in           out\r\n          const newZ = memo.zoom * (1 - my * (my < 0 ? zoomMult.in : zoomMult.out));\r\n\r\n          setControlZoom({\r\n            z: _.clamp(newZ, minZoom.getValue(), maxZoom.getValue()),\r\n            config: active ? springsConfigs.user.zoom : springsConfigs.default.zoom,\r\n            // reset immediate value from warp function\r\n            immediate: false,\r\n          });\r\n        }\r\n        return memo;\r\n      },\r\n\r\n      onDrag: ({\r\n        event,\r\n        down,\r\n        movement,\r\n        direction: [dx, dy],\r\n        velocity,\r\n        pinching,\r\n        last,\r\n        cancel,\r\n        memo = { xy: xy.getValue(), theta: theta.getValue() },\r\n      }: FullGestureState<StateKey<'drag'>>) => {\r\n        // disable native browser events\r\n        event && event.preventDefault();\r\n\r\n        // let pinch handle movement\r\n        if (pinching) cancel && cancel();\r\n        // change according to this formula:\r\n        // move (x, y) in the opposite direction of drag (pan with cursor)\r\n        // divide by canvas size to scale appropriately\r\n        // multiply by 2 to correct scaling on viewport (?)\r\n        // use screen multiplier for more granularity\r\n        const realZoom = getRealZoom(z.getValue());\r\n\r\n        const [px, py]: Vector = vScale(-2 / realZoom, movement);\r\n        // const relMove: Vector = vScale(2 / realZoom, movement);\r\n\r\n        const relMove: Vector = [px, -py];\r\n        // const relDir: Vector = [dx, -dy];\r\n\r\n        const t = theta.getValue();\r\n\r\n        const vecXY = addV(memo.xy, vRotate(t, relMove)); // add the displacement to the starting position\r\n        // const velXY = vScale(velocity, vNorm(vecXY))\r\n\r\n        setControlXY({\r\n          // add to the current position the relative displacement (relMove), rotated by theta,\r\n          // to maintain the correct displacement direction (without this it would move as if theta=0)\r\n          xy: vecXY,\r\n          // immediate: down, // immediately apply if the gesture is active\r\n          config: down ? springsConfigs.user.xy : springsConfigs.default.xy,\r\n          // reset immediate value from warp function\r\n          immediate: false,\r\n          //  {\r\n          //   // velocity also needs to be rotated according to theta\r\n          //   // -@ts-expect-error - velocity should be `[number, number]`, but only `number` allowed\r\n          //   // velocity: vScale(-velocity / realZoom, vRotate(t, relDir)), // set the velocity (gesture momentum)\r\n          //   // velocity: vMag(vScale(-velocity / realZoom, vRotate(t, relDir))), // set the velocity (gesture momentum)\r\n          //   // velocity: velocity / screenScaleMultiplier, // set the velocity (gesture momentum)\r\n          //   // mass: down ? 1 : 5,\r\n          //   ...xyCtrlSpringConfig,\r\n          //   tension: down ? xyCtrlSpringConfig.tension : xyCtrlSpringConfig.tension / 2,\r\n          //   // -@ts-expect-error - decay is undocumented?\r\n          //   // decay: true,\r\n          // },\r\n        });\r\n\r\n        // tell the renderer that it's being dragged on\r\n        setDragging(down);\r\n\r\n        return memo;\r\n      },\r\n    },\r\n    config: {\r\n      eventOptions: { passive: false, capture: false },\r\n      domTarget: domTarget,\r\n      // The config object passed to useGesture has drag, wheel, scroll, pinch and move keys\r\n      // for specific gesture options. See here for more details.\r\n      // drag: {\r\n      //   bounds,\r\n      //   rubberband: true,\r\n      // }\r\n    },\r\n  };\r\n}\r\n\r\n/**\r\n * Warps the given controller to a desired viewer location.\r\n * @param controls The controller to be animated\r\n * @param location The (partial) viewer location to warp to: xy, zoom, theta\r\n * @param immediate Should the update happen immediately? (Useful for testing)\r\n */\r\nexport const warpToPoint = (\r\n  controls: ViewerControlSprings,\r\n  { xy, z, theta }: Partial<ViewerLocation>,\r\n  immediate = false,\r\n): void => {\r\n  // can't do a simple \"if (x)\" check since values could be zero (evaluates to \"false\")\r\n  if (xy !== undefined) {\r\n    controls.xyCtrl[1]({\r\n      // use screen scale multiplier for a simpler API\r\n      xy: xy,\r\n      config: springsConfigs.default.xy,\r\n      immediate: immediate,\r\n    });\r\n  }\r\n  if (z !== undefined) {\r\n    controls.zoomCtrl[1]({\r\n      z: z,\r\n      config: springsConfigs.default.zoom,\r\n      immediate: immediate,\r\n    });\r\n  }\r\n  if (theta !== undefined) {\r\n    controls.rotCtrl[1]({\r\n      theta: theta,\r\n      config: springsConfigs.default.rot,\r\n      immediate: immediate,\r\n    });\r\n  }\r\n};\r\n\r\n// no longer using screenScaleMultiplier\r\n// export const screenToReal = (x: number): number => x * screenScaleMultiplier;\r\n// export const RealToScreen = (x: number): number => x / screenScaleMultiplier;\r\n\r\nexport const Rgb255ColourToFloat = (c: RgbColor): RgbFloatColour =>\r\n  [c.r, c.g, c.b].map((e) => e / 255) as RgbFloatColour;\r\n","import { Button, Card, Grid, TextField } from '@material-ui/core';\r\nimport React, { useState } from 'react';\r\nimport { ChangeCoordinatesCardProps } from '../../common/info';\r\nimport { warpToPoint } from '../../common/utils';\r\nimport { defaultMandelbrotStart } from '../../common/values';\r\n\r\nconst ChangeCoordinatesCard = (props: ChangeCoordinatesCardProps): JSX.Element => {\r\n  const [xy, setXY] = useState(defaultMandelbrotStart.xy);\r\n  const [x, y] = xy;\r\n  const [zoom, setZoom] = useState(defaultMandelbrotStart.z);\r\n  const [theta, setTheta] = useState(defaultMandelbrotStart.theta);\r\n\r\n  return (\r\n    <Card\r\n      style={{\r\n        width: 'auto',\r\n        zIndex: 1300,\r\n        position: 'relative',\r\n        padding: 8,\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        flexShrink: 1,\r\n        // borderRadius: 100,\r\n      }}\r\n    >\r\n      <Grid container direction=\"column\" alignItems=\"center\">\r\n        <TextField\r\n          size=\"small\"\r\n          style={{ width: '12ch' }}\r\n          onChange={(e) => setXY(([x, y]) => [Number(e.target.value), y])}\r\n          type=\"number\"\r\n          defaultValue={x}\r\n          inputProps={{ step: 0.01 }}\r\n          label=\"x\"\r\n        />\r\n        <TextField\r\n          size=\"small\"\r\n          style={{ width: '12ch' }}\r\n          onChange={(e) => setXY(([x, y]) => [x, Number(e.target.value)])}\r\n          type=\"number\"\r\n          defaultValue={y}\r\n          inputProps={{ step: 0.01 }}\r\n          label=\"y\"\r\n        />\r\n        <Grid container direction=\"row\" justify=\"space-around\">\r\n          <TextField\r\n            size=\"small\"\r\n            style={{ width: '5ch' }}\r\n            onChange={(e) => setZoom(Number(e.target.value))}\r\n            type=\"number\"\r\n            defaultValue={zoom}\r\n            inputProps={{ min: 0 }}\r\n            label=\"zoom\"\r\n          />\r\n          <TextField\r\n            size=\"small\"\r\n            style={{ width: '5ch' }}\r\n            onChange={(e) => setTheta(Number(e.target.value))}\r\n            type=\"number\"\r\n            defaultValue={theta}\r\n            inputProps={{ step: 0.1 }}\r\n            label=\"theta\"\r\n          />\r\n        </Grid>\r\n        <Button\r\n          style={{ marginTop: 12 }}\r\n          onClick={() => warpToPoint(props.mandelbrot, { xy: xy, z: zoom, theta: theta })}\r\n        >\r\n          Go\r\n        </Button>\r\n      </Grid>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default ChangeCoordinatesCard;\r\n","import { Card, Typography } from '@material-ui/core';\r\nimport React from 'react';\r\nimport { animated } from 'react-spring';\r\nimport { CoordinatesCardProps } from '../../common/info';\r\nimport {\r\n  defaultFloatFixedPrecision,\r\n  shortFloatFixedPrecision,\r\n} from '../../common/values';\r\n\r\nconst CoordinatesCard = (props: CoordinatesCardProps): JSX.Element => {\r\n  return (\r\n    <Card\r\n      style={{\r\n        width: 'auto',\r\n        zIndex: 1300,\r\n        position: 'relative',\r\n        padding: '6px 12px',\r\n        marginBottom: 8,\r\n        // borderRadius: 100,\r\n      }}\r\n    >\r\n      <Typography align=\"right\" style={{ fontFamily: 'monospace', fontSize: '1.2rem' }}>\r\n        {/* https://www.typescriptlang.org/docs/handbook/basic-types.html#tuple */}\r\n        {/* https://www.typescriptlang.org/docs/handbook/2/objects.html#tuple-types */}\r\n        <animated.span>\r\n          {props.mandelbrot.xy.interpolate(\r\n            // @ts-expect-error: Function call broken in TS, waiting till react-spring v9 to fix\r\n            (x, y) => `${x.toFixed(defaultFloatFixedPrecision)} : x`,\r\n          )}\r\n        </animated.span>\r\n        <br />\r\n        <animated.span>\r\n          {props.mandelbrot.xy.interpolate(\r\n            // @ts-expect-error: Function call broken in TS, waiting till react-spring v9 to fix\r\n            (x, y) => `${y.toFixed(defaultFloatFixedPrecision)} : y`,\r\n          )}\r\n        </animated.span>\r\n        <br />\r\n        <animated.span>\r\n          {props.mandelbrot.zoom.interpolate(\r\n            (z) => `${z.toFixed(shortFloatFixedPrecision)} : z`,\r\n          )}\r\n        </animated.span>\r\n        <br />\r\n        <animated.span>\r\n          {props.mandelbrot.theta.interpolate(\r\n            (t) => `${t.toFixed(shortFloatFixedPrecision)} : t`,\r\n          )}\r\n        </animated.span>\r\n      </Typography>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default CoordinatesCard;\r\n\r\n// <Card\r\n//   style={{\r\n//     width: 'auto',\r\n//     position: 'absolute',\r\n//     zIndex: 2,\r\n//     right: 0,\r\n//     top: 0,\r\n//     margin: 20,\r\n//     padding: 8,\r\n//     display: settings.coords[0] ? 'block' : 'none',\r\n//     // borderRadius: 100,\r\n//   }}\r\n// >\r\n//   <Typography align=\"right\">\r\n//     {/* https://www.typescriptlang.org/docs/handbook/basic-types.html#tuple */}\r\n//     {/* https://www.typescriptlang.org/docs/handbook/2/objects.html#tuple-types */}\r\n//     <animated.span>\r\n//       {mandelbrotControls.xyCtrl[0].xy.interpolate(\r\n//         // @ts-expect-error: Function call broken in TS, waiting till react-spring v9 to fix\r\n//         (x, y) => `${(x * screenScaleMultiplier).toFixed(7)} : x`,\r\n//       )}\r\n//     </animated.span>\r\n//     <br />\r\n//     <animated.span>\r\n//       {mandelbrotControls.xyCtrl[0].xy.interpolate(\r\n//         // @ts-expect-error: Function call broken in TS, waiting till react-spring v9 to fix\r\n//         (x, y) => `${(y * screenScaleMultiplier).toFixed(7)} : y`,\r\n//       )}\r\n//     </animated.span>\r\n//   </Typography>\r\n// </Card>;\r\n","import { Grow } from '@material-ui/core';\r\nimport React from 'react';\r\nimport { ViewerControlSprings } from '../../common/types';\r\nimport ChangeCoordinatesCard from './ChangeCoordinatesCard';\r\nimport CoordinatesCard from './CoordinatesCard';\r\n\r\nexport const CoordinateInterface = (props: {\r\n  mandelbrot: ViewerControlSprings;\r\n  show: boolean;\r\n}): JSX.Element => {\r\n  return (\r\n    <Grow\r\n      in={props.show}\r\n      style={{\r\n        position: 'absolute',\r\n        right: 0,\r\n        top: 0,\r\n        margin: 20,\r\n        width: 'auto',\r\n        zIndex: 1,\r\n      }}\r\n    >\r\n      <div>\r\n        <CoordinatesCard\r\n          mandelbrot={{\r\n            xy: props.mandelbrot.xyCtrl[0].xy,\r\n            zoom: props.mandelbrot.zoomCtrl[0].z,\r\n            theta: props.mandelbrot.rotCtrl[0].theta,\r\n          }}\r\n        />\r\n        <ChangeCoordinatesCard mandelbrot={props.mandelbrot} />\r\n      </div>\r\n    </Grow>\r\n  );\r\n};\r\n\r\nexport default CoordinateInterface;\r\n","export default __webpack_public_path__ + \"static/media/logo-192.ba1bc0bf.png\";","import React, { PropsWithChildren, useMemo, useState } from 'react';\nimport { createStyles, Theme, WithStyles, withStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport MuiDialogTitle from '@material-ui/core/DialogTitle';\nimport MuiDialogContent from '@material-ui/core/DialogContent';\nimport MuiDialogActions from '@material-ui/core/DialogActions';\nimport IconButton from '@material-ui/core/IconButton';\nimport CloseIcon from '@material-ui/icons/Close';\nimport Typography from '@material-ui/core/Typography';\nimport {\n  Link,\n  TableContainer,\n  Table,\n  Paper,\n  TableRow,\n  TableCell,\n  TableHead,\n  TableBody,\n  Box,\n  Divider,\n  Snackbar,\n} from '@material-ui/core';\nimport LaunchIcon from '@material-ui/icons/Launch';\nimport FileCopyIcon from '@material-ui/icons/FileCopy';\nimport MuiAlert, { AlertProps } from '@material-ui/lab/Alert';\nimport survey from '../surveyLink.json';\nimport MandelbrotMapsLogo from '../../img/logo-192.png';\n\n// for evaluating build time\nimport preval from 'preval.macro';\nimport clientDetect from '../../dist/clientDetect';\nimport { InfoDialogProps } from '../../common/info';\n\nconst dateTimeStamp = preval`module.exports = new Date();`;\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    root: {\n      margin: 0,\n      padding: theme.spacing(2),\n      display: 'flex',\n      flexDirection: 'row',\n      // align: \"middle\",\n    },\n    image: {\n      marginTop: 'auto',\n      marginBottom: 'auto',\n      marginRight: 8,\n      height: 50,\n    },\n    closeButton: {\n      // position: 'absolute',\n      // right: theme.spacing(1),\n      // top: theme.spacing(1),\n      marginLeft: 'auto',\n      color: theme.palette.grey[500],\n    },\n  });\n\nexport interface DialogTitleProps extends PropsWithChildren<WithStyles<typeof styles>> {\n  onClose: () => void;\n  id: string;\n}\n\n// https://material-ui.com/guides/typescript/#usage-of-withstyles\nconst DialogTitle = withStyles(styles)(\n  ({ children, classes, onClose, ...other }: DialogTitleProps) => {\n    return (\n      <MuiDialogTitle disableTypography className={classes.root} {...other}>\n        <img\n          src={MandelbrotMapsLogo}\n          alt=\"Mandelbrot Maps logo\"\n          className={classes.image}\n        />\n        <Typography\n          variant=\"h1\"\n          style={{ fontSize: 24, marginTop: 'auto', marginBottom: 'auto' }}\n        >\n          {children}\n        </Typography>\n        {onClose ? (\n          <IconButton\n            aria-label=\"close\"\n            className={classes.closeButton}\n            onClick={onClose}\n          >\n            <CloseIcon />\n          </IconButton>\n        ) : null}\n      </MuiDialogTitle>\n    );\n  },\n);\n\nconst DialogContent = withStyles((theme) => ({\n  root: {\n    padding: theme.spacing(3),\n  },\n}))(MuiDialogContent);\n\nconst DialogActions = withStyles((theme) => ({\n  root: {\n    margin: 0,\n    padding: theme.spacing(1),\n  },\n}))(MuiDialogActions);\n\nfunction Alert(props: AlertProps) {\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n}\n\nexport default function InfoDialog(props: InfoDialogProps): JSX.Element {\n  const [open, setOpen] = props.ctrl;\n  const [snackBarOpen, setSnackBarOpen] = useState(false);\n\n  const handleClose = () => setOpen(false);\n  // const showSnackBar = () => {\n  // new Promise(() => {\n  // setSnackBarOpen(false);\n  // }).then(() => {\n  // setSnackBarOpen(true);\n  // });\n  // };\n\n  // guard against null / undefined window\n  const clientData = useMemo(() => clientDetect(window), []);\n  // const clientData = window.jscd || {};\n\n  const writeToClipboard = (data: string) => {\n    console.log(snackBarOpen);\n    try {\n      navigator.clipboard.writeText(data);\n      setSnackBarOpen(true);\n    } catch (e) {\n      window.prompt('Auto copy to clipboard failed, copy manually from below:', data);\n    }\n  };\n\n  return (\n    <Dialog\n      onClose={handleClose}\n      aria-labelledby=\"customized-dialog-title\"\n      open={open}\n      maxWidth=\"md\"\n    >\n      {/* <div style={{ maxWidth: 700 }}> */}\n      <DialogTitle id=\"customized-dialog-title\" onClose={handleClose}>\n        Mandelbrot Maps\n      </DialogTitle>\n      <DialogContent dividers style={{ maxWidth: 700 }}>\n        <Typography gutterBottom>\n          Mandelbrot Maps is an interactive fractal explorer built using React and WebGL.\n        </Typography>\n        <Typography gutterBottom>\n          Developed by{' '}\n          <Link href=\"https://jmaio.github.io/\" target=\"_blank\">\n            Joao Maio\n          </Link>{' '}\n          in 2019/2020, and continued in 2020/2021 as part of an Honours Project at The\n          University of Edinburgh, under the supervision of Philip Wadler.\n        </Typography>\n        <Typography gutterBottom>\n          In 2019/2020, a parallel implementation was simultaneously undertaken by Freddie\n          Bawden, also under the supervision of Philip Wadler. Freddie&apos;s version of\n          the project is available at:{' '}\n          <Link href=\"http://mmaps.freddiejbawden.com/\" target=\"_blank\">\n            mmaps.freddiejbawden.com\n          </Link>\n        </Typography>\n        <Typography gutterBottom>\n          In 2020/2021, a parallel implementation was simultaneously undertaken by Freddie\n          Bawden, also under the supervision of Philip Wadler. Freddie&apos;s version of\n          the project is available at:{' '}\n          <Link href=\"http://mmaps.freddiejbawden.com/\" target=\"_blank\">\n            mmaps.freddiejbawden.com\n          </Link>\n        </Typography>\n        <Typography gutterBottom>\n          The{' '}\n          <Link\n            href=\"https://homepages.inf.ed.ac.uk/wadler/mandelbrot-maps/index.html\"\n            target=\"_blank\"\n          >\n            original Mandelbrot Maps project\n          </Link>{' '}\n          was developed by Iain Parris in 2008 as a Java Applet.\n        </Typography>\n        <Typography gutterBottom>\n          Mandelbrot set shader code adapted from{' '}\n          <Link href=\"https://www.shadertoy.com/view/4df3Rn\">Mandelbrot - smooth</Link> by{' '}\n          <Link href=\"http://iquilezles.org/\" target=\"_blank\">\n            Inigo Quilez\n          </Link>\n          .\n        </Typography>\n        {/* <Typography>\n            &copy; Joao Maio 2020\n          </Typography> */}\n\n        <Divider style={{ marginTop: 30, marginBottom: 30 }} />\n\n        <Box style={{ display: 'flex' }}>\n          <TableContainer\n            component={Paper}\n            style={{ width: 'auto', margin: 'auto', maxWidth: 460 }}\n          >\n            <Table size=\"small\" aria-label=\"a dense table\">\n              <TableHead>\n                <TableRow>\n                  <TableCell align=\"center\" colSpan={2} variant=\"head\">\n                    Device properties\n                  </TableCell>\n                </TableRow>\n              </TableHead>\n              <TableBody>\n                {Object.entries(clientData).map(([k, v]) => (\n                  <TableRow key={k}>\n                    <TableCell>{k}</TableCell>\n                    <TableCell align=\"right\" style={{ fontFamily: 'monospace' }}>\n                      {String(v)}\n                    </TableCell>\n                  </TableRow>\n                ))}\n              </TableBody>\n            </Table>\n          </TableContainer>\n        </Box>\n\n        <Divider style={{ marginTop: 30, marginBottom: 30 }} />\n\n        <Box style={{ display: 'flex', flexDirection: 'column', alignItems: 'center' }}>\n          <Typography variant=\"overline\" align=\"center\" style={{ margin: 'auto' }}>\n            Build:\n            {/* {console.log(new Date(dateTimeStamp).toLocaleString('en-GB', { timeZone: 'UTC' }))} */}\n          </Typography>\n          <Typography style={{ fontFamily: 'monospace' }}>{dateTimeStamp}</Typography>\n          <Typography style={{ fontFamily: 'monospace' }}>\n            {process.env.REACT_APP_GIT_SHA}\n          </Typography>\n        </Box>\n      </DialogContent>\n\n      <DialogActions>\n        <Button\n          onClick={() => {\n            writeToClipboard(JSON.stringify(clientData));\n          }}\n          color=\"primary\"\n          variant=\"outlined\"\n          startIcon={<FileCopyIcon />}\n        >\n          Copy\n        </Button>\n        <Snackbar\n          open={snackBarOpen}\n          autoHideDuration={5000}\n          // onClose={() => setSnackBarOpen(false)}\n        >\n          <Alert onClose={() => setSnackBarOpen(false)} severity=\"info\">\n            Device properties copied!\n          </Alert>\n        </Snackbar>\n        <Link\n          href={survey.link}\n          target=\"_blank\"\n          rel=\"noopener\"\n          style={{ textDecoration: 'none' }}\n        >\n          <Button autoFocus color=\"primary\" variant=\"outlined\" startIcon={<LaunchIcon />}>\n            Feedback\n          </Button>\n        </Link>\n      </DialogActions>\n      {/* </div> */}\n    </Dialog>\n  );\n}\n","/* eslint-disable */\r\n/**\r\n * JavaScript Client Detection\r\n * (C) viazenetti GmbH (Christian Ludwig)\r\n */\r\nexport default function clientDetect(window) {\r\n  var unknown = '-';\r\n\r\n  // screen\r\n  var screenSize = '';\r\n  if (window.screen.width) {\r\n    var width = window.screen.width ? window.screen.width : '';\r\n    var height = window.screen.height ? window.screen.height : '';\r\n    screenSize += '' + width + ' x ' + height;\r\n  }\r\n\r\n  // browser\r\n  var nVer = navigator.appVersion;\r\n  var nAgt = navigator.userAgent;\r\n  var browser = navigator.appName;\r\n  var version = '' + parseFloat(navigator.appVersion);\r\n  var majorVersion = parseInt(navigator.appVersion, 10);\r\n  var nameOffset, verOffset, ix;\r\n\r\n  // Opera\r\n  if ((verOffset = nAgt.indexOf('Opera')) != -1) {\r\n    browser = 'Opera';\r\n    version = nAgt.substring(verOffset + 6);\r\n    if ((verOffset = nAgt.indexOf('Version')) != -1) {\r\n      version = nAgt.substring(verOffset + 8);\r\n    }\r\n  }\r\n  // Opera Next\r\n  if ((verOffset = nAgt.indexOf('OPR')) != -1) {\r\n    browser = 'Opera';\r\n    version = nAgt.substring(verOffset + 4);\r\n  }\r\n  // Edge\r\n  else if ((verOffset = nAgt.indexOf('Edge')) != -1) {\r\n    browser = 'Microsoft Edge';\r\n    version = nAgt.substring(verOffset + 5);\r\n  }\r\n  // MSIE\r\n  else if ((verOffset = nAgt.indexOf('MSIE')) != -1) {\r\n    browser = 'Microsoft Internet Explorer';\r\n    version = nAgt.substring(verOffset + 5);\r\n  }\r\n  // Chrome\r\n  else if ((verOffset = nAgt.indexOf('Chrome')) != -1) {\r\n    browser = 'Chrome';\r\n    version = nAgt.substring(verOffset + 7);\r\n  }\r\n  // Safari\r\n  else if ((verOffset = nAgt.indexOf('Safari')) != -1) {\r\n    browser = 'Safari';\r\n    version = nAgt.substring(verOffset + 7);\r\n    if ((verOffset = nAgt.indexOf('Version')) != -1) {\r\n      version = nAgt.substring(verOffset + 8);\r\n    }\r\n  }\r\n  // Firefox\r\n  else if ((verOffset = nAgt.indexOf('Firefox')) != -1) {\r\n    browser = 'Firefox';\r\n    version = nAgt.substring(verOffset + 8);\r\n  }\r\n  // MSIE 11+\r\n  else if (nAgt.indexOf('Trident/') != -1) {\r\n    browser = 'Microsoft Internet Explorer';\r\n    version = nAgt.substring(nAgt.indexOf('rv:') + 3);\r\n  }\r\n  // Other browsers\r\n  else if (\r\n    (nameOffset = nAgt.lastIndexOf(' ') + 1) < (verOffset = nAgt.lastIndexOf('/'))\r\n  ) {\r\n    browser = nAgt.substring(nameOffset, verOffset);\r\n    version = nAgt.substring(verOffset + 1);\r\n    if (browser.toLowerCase() == browser.toUpperCase()) {\r\n      browser = navigator.appName;\r\n    }\r\n  }\r\n  // trim the version string\r\n  if ((ix = version.indexOf(';')) != -1) version = version.substring(0, ix);\r\n  if ((ix = version.indexOf(' ')) != -1) version = version.substring(0, ix);\r\n  if ((ix = version.indexOf(')')) != -1) version = version.substring(0, ix);\r\n\r\n  majorVersion = parseInt('' + version, 10);\r\n  if (isNaN(majorVersion)) {\r\n    version = '' + parseFloat(navigator.appVersion);\r\n    majorVersion = parseInt(navigator.appVersion, 10);\r\n  }\r\n\r\n  // mobile version\r\n  var mobile = /Mobile|mini|Fennec|Android|iP(ad|od|hone)/.test(nVer);\r\n\r\n  // cookie\r\n  var cookieEnabled = navigator.cookieEnabled ? true : false;\r\n\r\n  if (typeof navigator.cookieEnabled == 'undefined' && !cookieEnabled) {\r\n    document.cookie = 'testcookie';\r\n    cookieEnabled = document.cookie.indexOf('testcookie') != -1 ? true : false;\r\n  }\r\n\r\n  // system\r\n  var os = unknown;\r\n  var clientStrings = [\r\n    { s: 'Windows 10', r: /(Windows 10.0|Windows NT 10.0)/ },\r\n    { s: 'Windows 8.1', r: /(Windows 8.1|Windows NT 6.3)/ },\r\n    { s: 'Windows 8', r: /(Windows 8|Windows NT 6.2)/ },\r\n    { s: 'Windows 7', r: /(Windows 7|Windows NT 6.1)/ },\r\n    { s: 'Windows Vista', r: /Windows NT 6.0/ },\r\n    { s: 'Windows Server 2003', r: /Windows NT 5.2/ },\r\n    { s: 'Windows XP', r: /(Windows NT 5.1|Windows XP)/ },\r\n    { s: 'Windows 2000', r: /(Windows NT 5.0|Windows 2000)/ },\r\n    { s: 'Windows ME', r: /(Win 9x 4.90|Windows ME)/ },\r\n    { s: 'Windows 98', r: /(Windows 98|Win98)/ },\r\n    { s: 'Windows 95', r: /(Windows 95|Win95|Windows_95)/ },\r\n    { s: 'Windows NT 4.0', r: /(Windows NT 4.0|WinNT4.0|WinNT|Windows NT)/ },\r\n    { s: 'Windows CE', r: /Windows CE/ },\r\n    { s: 'Windows 3.11', r: /Win16/ },\r\n    { s: 'Android', r: /Android/ },\r\n    { s: 'Open BSD', r: /OpenBSD/ },\r\n    { s: 'Sun OS', r: /SunOS/ },\r\n    { s: 'Chrome OS', r: /CrOS/ },\r\n    { s: 'Linux', r: /(Linux|X11(?!.*CrOS))/ },\r\n    { s: 'iOS', r: /(iPhone|iPad|iPod)/ },\r\n    { s: 'Mac OS X', r: /Mac OS X/ },\r\n    { s: 'Mac OS', r: /(MacPPC|MacIntel|Mac_PowerPC|Macintosh)/ },\r\n    { s: 'QNX', r: /QNX/ },\r\n    { s: 'UNIX', r: /UNIX/ },\r\n    { s: 'BeOS', r: /BeOS/ },\r\n    { s: 'OS/2', r: /OS\\/2/ },\r\n    {\r\n      s: 'Search Bot',\r\n      r: /(nuhk|Googlebot|Yammybot|Openbot|Slurp|MSNBot|Ask Jeeves\\/Teoma|ia_archiver)/,\r\n    },\r\n  ];\r\n  for (var id in clientStrings) {\r\n    var cs = clientStrings[id];\r\n    if (cs.r.test(nAgt)) {\r\n      os = cs.s;\r\n      break;\r\n    }\r\n  }\r\n\r\n  var osVersion = unknown;\r\n\r\n  if (/Windows/.test(os)) {\r\n    osVersion = /Windows (.*)/.exec(os)[1];\r\n    os = 'Windows';\r\n  }\r\n\r\n  switch (os) {\r\n    case 'Mac OS X':\r\n      osVersion = /Mac OS X (10[\\.\\_\\d]+)/.exec(nAgt)[1];\r\n      break;\r\n\r\n    case 'Android':\r\n      osVersion = /Android ([\\.\\_\\d]+)/.exec(nAgt)[1];\r\n      break;\r\n\r\n    case 'iOS':\r\n      osVersion = /OS (\\d+)_(\\d+)_?(\\d+)?/.exec(nVer);\r\n      osVersion = osVersion[1] + '.' + osVersion[2] + '.' + (osVersion[3] | 0);\r\n      break;\r\n\r\n    default:\r\n      break;\r\n  }\r\n\r\n  // user agent string manipulation to obtain device model\r\n  var system = nAgt.substring(nAgt.indexOf('(') + 1, nAgt.indexOf(')'));\r\n  var device = system.substring(system.lastIndexOf(';') + 1);\r\n\r\n  // use JavaScript to detect GPU used from within your browser - by cvan\r\n  // https://gist.github.com/cvan/042b2448fcecefafbb6a91469484cdf8\r\n  var canvas = document.createElement('canvas');\r\n  var gl;\r\n  var debugInfo;\r\n  var gpuVendor;\r\n  var renderer;\r\n\r\n  try {\r\n    gl = canvas.getContext('webgl') || canvas.getContext('experimental-webgl');\r\n    // move block here if webgl not available\r\n    // if (gl) {\r\n    debugInfo = gl.getExtension('WEBGL_debug_renderer_info');\r\n    gpuVendor = gl.getParameter(debugInfo.UNMASKED_VENDOR_WEBGL);\r\n    renderer = gl.getParameter(debugInfo.UNMASKED_RENDERER_WEBGL);\r\n    // }\r\n  } catch (e) {\r\n    //   do nothing\r\n  }\r\n  // ----------------------------------------------------------------\r\n\r\n  //   window.jscd = {\r\n  return {\r\n    browser: browser,\r\n    browserVersion: majorVersion,\r\n    browserRelease: version,\r\n    // vendor: navigator.vendor,\r\n    device: device,\r\n    os: os,\r\n    osVersion: osVersion,\r\n    mobile: mobile,\r\n    platform: navigator.platform,\r\n    screen: screenSize,\r\n    dpr: +window.devicePixelRatio.toFixed(3),\r\n    gpu: renderer,\r\n    gpuVendor: gpuVendor,\r\n    userAgent: navigator.userAgent,\r\n    // cookies: cookieEnabled,\r\n    // flashVersion: flashVersion\r\n  };\r\n}\r\n// (this)\r\n\r\n// alert(\r\n//     'OS: ' + jscd.os +' '+ jscd.osVersion + '\\n' +\r\n//     'Browser: ' + jscd.browser +' '+ jscd.browserMajorVersion +\r\n//       ' (' + jscd.browserVersion + ')\\n' +\r\n//     'Mobile: ' + jscd.mobile + '\\n' +\r\n//     'Flash: ' + jscd.flashVersion + '\\n' +\r\n//     'Cookies: ' + jscd.cookies + '\\n' +\r\n//     'Screen Size: ' + jscd.screen + '\\n\\n' +\r\n//     'Full User Agent: ' + navigator.userAgent\r\n// );\r\n","// TODO set max iterations as parameter\r\n\r\nimport { RendererRenderValues } from '../common/render';\r\n\r\nconst newSmoothJuliaShader = ({\r\n  maxI = 300,\r\n  AA = 1,\r\n  B = 64,\r\n}: RendererRenderValues): string => `\r\n\r\n#define AA ${AA}\r\n#define MAXI ${maxI}\r\n#define B ${B.toFixed(1)}\r\n\r\n// set high float precision (lower than this may break colours on mobile)\r\nprecision highp float;\r\n\r\n// need to know the resolution of the canvas\r\nuniform vec2 resolution;\r\n\r\n// properties should be passed as uniforms\r\nuniform int   u_maxI;\r\nuniform vec2  u_xy;\r\nuniform vec2  u_c;\r\nuniform float u_zoom;\r\nuniform float u_theta;\r\nuniform vec3  u_colour;\r\n\r\nfloat julia( vec2 z, vec2 c ) {\r\n\r\n  float l = 0.0;\r\n  for( int i=0; i<MAXI; i++ )\r\n  {\r\n      z = vec2( z.x*z.x - z.y*z.y, 2.0*z.x*z.y ) + c;\r\n      if( dot(z,z)>(B*B) ) break;\r\n      l += 1.0;\r\n  }\r\n\r\n  // maxed out iterations\r\n  if( l>float(MAXI)-1.0 ) return 0.0;\r\n\r\n  // equivalent optimized smooth interation count\r\n  l = l - log2(log2(dot(z,z))) + 4.0;\r\n\r\n  return l;\r\n}\r\n\r\nvoid main() {    \r\n  // set the initial colour to black\r\n  vec3 col = vec3(0.0);\r\n\r\n  // anti-aliasing\r\n  #if AA>1\r\n  for( int m=0; m<AA; m++ )\r\n  for( int n=0; n<AA; n++ )\r\n  {\r\n      vec2 p = (2.0*(gl_FragCoord.xy + vec2(float(m), float(n)) / float(AA) ) - resolution.xy)/resolution.y;\r\n      float w = float(AA*m+n);\r\n  #else    \r\n      // adjust pixels to range from [-1, 1]\r\n      vec2 p = (2.0*gl_FragCoord.xy - resolution.xy)/resolution.y;\r\n  #endif\r\n  \r\n  // constant \"c\" to add, based on mandelbrot position\r\n  vec2 c = u_c;\r\n\r\n  float sinT = sin(u_theta);\r\n  float cosT = cos(u_theta);\r\n\r\n  vec2 xy = vec2( p.x*cosT - p.y*sinT, p.x*sinT + p.y*cosT );\r\n  // c is based on offset and grid position, z_0 = 0\r\n  vec2 z = u_xy + xy/u_zoom;\r\n\r\n  float l = julia(z, c);\r\n  // col += 0.5 + 0.5*cos( 3.0 + l*0.15 + vec3(0.0,0.6,1.0));\r\n  col += 0.5 + 0.5*cos( 3.0 + l*0.15 + u_colour);\r\n\r\n\r\n  // antialiasing\r\n  #if AA>1\r\n  }\r\n  col /= float(AA*AA);\r\n  #endif\r\n\r\n  // Output to screen\r\n  gl_FragColor = vec4( col, 1.0 );\r\n}\r\n`;\r\n\r\nexport default newSmoothJuliaShader;\r\n","import { FormControlLabelProps, SvgIcon } from '@material-ui/core';\r\nimport React from 'react';\r\nimport { RgbColor } from 'react-colorful';\r\nimport { defaultShadingColour } from './values';\r\n// https://stackoverflow.com/a/39281228/9184658\r\n\r\nexport type settingsDefinitionsType = {\r\n  showMinimap: boolean;\r\n  showCrosshair: boolean;\r\n  showCoordinates: boolean;\r\n  showFPS: boolean;\r\n  maxI: number;\r\n  useDPR: boolean;\r\n  useAA: boolean;\r\n  colour: RgbColor;\r\n};\r\n\r\nexport const defaultSettings = {\r\n  showMinimap: true,\r\n  showCrosshair: true,\r\n  showCoordinates: false,\r\n  maxI: 250,\r\n  showFPS: false,\r\n  useDPR: false,\r\n  useAA: false,\r\n  colour: defaultShadingColour,\r\n};\r\n\r\nexport type settingsWidgetType = {\r\n  // - settings widgets key k must be in the set\r\n  // - its type must be of FormControlLabelProps (for displaying in the Material UI form)\r\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\r\n  [k in keyof settingsDefinitionsType]: FormControlLabelProps;\r\n  // using \"k\" results in an error since it is not used again\r\n};\r\n\r\nexport type settingsGroupType = {\r\n  name: string;\r\n  icon: typeof SvgIcon;\r\n  widgets: {\r\n    // widget groups may contain any of the keys in the settingsDefinitionsType\r\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\r\n    [k in keyof Partial<settingsDefinitionsType>]: FormControlLabelProps;\r\n    // using \"k\" results in an error since it is not used again\r\n  };\r\n};\r\n\r\nexport type SettingsContextType = {\r\n  settings: settingsDefinitionsType;\r\n  setSettings: React.Dispatch<React.SetStateAction<settingsDefinitionsType>>;\r\n  settingsWidgets: settingsWidgetType;\r\n  // newSettings: {\r\n  //   [k in keyof settingsDefinitionsType]: [\r\n  //     settingsDefinitionsType[k],\r\n  //     React.Dispatch<React.SetStateAction<settingsDefinitionsType[k]>>,\r\n  //   ];\r\n  // };\r\n};\r\n\r\nexport interface SettingsMenuProps {\r\n  reset: () => void;\r\n  toggleInfo: () => void;\r\n}\r\n","import { Slider, Switch } from '@material-ui/core';\r\nimport ExtensionIcon from '@material-ui/icons/Extension';\r\nimport PhotoIcon from '@material-ui/icons/Photo';\r\nimport React from 'react';\r\nimport { RgbColorPicker } from 'react-colorful';\r\nimport {\r\n  settingsDefinitionsType,\r\n  settingsGroupType,\r\n  settingsWidgetType,\r\n} from '../../common/settings';\r\n\r\nexport const settingsWidgets = (\r\n  settings: settingsDefinitionsType,\r\n): settingsWidgetType => ({\r\n  showMinimap: {\r\n    label: 'Minimap',\r\n    checked: settings.showMinimap,\r\n    control: <Switch />,\r\n  },\r\n  showCrosshair: {\r\n    label: 'Crosshair',\r\n    checked: settings.showCrosshair,\r\n    control: <Switch />,\r\n  },\r\n  showCoordinates: {\r\n    label: 'Show coordinates',\r\n    checked: settings.showCoordinates,\r\n    control: <Switch />,\r\n  },\r\n  maxI: {\r\n    label: 'Iterations',\r\n    value: settings.maxI,\r\n    labelPlacement: 'top',\r\n    style: {\r\n      marginLeft: 0,\r\n      marginRight: 0,\r\n    },\r\n    control: (\r\n      <Slider\r\n        min={10}\r\n        max={1000}\r\n        step={10}\r\n        valueLabelDisplay=\"auto\"\r\n        marks={[\r\n          { value: 10, label: 10 },\r\n          { value: 250, label: 250 },\r\n          { value: 500, label: 500 },\r\n          { value: 750, label: 750 },\r\n          { value: 1000, label: 1000 },\r\n        ]}\r\n      />\r\n    ),\r\n  },\r\n  useDPR: {\r\n    // https://stackoverflow.com/a/12830454/9184658\r\n    // // There is a downside that values like 1.5 will give \"1.50\" as the output. A fix suggested by @minitech:\r\n    // var numb = 1.5;\r\n    // numb = +numb.toFixed(2);\r\n    // // Note the plus sign that drops any \"extra\" zeroes at the end.\r\n    // // It changes the result (which is a string) into a number again (think \"0 + foo\"),\r\n    // // which means that it uses only as many digits as necessary.\r\n    label: `Use pixel ratio (${+window.devicePixelRatio.toFixed(3)})`,\r\n    checked: settings.useDPR,\r\n    control: <Switch />,\r\n  },\r\n  useAA: {\r\n    label: `Anti-aliasing (slow)`,\r\n    checked: settings.useAA,\r\n    control: <Switch />,\r\n  },\r\n  showFPS: {\r\n    label: `Show FPS`,\r\n    checked: settings.showFPS,\r\n    control: <Switch />,\r\n  },\r\n  colour: {\r\n    label: null,\r\n    style: {\r\n      marginTop: 14,\r\n      marginBottom: 10,\r\n      marginLeft: 0,\r\n      marginRight: 0,\r\n    },\r\n    control: (\r\n      <RgbColorPicker\r\n        // set the initial colour\r\n        color={settings.colour}\r\n      />\r\n    ),\r\n  },\r\n});\r\n\r\nexport const getSettingsWidgetsGrouping = (\r\n  settingsWidgets: settingsWidgetType,\r\n): Array<settingsGroupType> => [\r\n  {\r\n    icon: ExtensionIcon,\r\n    name: 'Interface',\r\n    widgets: {\r\n      showMinimap: settingsWidgets.showMinimap,\r\n      showCrosshair: settingsWidgets.showCrosshair,\r\n      showCoordinates: settingsWidgets.showCoordinates,\r\n    },\r\n    // ],\r\n  },\r\n  {\r\n    icon: PhotoIcon,\r\n    name: 'Graphics',\r\n    widgets: {\r\n      maxI: settingsWidgets.maxI,\r\n      colour: settingsWidgets.colour,\r\n      useDPR: settingsWidgets.useDPR,\r\n      useAA: settingsWidgets.useAA,\r\n      showFPS: settingsWidgets.showFPS,\r\n    },\r\n  },\r\n];\r\n","import React, { createContext, ReactNode, useState } from 'react';\r\nimport {\r\n  defaultSettings,\r\n  SettingsContextType,\r\n  settingsDefinitionsType,\r\n} from '../../common/settings';\r\nimport { settingsWidgets } from './SettingsDefinitions';\r\n\r\nexport const SettingsContext = createContext<SettingsContextType>({\r\n  // provide the context with the default values\r\n  settings: defaultSettings,\r\n  // can't set state until it's initialized\r\n  setSettings: () => {\r\n    return;\r\n  },\r\n  settingsWidgets: settingsWidgets(defaultSettings),\r\n});\r\n\r\n// export const useSettings = (): SettingsContextType => useContext(SettingsContext);\r\n\r\nexport const SettingsProvider = ({ children }: { children: ReactNode }): JSX.Element => {\r\n  // https://reactjs.org/docs/context.html#updating-context-from-a-nested-component\r\n  // no grouping: all settings are accessible\r\n  const [settings, setSettings] = useState<settingsDefinitionsType>(defaultSettings);\r\n\r\n  return (\r\n    <SettingsContext.Provider\r\n      value={{\r\n        settings,\r\n        setSettings,\r\n        settingsWidgets: settingsWidgets(settings),\r\n      }}\r\n    >\r\n      {children}\r\n    </SettingsContext.Provider>\r\n  );\r\n};\r\n\r\nexport default SettingsProvider;\r\n","import { colors, createMuiTheme } from '@material-ui/core';\r\n\r\nconst theme = createMuiTheme({\r\n  props: {\r\n    // Name of the component ⚛️\r\n    MuiSwitch: {\r\n      // The default props to change\r\n      color: 'primary', // x, on the whole application 💣!\r\n    },\r\n    MuiButton: {\r\n      variant: 'outlined',\r\n      style: {\r\n        borderRadius: 24,\r\n      },\r\n    },\r\n  },\r\n  palette: {\r\n    primary: {\r\n      main: colors.blue[700],\r\n    },\r\n    secondary: {\r\n      main: colors.red[700],\r\n    },\r\n    info: {\r\n      main: colors.blue[700],\r\n    },\r\n  },\r\n  shape: {\r\n    borderRadius: 12,\r\n  },\r\n});\r\n\r\nexport const simpleBoxShadow = '0px 2px 10px 1px rgba(0, 0, 0, 0.4)';\r\nexport const lightBoxShadow = '0px 0px 10px 2px rgba(255, 255, 255, 0.8)';\r\nexport const darkBoxShadow = '0px 0px 10px 2px rgba(0, 0, 0, 0.8)';\r\n\r\n/**\r\n * A box shadow comprised of two overlaid box shadows:\r\n * - a light box shadow (for contrasting against **dark** backgrounds)\r\n * - a dark box shadow (for contrasting against **light** backgrounds)\r\n */\r\nexport const contrastBoxShadow = `${lightBoxShadow}, ${darkBoxShadow}`;\r\n\r\nexport default theme;\r\n","export const fullVertexShader = `\r\nattribute vec4 position;\r\n\r\nvoid main() {\r\n  gl_Position = position;\r\n}\r\n`;\r\n\r\n// This \"position\" array specifies the vertex positions of the element\r\n// to be displayed by the vertex shader. It represents two triangles,\r\n// each filling half of the screen diagonally, and together filling the\r\n// full canvas space to allow the fragment shader to act on the full canvas.\r\nexport const fullscreenVertexArray = {\r\n  position: {\r\n    numComponents: 3,\r\n    data: [-1, -1, 0, 1, -1, 0, -1, 1, 0, -1, 1, 0, 1, -1, 0, 1, 1, 0],\r\n  },\r\n};\r\n","import React, { useCallback, useEffect, useRef } from 'react';\r\nimport { animated } from 'react-spring';\r\nimport * as twgl from 'twgl.js';\r\nimport { WebGLCanvasProps } from '../../common/render';\r\nimport { fullscreenVertexArray, fullVertexShader } from '../../shaders/fullVertexShader';\r\n\r\n// https://mariusschulz.com/blog/typing-destructured-object-parameters-in-typescript\r\n// https://stackoverflow.com/a/50294843/9184658\r\nconst WebGLCanvas = React.forwardRef<HTMLCanvasElement, WebGLCanvasProps>(\r\n  (props: WebGLCanvasProps, refAny) => {\r\n    // const { mini = false, ...rest } = props;\r\n    // props:\r\n    // id\r\n    // fragShader\r\n    // -- uniforms:\r\n    //    u_zoom\r\n    //    u_pos\r\n    //    u_maxI\r\n    // ref\r\n    // glRef\r\n\r\n    const canvasRef = refAny as React.MutableRefObject<HTMLCanvasElement>;\r\n\r\n    const gl = useRef<WebGLRenderingContext | null>();\r\n    const renderRequestRef = useRef<number>();\r\n    const bufferInfo = useRef<twgl.BufferInfo>();\r\n    const programInfo = useRef<twgl.ProgramInfo>();\r\n\r\n    const u = props.u;\r\n    const setFps = props.fps;\r\n\r\n    // have a zoom callback\r\n    // keeps minimaps at a fixed zoom level\r\n    const zoom = useCallback(() => (props.mini ? 1.0 : props.u.zoom.getValue()), [\r\n      props.mini,\r\n      props.u.zoom,\r\n    ]);\r\n\r\n    const dpr = props.useDPR ? window.devicePixelRatio : 1;\r\n\r\n    // canvas setup step - get webgl context\r\n    const setupCanvas = useCallback(() => {\r\n      gl.current = canvasRef.current.getContext('webgl');\r\n      console.debug(`WebGL canvas context created`);\r\n    }, [gl, canvasRef]);\r\n\r\n    useEffect(() => {\r\n      setupCanvas();\r\n\r\n      // https://www.khronos.org/webgl/wiki/HandlingContextLost\r\n      canvasRef.current.addEventListener(\r\n        'webglcontextlost',\r\n        (event) => {\r\n          console.error('WebGL context lost!');\r\n          event.preventDefault();\r\n          // trigger an error alert in future?\r\n        },\r\n        false,\r\n      );\r\n      canvasRef.current.addEventListener(\r\n        'webglcontextrestored',\r\n        (event) => {\r\n          console.error('WebGL context restored! Setting up...');\r\n          setupCanvas();\r\n        },\r\n        false,\r\n      );\r\n\r\n      // remove this context?\r\n      // return () => gl.current ??\r\n    }, [canvasRef, setupCanvas]);\r\n\r\n    const compileShader = useCallback(() => {\r\n      const ctx = gl.current as WebGLRenderingContext;\r\n      bufferInfo.current = twgl.createBufferInfoFromArrays(ctx, fullscreenVertexArray);\r\n      programInfo.current = twgl.createProgramInfo(ctx, [\r\n        fullVertexShader,\r\n        props.fragShader,\r\n      ]);\r\n      console.debug(`Fragment shader compiled`);\r\n    }, [gl, props.fragShader]);\r\n\r\n    // re-compile program if shader changes\r\n    useEffect(compileShader, [compileShader]);\r\n\r\n    const then = useRef(0);\r\n    const frames = useRef(0);\r\n    const elapsedTime = useRef(0);\r\n    // fps update interval\r\n    const interval = 1000;\r\n\r\n    // the main render function for WebGL\r\n    const render = useCallback(\r\n      (time) => {\r\n        const ctx = gl.current as WebGLRenderingContext;\r\n        const prog = programInfo.current as twgl.ProgramInfo;\r\n        const buff = bufferInfo.current as twgl.BufferInfo;\r\n\r\n        twgl.resizeCanvasToDisplaySize(canvasRef.current, dpr);\r\n        // scale the viewport to the canvas size\r\n        ctx.viewport(0, 0, canvasRef.current.width, canvasRef.current.height);\r\n\r\n        const uniforms = {\r\n          resolution: [canvasRef.current.width, canvasRef.current.height],\r\n          u_zoom: zoom(),\r\n          u_c: u.c === undefined ? 0 : u.c.getValue(),\r\n          u_xy: u.xy.getValue(),\r\n          u_maxI: u.maxI,\r\n          u_theta: u.theta.getValue(),\r\n          u_colour: u.colour,\r\n        };\r\n\r\n        ctx.useProgram(prog.program);\r\n        twgl.setBuffersAndAttributes(ctx, prog, buff);\r\n        twgl.setUniforms(prog, uniforms);\r\n        twgl.drawBufferInfo(ctx, buff);\r\n\r\n        // calculate fps\r\n        if (setFps !== undefined) {\r\n          frames.current++;\r\n          elapsedTime.current += time - then.current;\r\n          then.current = time;\r\n\r\n          // console.log(elapsedTime.current);\r\n          if (elapsedTime.current >= interval) {\r\n            //multiply with (1000 / elapsed) for accuracy\r\n            setFps((frames.current * (interval / elapsedTime.current)).toFixed(1));\r\n            frames.current = 0;\r\n            elapsedTime.current -= interval;\r\n\r\n            // document.getElementById('test').innerHTML = fps;\r\n          }\r\n        }\r\n\r\n        // The 'state' will always be the initial value here\r\n        renderRequestRef.current = requestAnimationFrame(render);\r\n      },\r\n      [gl, u, zoom, dpr, setFps, interval, canvasRef],\r\n    );\r\n\r\n    useEffect(() => {\r\n      renderRequestRef.current = requestAnimationFrame(render);\r\n      return () => cancelAnimationFrame(renderRequestRef.current as number);\r\n    }, [render]);\r\n\r\n    return (\r\n      <animated.canvas\r\n        className=\"renderer\"\r\n        ref={refAny}\r\n        id={props.id}\r\n        style={{\r\n          // cursor should show whether the viewer is being grabbed\r\n          cursor: props.dragging ? 'grabbing' : 'grab',\r\n          // adding style allows direct style override\r\n          ...props.style,\r\n        }}\r\n      />\r\n    );\r\n  },\r\n);\r\n\r\nWebGLCanvas.displayName = 'WebGLCanvas';\r\n\r\nexport default WebGLCanvas;\r\n","import { ButtonBase, Grow, makeStyles } from '@material-ui/core';\r\nimport React from 'react';\r\nimport { MinimapViewerProps } from '../../common/render';\r\nimport { simpleBoxShadow } from '../../theme/theme';\r\nimport WebGLCanvas from './WebGLCanvas';\r\n\r\nconst miniSize = 100;\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    borderRadius: theme.shape.borderRadius,\r\n  },\r\n}));\r\n\r\nconst MinimapViewer = (props: MinimapViewerProps): JSX.Element => {\r\n  const { canvasRef, onClick, show, ...rest } = props;\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Grow in={show}>\r\n      <ButtonBase\r\n        style={{\r\n          position: 'absolute',\r\n          // make minimap stick out through backdrop\r\n          zIndex: 1300,\r\n          margin: '0.5rem',\r\n          left: 0,\r\n          bottom: 0,\r\n          // cursor: 'pointer',\r\n          height: miniSize,\r\n          width: miniSize,\r\n          // borderRadius: borderRadius,\r\n          // border: \"1px solid #000\",\r\n          boxShadow: simpleBoxShadow,\r\n          overflow: 'hidden',\r\n          // opacity: zoom.interpolate((z) => _.clamp(z - 1, 0, 1)),\r\n          // display: zoom.interpolate((z) => (_.clamp(z - 1, 0, 1) === 0 ? 'none' : 'block')),\r\n        }}\r\n        onClick={onClick}\r\n        className={classes.root}\r\n      >\r\n        {/* <animated.div */}\r\n        {/* // \r\n      // > */}\r\n        <WebGLCanvas\r\n          id={props.id}\r\n          mini={true}\r\n          ref={canvasRef}\r\n          {...rest}\r\n          // setting border radius here stops the canvas clickable area from overflowing\r\n          // outside the div circle, which would make the clickable area a rectangle\r\n          style={{\r\n            // borderRadius: borderRadius,\r\n            // cursor should be \"pointer\" (looks clickable) if this is a minimap,\r\n            cursor: 'pointer',\r\n          }}\r\n        />\r\n        {/* </animated.div> */}\r\n      </ButtonBase>\r\n    </Grow>\r\n  );\r\n};\r\nexport default MinimapViewer;\r\n","import React, { useRef, useState } from 'react';\r\nimport { useGesture } from 'react-use-gesture';\r\nimport { JuliaRendererProps } from '../../common/render';\r\nimport { MandelbrotMapsWebGLUniforms } from '../../common/types';\r\nimport { genericTouchBind, Rgb255ColourToFloat } from '../../common/utils';\r\nimport newSmoothJuliaShader from '../../shaders/newSmoothJuliaShader';\r\nimport { SettingsContext } from '../settings/SettingsContext';\r\nimport MinimapViewer from './MinimapViewer';\r\nimport WebGLCanvas from './WebGLCanvas';\r\nexport default function JuliaRenderer(props: JuliaRendererProps): JSX.Element {\r\n  // variables to hold canvas and webgl information\r\n  const canvasRef = useRef<HTMLCanvasElement>(null);\r\n  const miniCanvasRef = useRef<HTMLCanvasElement>(null);\r\n\r\n  const [{ xy }] = props.controls.xyCtrl;\r\n  const [{ z }, setControlZoom] = props.controls.zoomCtrl;\r\n  const [{ theta }] = props.controls.rotCtrl;\r\n  const maxI = props.maxI; // -> global\r\n  const AA = props.useAA ? 2 : 1;\r\n\r\n  const fragShader = newSmoothJuliaShader({\r\n    maxI: maxI,\r\n    AA: AA,\r\n  });\r\n\r\n  const miniFragShader = newSmoothJuliaShader({\r\n    maxI: maxI,\r\n    AA: 2,\r\n  });\r\n\r\n  const u: MandelbrotMapsWebGLUniforms = {\r\n    zoom: z,\r\n    xy: xy,\r\n    c: props.c,\r\n    theta: theta,\r\n    maxI: maxI,\r\n    colour: Rgb255ColourToFloat(props.colour),\r\n  };\r\n\r\n  const [dragging, setDragging] = useState(false);\r\n\r\n  const gtb = genericTouchBind({\r\n    domTarget: canvasRef,\r\n    controls: props.controls,\r\n    setDragging: setDragging,\r\n  });\r\n\r\n  useGesture(gtb.handlers, gtb.config);\r\n\r\n  return (\r\n    <SettingsContext.Consumer>\r\n      {({ settings }) => (\r\n        <div\r\n          className=\"renderer\"\r\n          style={{\r\n            position: 'relative',\r\n          }}\r\n        >\r\n          <WebGLCanvas\r\n            id=\"julia-canvas\"\r\n            fragShader={fragShader}\r\n            useDPR={props.useDPR}\r\n            u={u}\r\n            ref={canvasRef}\r\n            dragging={dragging}\r\n          />\r\n          <MinimapViewer\r\n            id=\"julia-minimap-canvas\"\r\n            fragShader={miniFragShader}\r\n            useDPR={settings.useDPR}\r\n            u={u}\r\n            canvasRef={miniCanvasRef}\r\n            onClick={() => setControlZoom({ z: 1 })}\r\n            show={settings.showMinimap}\r\n          />\r\n        </div>\r\n      )}\r\n    </SettingsContext.Consumer>\r\n  );\r\n}\r\n","// TODO set max iterations as parameter, crosshair as parameter\r\n\r\nimport { RendererRenderValues } from '../common/render';\r\n\r\nconst makeCrosshair = (stroke: number, radius: number) => ({\r\n  stroke,\r\n  radius,\r\n});\r\n\r\nexport const standardCrosshair = makeCrosshair(2, 100);\r\nexport const miniCrosshair = makeCrosshair(1, 30);\r\n\r\nexport interface MandelbrotShaderParams {\r\n  maxI: number;\r\n  /** Radial boundary */\r\n  B: number;\r\n  /** Anti-aliasing samples */\r\n  AA: number;\r\n}\r\n\r\nconst newSmoothMandelbrotShader = (\r\n  { maxI = 300, AA = 1, B = 64 }: RendererRenderValues,\r\n  showCrosshair = true,\r\n  crosshairShape = {\r\n    stroke: 2,\r\n    radius: 100,\r\n  },\r\n): string => {\r\n  return `\r\n// Adapted by Joao Maio/2019, based on work by inigo quilez - iq/2013\r\n// License Creative Commons Attribution-NonCommercial-ShareAlike 3.0 Unported License.\r\n\r\n// See here for more information on smooth iteration count:\r\n// http://iquilezles.org/www/articles/mset_smooth/mset_smooth.htm\r\n\r\n#define false 0\r\n#define true 1\r\n\r\n// render parameters\r\n#define AA ${AA}\r\n#define MAXI ${maxI}\r\n#define B ${B.toFixed(1)}\r\n\r\n// crosshair parameters\r\n#define show_crosshair ${showCrosshair}\r\n#define cross_stroke ${crosshairShape.stroke.toFixed(1)}\r\n#define cross_radius ${crosshairShape.radius.toFixed(1)}\r\n\r\n// set high float precision (lower than this may break colours on mobile)\r\nprecision highp float;\r\n\r\n// need to know the resolution of the canvas\r\nuniform vec2 resolution;\r\n\r\n// properties should be passed as uniforms\r\nuniform int   u_maxI;  \r\nuniform vec2  u_xy;\r\nuniform float u_zoom;\r\nuniform float u_theta;\r\nuniform vec3  u_colour;\r\n\r\nbool crosshair( float x, float y ) {\r\n  float abs_x = abs(2.0*x - resolution.x);\r\n  float abs_y = abs(2.0*y - resolution.y);\r\n\r\n  return \r\n  // crosshair in centre of screen\r\n  (abs_x <= cross_stroke || abs_y <= cross_stroke) &&\r\n  // crosshair size / \"radius\"\r\n  (abs_x <= cross_radius && abs_y <= cross_radius);\r\n}\r\n\r\nfloat mandelbrot( in vec2 c ) {\r\n    {\r\n        float c2 = dot(c, c);\r\n        // skip computation inside M1 - http://iquilezles.org/www/articles/mset_1bulb/mset1bulb.htm\r\n        if( 256.0*c2*c2 - 96.0*c2 + 32.0*c.x - 3.0 < 0.0 ) return 0.0;\r\n        // skip computation inside M2 - http://iquilezles.org/www/articles/mset_2bulb/mset2bulb.htm\r\n        if( 16.0*(c2+2.0*c.x+1.0) - 1.0 < 0.0 ) return 0.0;\r\n    }\r\n\r\n    float l = 0.0;\r\n    vec2 z  = vec2(0.0);\r\n    for( int i=0; i<MAXI; i++ )\r\n    {\r\n        z = vec2( z.x*z.x - z.y*z.y, 2.0*z.x*z.y ) + c;\r\n        if( dot(z,z)>(B*B) ) break;\r\n        l += 1.0;\r\n    }\r\n\r\n    // maxed out iterations\r\n    if( l>float(MAXI)-1.0 ) return 0.0;\r\n    \r\n    // optimized smooth interation count\r\n    l = l - log2(log2(dot(z,z))) + 4.0;\r\n\r\n    return l;\r\n}\r\n\r\nvoid main() {    \r\n    // set the initial colour to black\r\n    vec3 col = vec3(0.0);\r\n\r\n    // anti-aliasing\r\n    #if AA>1\r\n    for( int m=0; m<AA; m++ )\r\n    for( int n=0; n<AA; n++ )\r\n    {\r\n        // vec2 p = (-iResolution.xy + 2.0*(fragCoord.xy+vec2(float(m),float(n))/float(AA)))/iResolution.y;\r\n        vec2 p = (2.0*(gl_FragCoord.xy + vec2(float(m), float(n)) / float(AA) ) - resolution.xy)/resolution.y;\r\n        float w = float(AA*m+n);\r\n    #else    \r\n        // adjust pixels to range from [-1, 1]\r\n        vec2 p = (2.0*gl_FragCoord.xy - resolution.xy)/resolution.y;\r\n    #endif\r\n\r\n    float sinT = sin(u_theta);\r\n    float cosT = cos(u_theta);\r\n\r\n    vec2 xy = vec2( p.x*cosT - p.y*sinT, p.x*sinT + p.y*cosT );\r\n    // c is based on offset and grid position, z_0 = 0\r\n    vec2 c = u_xy + xy/u_zoom;\r\n    \r\n    float l = mandelbrot(c);\r\n    // col += 0.5 + 0.5*cos( 3.0 + l*0.15 + vec3(0.0,0.6,1.0));\r\n    col += 0.5 + 0.5*cos( 3.0 + l*0.15 + u_colour);\r\n\r\n    // antialiasing\r\n    #if AA>1\r\n    }\r\n    col /= float(AA*AA);\r\n    #endif\r\n\r\n    #if show_crosshair\r\n    if (crosshair(gl_FragCoord.x, gl_FragCoord.y)) {\r\n        col = 1. - col;\r\n    }\r\n    #endif\r\n\r\n    // Output to screen\r\n    gl_FragColor = vec4( col, 1.0 );\r\n}\r\n    `;\r\n};\r\n\r\nexport default newSmoothMandelbrotShader;\r\n","import { Card, Grow } from '@material-ui/core';\r\nimport React from 'react';\r\nimport { animated } from 'react-spring';\r\nimport { FPSCardProps } from '../../common/info';\r\n\r\nconst FPSCard = (props: FPSCardProps): JSX.Element => (\r\n  <Grow in={props.show}>\r\n    <Card\r\n      style={{\r\n        position: 'fixed',\r\n        top: 0,\r\n        left: 0,\r\n        padding: '4px 12px',\r\n        margin: 6,\r\n        fontFamily: 'monospace',\r\n        borderRadius: 100,\r\n        fontSize: '1.8rem',\r\n        zIndex: 1300,\r\n        userSelect: 'none',\r\n      }}\r\n    >\r\n      <animated.div>{props.fps}</animated.div>\r\n    </Card>\r\n  </Grow>\r\n);\r\n\r\nexport default FPSCard;\r\n","import React, { useRef, useState } from 'react';\r\nimport { useGesture } from 'react-use-gesture';\r\nimport { MandelbrotRendererProps } from '../../common/render';\r\nimport { MandelbrotMapsWebGLUniforms } from '../../common/types';\r\nimport { genericTouchBind, Rgb255ColourToFloat } from '../../common/utils';\r\nimport newSmoothMandelbrotShader, {\r\n  miniCrosshair,\r\n  standardCrosshair,\r\n} from '../../shaders/newSmoothMandelbrotShader';\r\nimport FPSCard from '../info/FPSCard';\r\nimport { SettingsContext } from '../settings/SettingsContext';\r\nimport MinimapViewer from './MinimapViewer';\r\nimport WebGLCanvas from './WebGLCanvas';\r\n\r\nexport default function MandelbrotRenderer(props: MandelbrotRendererProps): JSX.Element {\r\n  // variables to hold canvas and webgl information\r\n  const canvasRef = useRef<HTMLCanvasElement>(null);\r\n  const miniCanvasRef = useRef<HTMLCanvasElement>(null);\r\n\r\n  // const gl = useRef<WebGLRenderingContext>(null);\r\n  // const miniGl = useRef<WebGLRenderingContext>(null);\r\n\r\n  // this multiplier subdivides the screen space into smaller increments\r\n  // to allow for velocity calculations to not immediately decay, due to the\r\n  // otherwise small scale that is being mapped to the screen.\r\n  // const screenScaleMultiplier = props.screenScaleMultiplier; // -> global\r\n\r\n  // temporary bounds to prevent excessive panning\r\n  // eslint-disable-next-line\r\n  // const radialBound = 1;\r\n  // const relativeRadialBound = radialBound;// / -screenScaleMultiplier;\r\n\r\n  // read incoming props\r\n  const [{ xy }] = props.controls.xyCtrl;\r\n  // const [{ theta, last_pointer_angle }, setControlRot] = props.controls.rot;\r\n  const [{ z }, setControlZoom] = props.controls.zoomCtrl;\r\n  const [{ theta }] = props.controls.rotCtrl;\r\n  const maxI = props.maxI; // -> global\r\n  const AA = props.useAA ? 2 : 1; // -> global\r\n\r\n  const fragShader = newSmoothMandelbrotShader(\r\n    {\r\n      maxI: maxI,\r\n      AA: AA,\r\n    },\r\n    props.showCrosshair,\r\n    standardCrosshair,\r\n  );\r\n  const miniFragShader = newSmoothMandelbrotShader(\r\n    {\r\n      maxI: maxI,\r\n      AA: 2,\r\n    },\r\n    props.showCrosshair,\r\n    miniCrosshair,\r\n  );\r\n\r\n  const u: MandelbrotMapsWebGLUniforms = {\r\n    zoom: z,\r\n    xy: xy,\r\n    theta: theta,\r\n    maxI: maxI,\r\n    colour: Rgb255ColourToFloat(props.colour), // vec3(0.0,0.6,1.0)\r\n    // screenScaleMultiplier: screenScaleMultiplier,\r\n  };\r\n\r\n  const [dragging, setDragging] = useState(false);\r\n\r\n  const gtb = genericTouchBind({\r\n    domTarget: canvasRef,\r\n    controls: props.controls,\r\n    // gl: gl,\r\n    setDragging: setDragging,\r\n  });\r\n\r\n  // https://use-gesture.netlify.app/docs/changelog/#breaking\r\n  // When adding events directly to the dom element using `domTarget`\r\n  // you no longer need to clean the effect yourself.\r\n  // const touchBind =\r\n  useGesture(gtb.handlers, gtb.config);\r\n\r\n  // useEffect(() => {\r\n  //   touchBind();\r\n  // }, [touchBind]);\r\n\r\n  const [fps, setFps] = useState('');\r\n\r\n  return (\r\n    <SettingsContext.Consumer>\r\n      {({ settings }) => (\r\n        <div\r\n          className=\"renderer\"\r\n          style={{\r\n            position: 'relative',\r\n          }}\r\n        >\r\n          <FPSCard fps={fps} show={settings.showFPS} />\r\n          <WebGLCanvas\r\n            id=\"mandelbrot-canvas\"\r\n            fragShader={fragShader}\r\n            useDPR={settings.useDPR}\r\n            // touchBind={touchBind}\r\n            u={u}\r\n            ref={canvasRef}\r\n            // glRef={gl}\r\n            fps={setFps}\r\n            dragging={dragging}\r\n          />\r\n          <MinimapViewer\r\n            id=\"mandelbrot-minimap-canvas\"\r\n            fragShader={miniFragShader}\r\n            useDPR={settings.useDPR}\r\n            u={u}\r\n            canvasRef={miniCanvasRef}\r\n            // glRef={miniGl}\r\n            show={settings.showMinimap}\r\n            onClick={() => setControlZoom({ z: 1 })}\r\n          />\r\n        </div>\r\n      )}\r\n    </SettingsContext.Consumer>\r\n  );\r\n}\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","// https://felixgerschau.com/create-a-pwa-update-notification-with-create-react-app/\r\n\r\nimport { Button, Snackbar } from '@material-ui/core';\r\nimport Alert from '@material-ui/lab/Alert';\r\nimport React, { FC, useEffect } from 'react';\r\nimport * as serviceWorker from '../serviceWorker';\r\n\r\nconst ServiceWorkerWrapper: FC = () => {\r\n  const [showReload, setShowReload] = React.useState(false);\r\n  const [waitingWorker, setWaitingWorker] = React.useState<ServiceWorker | null>(null);\r\n\r\n  const onSWUpdate = (registration: ServiceWorkerRegistration) => {\r\n    console.log('Out of date version detected! Triggering snackbar.');\r\n    setShowReload(true);\r\n    setWaitingWorker(registration.waiting);\r\n  };\r\n\r\n  useEffect(() => {\r\n    console.log('Registering Service Worker for update detection...');\r\n    serviceWorker.register({ onUpdate: onSWUpdate });\r\n  }, []);\r\n\r\n  const reloadPage = () => {\r\n    // optional chaining was not working here...\r\n    // https://www.typescriptlang.org/docs/handbook/release-notes/typescript-3-7.html\r\n    waitingWorker && waitingWorker.postMessage({ type: 'SKIP_WAITING' });\r\n    setShowReload(false);\r\n    // reload(b: Boolean) is deprecated\r\n    window.location.reload();\r\n  };\r\n\r\n  return (\r\n    <Snackbar open={showReload} anchorOrigin={{ vertical: 'top', horizontal: 'center' }}>\r\n      <Alert\r\n        severity=\"info\"\r\n        action={\r\n          <Button color=\"inherit\" variant=\"outlined\" size=\"small\" onClick={reloadPage}>\r\n            Update\r\n          </Button>\r\n        }\r\n      >\r\n        A new version is available!\r\n      </Alert>\r\n    </Snackbar>\r\n  );\r\n};\r\n\r\nexport default ServiceWorkerWrapper;\r\n","import {\r\n  Backdrop,\r\n  Divider,\r\n  Fab,\r\n  FormControlLabel,\r\n  FormControlLabelProps,\r\n  FormGroup,\r\n  Grid,\r\n  makeStyles,\r\n  Popover,\r\n  Typography,\r\n} from '@material-ui/core';\r\nimport Button from '@material-ui/core/Button';\r\nimport { SvgIconComponent } from '@material-ui/icons';\r\nimport InfoIcon from '@material-ui/icons/Info';\r\nimport MyLocationIcon from '@material-ui/icons/MyLocation';\r\nimport SettingsIcon from '@material-ui/icons/Settings';\r\nimport React, { useState } from 'react';\r\nimport { SettingsMenuProps } from '../../common/settings';\r\n// react-colorful requires style imports\r\n// import 'react-colorful/dist/index.css';\r\nimport '../../css/react-colorful.css';\r\nimport { contrastBoxShadow } from '../../theme/theme';\r\nimport { SettingsContext } from './SettingsContext';\r\nimport { getSettingsWidgetsGrouping } from './SettingsDefinitions';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    position: 'absolute',\r\n    bottom: theme.spacing(2),\r\n    right: theme.spacing(2),\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    zIndex: 2,\r\n  },\r\n  settingsButton: {\r\n    boxShadow: contrastBoxShadow,\r\n  },\r\n  popoverCardGrid: {\r\n    paddingTop: 24,\r\n    paddingBottom: 16,\r\n    paddingRight: 24,\r\n    paddingLeft: 24,\r\n  },\r\n  sliderControl: {\r\n    width: 30,\r\n  },\r\n}));\r\n\r\nconst GroupDivider = () => <Divider style={{ marginTop: 8, marginBottom: 12 }} />;\r\nconst GroupTitle = (props: { title: string; icon: SvgIconComponent }) => (\r\n  <Grid container alignItems=\"center\" justify=\"center\" spacing={1}>\r\n    {/* remove margin to center based only on text and not icon (not ideal) */}\r\n    <Grid item style={{ marginLeft: -24 }}>\r\n      <props.icon color=\"primary\" fontSize=\"small\" />\r\n    </Grid>\r\n    <Grid item>\r\n      <Typography color=\"primary\" variant=\"button\" style={{ fontSize: 14 }}>\r\n        {props.title}\r\n      </Typography>\r\n    </Grid>\r\n  </Grid>\r\n);\r\n\r\nexport default function SettingsMenu(props: SettingsMenuProps): JSX.Element {\r\n  const classes = useStyles();\r\n\r\n  const [anchorEl, setAnchorEl] = useState<EventTarget & HTMLButtonElement>();\r\n\r\n  const ResetButton = () => (\r\n    <Button\r\n      startIcon={<MyLocationIcon />}\r\n      color=\"secondary\"\r\n      aria-controls=\"reset\"\r\n      onClick={() => {\r\n        props.reset();\r\n      }}\r\n    >\r\n      Reset\r\n    </Button>\r\n  );\r\n  const AboutButton = () => (\r\n    <Button\r\n      startIcon={<InfoIcon />}\r\n      color=\"primary\"\r\n      aria-controls=\"about\"\r\n      onClick={() => {\r\n        props.toggleInfo();\r\n        setAnchorEl(undefined);\r\n      }}\r\n    >\r\n      About\r\n    </Button>\r\n  );\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Fab\r\n        aria-controls=\"menu\"\r\n        aria-haspopup=\"true\"\r\n        aria-label=\"settings\"\r\n        size=\"small\"\r\n        onClick={(e) => setAnchorEl(e.currentTarget)}\r\n        // style={{\r\n        //   boxShadow: heavyBoxShadow,\r\n        // }}\r\n        className={classes.settingsButton}\r\n      >\r\n        <SettingsIcon />\r\n      </Fab>\r\n      <Backdrop open={Boolean(anchorEl)}>\r\n        <Popover\r\n          id=\"menu\"\r\n          anchorEl={anchorEl}\r\n          keepMounted\r\n          open={Boolean(anchorEl)}\r\n          onClose={() => setAnchorEl(undefined)}\r\n          anchorOrigin={{\r\n            horizontal: 'right',\r\n            vertical: 'bottom',\r\n          }}\r\n          transformOrigin={{\r\n            vertical: 'bottom',\r\n            horizontal: 'right',\r\n          }}\r\n        >\r\n          <Grid container direction=\"column\" className={classes.popoverCardGrid}>\r\n            <Grid item container alignItems=\"center\" justify=\"space-around\">\r\n              <Grid item>\r\n                <Typography variant=\"h1\" style={{ fontSize: 20 }}>\r\n                  Configuration\r\n                </Typography>\r\n              </Grid>\r\n            </Grid>\r\n            <SettingsContext.Consumer>\r\n              {({ setSettings, settingsWidgets }) =>\r\n                getSettingsWidgetsGrouping(settingsWidgets).map((g) => (\r\n                  <Grid item key={g.name}>\r\n                    <GroupDivider />\r\n                    <GroupTitle icon={g.icon} title={g.name} />\r\n                    <FormGroup>\r\n                      {Object.entries(g.widgets).map(([k, widget]) => (\r\n                        <FormControlLabel\r\n                          key={`${k}-control`}\r\n                          style={{ userSelect: 'none' }}\r\n                          {...(widget as FormControlLabelProps)}\r\n                          // ...e catches all event arguments\r\n                          onChange={(...e) => {\r\n                            // the value is the last element of the \"e\" array\r\n                            // https://stackoverflow.com/a/12099341/9184658\r\n                            // > using destructuring is nice too:\r\n                            // > const [lastItem] = arr.slice(-1)\r\n                            // > – diachedelic Mar 11 '19 at 6:30\r\n                            const [val] = e.slice(-1);\r\n                            console.debug(`${k} ->`, val);\r\n                            // TODO: updating state like this seems to be very slow\r\n                            // either have individual useState pairs, or use a Map?\r\n                            setSettings((prevState) => ({\r\n                              ...prevState,\r\n                              [k]: val,\r\n                            }));\r\n                          }}\r\n                        />\r\n                      ))}\r\n                    </FormGroup>\r\n                  </Grid>\r\n                ))\r\n              }\r\n            </SettingsContext.Consumer>\r\n\r\n            <GroupDivider />\r\n\r\n            <Grid\r\n              container\r\n              direction=\"row\"\r\n              justify=\"space-between\"\r\n              alignItems=\"stretch\"\r\n              spacing={1}\r\n            >\r\n              <Grid item>\r\n                <ResetButton />\r\n              </Grid>\r\n              <Grid item>\r\n                <AboutButton />\r\n              </Grid>\r\n            </Grid>\r\n          </Grid>\r\n        </Popover>\r\n      </Backdrop>\r\n    </div>\r\n  );\r\n}\r\n","import { Grid, ThemeProvider } from '@material-ui/core';\r\nimport React, { useCallback, useEffect, useMemo, useState } from 'react';\r\nimport { useSpring } from 'react-spring';\r\nimport './App.css';\r\nimport {\r\n  currentLocation,\r\n  useHashLocation,\r\n  useHashNavigator,\r\n  ViewerURLManager,\r\n} from './common/routing';\r\nimport {\r\n  ViewerControlSprings,\r\n  ViewerLocation,\r\n  ViewerRotationControl,\r\n  ViewerXYControl,\r\n  ViewerZoomControl,\r\n} from './common/types';\r\nimport { useWindowSize, warpToPoint } from './common/utils';\r\nimport { springsConfigs, viewerOrigin } from './common/values';\r\nimport CoordinateInterface from './components/info/CoordinateInterface';\r\nimport InfoDialog from './components/info/InfoDialog';\r\nimport JuliaRenderer from './components/render/JuliaRenderer';\r\n// import 'typeface-roboto';\r\nimport MandelbrotRenderer from './components/render/MandelbrotRenderer';\r\nimport ServiceWorkerWrapper from './components/ServiceWorkerWrapper';\r\nimport SettingsProvider, { SettingsContext } from './components/settings/SettingsContext';\r\nimport SettingsMenu from './components/settings/SettingsMenu';\r\nimport theme from './theme/theme';\r\n\r\nfunction App(): JSX.Element {\r\n  const size = useWindowSize();\r\n\r\n  // if app is started with a hash location, assume\r\n  // it should be the starting position\r\n  // detects hash updates\r\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\r\n  const [loc, navigate] = useHashLocation();\r\n\r\n  // non-reloading hash update\r\n  const updateBrowserHash = useHashNavigator();\r\n\r\n  const urlManager = useMemo(() => new ViewerURLManager(), []);\r\n\r\n  // generic callback\r\n  const updateHash = useCallback(\r\n    (name: string, v: Partial<ViewerLocation>) => {\r\n      urlManager.updateViewer(name, v);\r\n      const u = urlManager.asFullHashURL();\r\n      // console.debug(`Updated # for ${name} => ${u}`);\r\n      updateBrowserHash(u);\r\n    },\r\n    [updateBrowserHash, urlManager],\r\n  );\r\n\r\n  // callbacks for springs to update url when animation stops\r\n  const updateM = (v: Partial<ViewerLocation>) => updateHash('m', v);\r\n  const updateJ = (v: Partial<ViewerLocation>) => updateHash('j', v);\r\n\r\n  const mandelbrotControls: ViewerControlSprings = {\r\n    xyCtrl: useSpring<ViewerXYControl>(() => ({\r\n      xy: viewerOrigin.xy,\r\n      config: springsConfigs.default.xy,\r\n      onRest: updateM,\r\n    })),\r\n\r\n    zoomCtrl: useSpring<ViewerZoomControl>(() => ({\r\n      z: viewerOrigin.z,\r\n      minZoom: 0.5,\r\n      maxZoom: 100000,\r\n      config: springsConfigs.default.zoom,\r\n      onRest: updateM,\r\n    })),\r\n\r\n    rotCtrl: useSpring<ViewerRotationControl>(() => ({\r\n      theta: viewerOrigin.theta, // all angles in rad\r\n      config: springsConfigs.default.rot,\r\n      onRest: updateM,\r\n    })),\r\n  };\r\n\r\n  const juliaControls: ViewerControlSprings = {\r\n    xyCtrl: useSpring<ViewerXYControl>(() => ({\r\n      xy: viewerOrigin.xy,\r\n      config: springsConfigs.default.xy,\r\n      onRest: updateJ,\r\n    })),\r\n\r\n    zoomCtrl: useSpring<ViewerZoomControl>(() => ({\r\n      z: viewerOrigin.z,\r\n      minZoom: 0.5,\r\n      maxZoom: 2000,\r\n      config: springsConfigs.default.zoom,\r\n      onRest: updateJ,\r\n    })),\r\n\r\n    rotCtrl: useSpring<ViewerRotationControl>(() => ({\r\n      theta: viewerOrigin.theta, // all angles in rad\r\n      config: springsConfigs.default.rot,\r\n      onRest: updateJ,\r\n    })),\r\n  };\r\n\r\n  useEffect(() => {\r\n    // viewer should update if user goes back / forward on the page\r\n    // parse current location after user change\r\n    urlManager.updateFromURL();\r\n    console.log(`Warping to requested url => ${currentLocation()}`);\r\n\r\n    // warp to the newly parsed locations\r\n    warpToPoint(mandelbrotControls, urlManager.vs['m'].v);\r\n    warpToPoint(juliaControls, urlManager.vs['j'].v);\r\n    // this update process should only trigger when the hash location changes\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [loc]);\r\n\r\n  const reset = () => {\r\n    warpToPoint(mandelbrotControls, viewerOrigin);\r\n    warpToPoint(juliaControls, viewerOrigin);\r\n  };\r\n\r\n  const [showInfo, setShowInfo] = useState(false);\r\n\r\n  const toggleInfo = () => setShowInfo(!showInfo);\r\n\r\n  return (\r\n    <ThemeProvider theme={theme}>\r\n      <ServiceWorkerWrapper />\r\n      <SettingsProvider>\r\n        <Grid container>\r\n          <SettingsContext.Consumer>\r\n            {({ settings }) => (\r\n              // JSX expressions must have one parent element\r\n              <Grid\r\n                item\r\n                container\r\n                direction={\r\n                  (size.width || 1) < (size.height || 0) ? 'column-reverse' : 'row'\r\n                }\r\n                justify=\"center\"\r\n                className=\"fullSize\"\r\n                style={{\r\n                  position: 'absolute',\r\n                }}\r\n              >\r\n                <CoordinateInterface\r\n                  show={settings.showCoordinates}\r\n                  mandelbrot={mandelbrotControls}\r\n                />\r\n                <Grid item xs className=\"renderer\">\r\n                  <MandelbrotRenderer controls={mandelbrotControls} {...settings} />\r\n                </Grid>\r\n                <Grid item xs className=\"renderer\">\r\n                  <JuliaRenderer\r\n                    c={mandelbrotControls.xyCtrl[0].xy}\r\n                    controls={juliaControls}\r\n                    {...settings}\r\n                  />\r\n                </Grid>\r\n              </Grid>\r\n            )}\r\n          </SettingsContext.Consumer>\r\n\r\n          <SettingsMenu reset={() => reset()} toggleInfo={() => toggleInfo()} />\r\n\r\n          <InfoDialog ctrl={[showInfo, setShowInfo]} />\r\n        </Grid>\r\n      </SettingsProvider>\r\n    </ThemeProvider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n// import * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root'),\r\n);\r\n\r\n// The default service worker is not used: it's overridden instead\r\n// by the ServiceWorkerWrapper (ServiceWorkerWrapper.tsx)\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\n// serviceWorker.register();\r\n"],"sourceRoot":""}