// https://eslintconfig.dev/cra/typescript-prettier
// https://dev.to/benweiser/how-to-set-up-eslint-typescript-prettier-with-create-react-app-3675
// -----------
// https://www.robertcooper.me/using-eslint-and-prettier-in-a-typescript-project
{
    "env": {
        "browser": true,
        // "es2021": true,
        "jasmine": true,
        "jest": true,
        "es6": true
    },
    "extends": [
        "eslint:recommended",
        // "plugin:react/recommended",
        "plugin:@typescript-eslint/recommended",
        "react-app", // Uses the recommended rules Create React App
        "prettier/@typescript-eslint",
        "plugin:prettier/recommended"
        // "plugin:@typescript-eslint/recommended", // Uses the recommended rules from @typescript-eslint/eslint-plugin
        // "prettier/@typescript-eslint", // Uses eslint-config-prettier to disable ESLint rules from @typescript-eslint/eslint-plugin that would conflict with prettier
        // "plugin:prettier/recommended" // Should be last in the list. Enables eslint-plugin-prettier and eslint-config-prettier. This will display prettier errors as ESLint errors. Make sure this is always the last configuration in the extends array.
    ],
    "parser": "@typescript-eslint/parser",
    "parserOptions": {
        "ecmaFeatures": {
            "jsx": true // Allows for the parsing of JSX
        },
        "ecmaVersion": 2020,
        "sourceType": "module"
    },
    "plugins": [
        "react",
        "@typescript-eslint",
        "prettier"
    ],
    "settings": {
        "react": {
            "pragma": "React",
            "version": "detect"
        }
    },
    "rules": {
        "prettier/prettier": [
            "error",
            {
                "singleQuote": true
            }
        ]
        // "semi": "error"
    }
}